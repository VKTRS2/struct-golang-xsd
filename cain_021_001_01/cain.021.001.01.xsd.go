// Code generated by download. DO NOT EDIT.

package iso20022_cain_021_001_01

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AccountDetails2 struct {
	AcctNm Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AcctNm,omitempty"`
	AcctTp Exact2AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AcctTp,omitempty"`
	AcctId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AcctId,omitempty"`
}

type Action9 struct {
	Dstn       PartyType20Code  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Dstn,omitempty"`
	ActnTp     ActionType11Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ActnTp,omitempty"`
	OthrActnTp Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrActnTp,omitempty"`
	ActnInf    Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ActnInf,omitempty"`
}

// May be one of FILE, MOBL, OTHN, OTHP, PECR, POFS
type ActionDestination1Code string

// May be one of ACTV, DEAC, DISP, FUPD, PRNT, SNDM
type ActionType10Code string

// May be one of CNTI, CNIS, CNTA, CNAS, CPTR, CHDV, VIPM, TRCK, TRXR, OTHN, OTHP, SIGN
type ActionType11Code string

// May be one of APPV, BLCK, CPTR, DCLN, RQID, NDCL, RFRL, OTHN, OTHP, STUA
type ActionType8Code string

type AdditionalAction1 struct {
	Tp         ActionType10Code       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Dstn       PartyType21Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Dstn,omitempty"`
	OthrDstn   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrDstn,omitempty"`
	DstnTp     ActionDestination1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DstnTp,omitempty"`
	OthrDstnTp Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrDstnTp,omitempty"`
	DstnAdr    Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DstnAdr,omitempty"`
	Frmt       OutputFormat4Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Frmt,omitempty"`
	OthrFrmt   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrFrmt,omitempty"`
	Cntt       Content1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cntt,omitempty"`
}

type AdditionalAmounts1 struct {
	Tp     TypeOfAmount12Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	OthrTp Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Amt    Amount14           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	Labl   Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Labl,omitempty"`
}

type AdditionalData1 struct {
	Tp  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Val Max2048Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val,omitempty"`
}

type AdditionalFee1 struct {
	Tp         TypeOfAmount10Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	OthrTp     Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	FeePrgm    Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FeePrgm,omitempty"`
	FeeDscrptr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FeeDscrptr,omitempty"`
	Amt        FeeAmount2         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	Labl       Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Labl,omitempty"`
}

type AdditionalInformation20 struct {
	Rcpt     PartyType22Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcpt,omitempty"`
	OthrRcpt Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrRcpt,omitempty"`
	Trgt     []UserInterface6Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Trgt,omitempty"`
	OthrTrgt Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTrgt,omitempty"`
	Frmt     OutputFormat4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Frmt,omitempty"`
	OthrFrmt Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrFrmt,omitempty"`
	Tp       Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Val      Max20KText           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val"`
}

type AdditionalInformation22 struct {
	Rcpt PartyType19Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcpt,omitempty"`
	Trgt []UserInterface8Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Trgt,omitempty"`
	Frmt OutputFormat4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Frmt,omitempty"`
	Tp   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Val  Max20KText           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val"`
}

type AdditionalRiskData1 struct {
	Tp  Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	Val Max10KText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val"`
}

type AdditionalService1 struct {
	Tp     AdditionalServiceType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	OthrTp Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
}

// May be one of CACT, CSHB, DCCV, INTP, INTT, LOYT, OTHN, OTHP, PRST
type AdditionalServiceType1Code string

type Address1 struct {
	AdrLine1       Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AdrLine1,omitempty"`
	AdrLine2       Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AdrLine2,omitempty"`
	StrtNm         Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 StrtNm,omitempty"`
	BldgNb         Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BldgNb,omitempty"`
	PstlCd         Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PstlCd,omitempty"`
	TwnNm          Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TwnNm,omitempty"`
	CtrySubDvsnMnr Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CtrySubDvsnMnr,omitempty"`
	CtrySubDvsnMjr Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CtrySubDvsnMjr,omitempty"`
	Ctry           Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
}

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C
type Algorithm13Code string

// May be one of HS25, HS38, HS51, HS01, SH31, SH32, SH33, SH35, SHK1, SHK2
type Algorithm16Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5, CMA2, CM31, CM32, CM33, MCS3, CCA1, CCA2, CCA3
type Algorithm17Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C, DA12, DA19, DA25, N108, EA5R, EA9R, EA2R, E3DR, E36C, E36R, SD5C
type Algorithm18Code string

// May be one of ERS2, ERS1, RPSS, ECC5, ECC1, ECC4, ECC2, ECC3, ERS3, ECP2, ECP3, ECP5
type Algorithm19Code string

// May be one of HS25, HS38, HS51
type Algorithm20Code string

// May be one of EA2C, E3DC, EA9C, EA5C, EA2R, EA9R, EA5R, E3DR, E36C, E36R, SD5C
type Algorithm23Code string

// May be one of HS25, HS38, HS51
type Algorithm5Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification18 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter9     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification19 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter10    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification20 struct {
	Algo  Algorithm19Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter11     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification21 struct {
	Algo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
}

type AlgorithmIdentification22 struct {
	Algo  Algorithm17Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification23 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification24 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification25 struct {
	Algo  Algorithm23Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification26 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Algorithm5Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification27 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter13    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type AlgorithmIdentification28 struct {
	Algo  Algorithm13Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	Param Parameter14     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Param,omitempty"`
}

type Amount14 struct {
	Amt float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	Ccy ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ccy,omitempty"`
	Sgn bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sgn,omitempty"`
}

type Amount4 struct {
	Amt      float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	Ccy      ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ccy,omitempty"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 XchgRate,omitempty"`
	QtnDt    ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 QtnDt,omitempty"`
}

type Amount5 struct {
	Amt float64 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	Sgn bool    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sgn,omitempty"`
}

type ApprovalData1 struct {
	ApprvlNtty ApprovalEntity1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ApprvlNtty,omitempty"`
	ApprvlCd   Exact6AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ApprvlCd,omitempty"`
}

type ApprovalEntity1 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Tp     PartyType26Code   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	OthrTp Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Assgnr PartyType9Code    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
}

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	Rcpt        []Recipient6Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcpt"`
	MACAlgo     AlgorithmIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MAC"`
}

// May be one of APKI, ADVF, ARNB, ARPC, ARQC, ATCC, BTHD, CHSA, CHDN, CUID, DRVI, DRLN, EMAL, EMIN, EMRN, IDCN, MANU, NVSC, FBIG, FBIO, OLDA, OLDS, OFPE, FCPN, OTPW, NBIG, NPIN, OCHI, OTHN, OTHP, PPSG, PSVE, PASN, PSWD, TOKP, PKIS, PLOB, PCDV, SCRT, SCNL, CSEC, SHAF, SHAT, CPSG, SSNB, TXIN, TOKA, CDHI, TOKN, QWAC, PHOM, PWOR, THDS, ADDB, ADDS, CSCV, CRYP, BIOM, MOBL, FPIN
type AuthenticationMethod11Code string

type BatchManagementInformation1 struct {
	ColltnId         Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ColltnId,omitempty"`
	BtchId           Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BtchId"`
	MsgSeqNb         Max15NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MsgSeqNb,omitempty"`
	MsgChcksmInptVal Max140Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MsgChcksmInptVal,omitempty"`
}

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

type Capabilities1 struct {
	CardRdngCpblty       []CardDataReading7Code                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardRdngCpblty,omitempty"`
	OthrCardRdngCpblties []Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrCardRdngCpblties,omitempty"`
	CardWrtgCpblties     []CardDataWriting1Code                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardWrtgCpblties,omitempty"`
	OthrCardWrtgCpblties []Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrCardWrtgCpblties,omitempty"`
	PINLngthCpblties     float64                               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PINLngthCpblties,omitempty"`
	ApprvlCdLngth        float64                               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ApprvlCdLngth,omitempty"`
	MxScrptLngth         float64                               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MxScrptLngth,omitempty"`
	PINPadInprtv         bool                                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PINPadInprtv,omitempty"`
	CardCaptrCpbl        bool                                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardCaptrCpbl,omitempty"`
	OnLineCpblties       OnLineCapability2Code                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OnLineCpblties,omitempty"`
	MsgCpblties          []DisplayCapabilities6                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MsgCpblties,omitempty"`
	CrdhldrVrfctnCpblty  []CardholderVerificationCapabilities1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrVrfctnCpblty,omitempty"`
}

type CardData3 struct {
	PAN           Max19NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PAN,omitempty"`
	PrtctdPANInd  bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrtctdPANInd,omitempty"`
	CardSeqNb     Min2Max3NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardSeqNb,omitempty"`
	FctvDt        Max10Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FctvDt,omitempty"`
	XpryDt        Exact4NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 XpryDt,omitempty"`
	PmtAcctRef    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PmtAcctRef,omitempty"`
	PANRefIdr     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PANRefIdr,omitempty"`
	PANAcctRg     Max19NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PANAcctRg,omitempty"`
	CardCtryCd    ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardCtryCd,omitempty"`
	CardPdctTp    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPdctTp,omitempty"`
	CardPdctSubTp Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPdctSubTp,omitempty"`
	CardPrtflIdr  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPrtflIdr,omitempty"`
	AddtlCardData Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlCardData,omitempty"`
}

type CardData5 struct {
	PAN           Max19NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PAN,omitempty"`
	PrtctdPANInd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrtctdPANInd,omitempty"`
	CardSeqNb     Min2Max3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardSeqNb,omitempty"`
	PmtAcctRef    Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PmtAcctRef,omitempty"`
	PANAcctRg     Max19NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PANAcctRg,omitempty"`
	CardPrtflIdr  Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPrtflIdr,omitempty"`
	AddtlCardData Max70Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlCardData,omitempty"`
}

// May be one of CDFL, ICPY, MGST, ICCY, MICR, MLEY, OCRR, MSIP, OPTC, OTHN, RFID, UNSP, OTHP, KEEN
type CardDataReading7Code string

// May be one of ICPY, MGST, ICCY, MSIP, OTHN, UNSP, OTHP
type CardDataWriting1Code string

// May be one of OTHP, OTHN, ENVL, CHEC, CASH
type CardDepositType1Code string

type CardProgramme1 struct {
	CardPrgrmmPropsd []CardProgrammeMode2 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPrgrmmPropsd,omitempty"`
	CardPrgrmmApld   CardProgrammeMode1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPrgrmmApld,omitempty"`
}

type CardProgrammeMode1 struct {
	Tp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
}

type CardProgrammeMode2 struct {
	Tp Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Id []Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
}

type Cardholder15 struct {
	CrdhldrNm CardholderName1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrNm,omitempty"`
	Id        []Credentials1  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Adr       Address1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Adr,omitempty"`
	CtctInf   Contact1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CtctInf,omitempty"`
	DtOfBirth ISODate         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DtOfBirth,omitempty"`
}

type CardholderName1 struct {
	Nm         Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nm,omitempty"`
	GvnNm      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 GvnNm,omitempty"`
	MddlInitls Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MddlInitls,omitempty"`
	LastNm     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 LastNm,omitempty"`
}

type CardholderVerificationCapabilities1 struct {
	Cpblty     CardholderVerificationCapability5Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cpblty"`
	OthrCpblty Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrCpblty,omitempty"`
}

// May be one of APKI, NOVF, FBIG, FBIO, FDSG, FCPN, FEPN, NBIO, NPIN, OTHN, OTHP, SIGN, UNSP, VORN, PKIS, NOPN, NOOP
type CardholderVerificationCapability5Code string

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RltvDstngshdNm"`
}

type ClaimInformation1 struct {
	ClmCrdntls Max500Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ClmCrdntls,omitempty"`
	Assgnr     Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
}

type CommunicationCharacteristics3 struct {
	ComTp   POICommunicationType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ComTp"`
	RmotPty []PartyType7Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RmotPty"`
	Actv    bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Actv"`
}

type Contact1 struct {
	Nm            Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nm,omitempty"`
	HomePhneNb    PhoneNumber       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 HomePhneNb,omitempty"`
	BizPhneNb     PhoneNumber       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BizPhneNb,omitempty"`
	MobPhneNb     PhoneNumber       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MobPhneNb,omitempty"`
	OthrPhneNb    PhoneNumber       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrPhneNb,omitempty"`
	PrsnlEmailAdr Max256Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrsnlEmailAdr,omitempty"`
	BizEmailAdr   Max256Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BizEmailAdr,omitempty"`
	OthrEmailAdr  Max256Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrEmailAdr,omitempty"`
	Lang          ISO2ALanguageCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Lang,omitempty"`
}

type Contact7 struct {
	Nm     Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nm,omitempty"`
	FaxNb  PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FaxNb,omitempty"`
	TelNb  PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TelNb,omitempty"`
	Email  Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Email,omitempty"`
	URLAdr Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 URLAdr,omitempty"`
}

type Content1 struct {
	Val    Max20KText   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val"`
	Sgntr  Max140Binary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sgntr,omitempty"`
	CertId Max70Text    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CertId,omitempty"`
}

type ContentInformationType19 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CnttTp"`
	EnvlpdData   EnvelopedData5     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SgndData,omitempty"`
	DgstdData    DigestedData5      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstdData,omitempty"`
}

type ContentInformationType20 struct {
	MACData MACData1          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MACData"`
	MAC     Max8HexBinaryText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MAC"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

// May be one of EVLP, IFSE
type ContentType3Code string

type Context3 struct {
	PtOfSvcCntxt PointOfServiceContext1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PtOfSvcCntxt,omitempty"`
	TxCntxt      TransactionContext1    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxCntxt"`
	Vrfctn       []Verification2        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrfctn,omitempty"`
	RskCntxt     RiskContext1           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RskCntxt,omitempty"`
	SaleCntxt    SaleContext7           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SaleCntxt,omitempty"`
}

type Context4 struct {
	PtOfSvcCntxt PointOfServiceContext2 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PtOfSvcCntxt,omitempty"`
	TxCntxt      TransactionContext3    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxCntxt"`
	SaleCntxt    SaleContext7           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SaleCntxt,omitempty"`
}

type Credentials1 struct {
	IdCd     Identification2Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 IdCd"`
	OthrIdCd Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrIdCd,omitempty"`
	IdVal    Max70Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 IdVal"`
}

type CryptographicKey13 struct {
	Id           Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	AddtlId      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlId,omitempty"`
	Vrsn         Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn"`
	Tp           CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Fctn         []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Fctn,omitempty"`
	ActvtnDt     ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ActvtnDt,omitempty"`
	DeactvtnDt   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DeactvtnDt,omitempty"`
	KeyVal       ContentInformationType19  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyVal,omitempty"`
	KeyChckVal   Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyChckVal,omitempty"`
	AddtlMgmtInf []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlMgmtInf,omitempty"`
}

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

type Customer3 struct {
	CstmrId   Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CstmrId,omitempty"`
	Nm        Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nm,omitempty"`
	Adr       Address1       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Adr,omitempty"`
	Crdntls   []Credentials1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Crdntls,omitempty"`
	AddtlInf  Max256Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlInf,omitempty"`
	DtOfBirth ISODate        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DtOfBirth,omitempty"`
}

type CustomerDevice2 struct {
	Dvc   Device1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Dvc,omitempty"`
	Id    Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Prvdr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Prvdr,omitempty"`
}

// May be one of MOBL, OTHN, OTHP, PECR, TBLT, NSCR, SECR
type CustomerDeviceType1Code string

type DeliveryInformation2 struct {
	Ctct    Contact7 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctct,omitempty"`
	PstlAdr Address1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PstlAdr,omitempty"`
}

type DepositDetails1 struct {
	Tp     CardDepositType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	OthrTp Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Amt    Amount5              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt,omitempty"`
}

// May be one of CSHB, DONN, DCCF, EXTR, FORX, GRTY, OTHN, OTHP, SRCH, TAXT
type DetailAmount1Code string

type DetailedAmount19 struct {
	Tp             DetailAmount1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	OthrTp         Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Amt            Amount5           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	CrdhldrBllgAmt Amount5           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrBllgAmt,omitempty"`
	RcncltnAmt     Amount5           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcncltnAmt,omitempty"`
	Labl           Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Labl,omitempty"`
}

type Device1 struct {
	Tp     CustomerDeviceType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	OthrTp Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Lang   string                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Lang,omitempty"`
	PhneNb PhoneNumber             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PhneNb,omitempty"`
	Lctn   GeographicCoordinates1  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Lctn,omitempty"`
	IPAdr  Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 IPAdr,omitempty"`
	Email  Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Email,omitempty"`
}

type DigestedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Dgst"`
}

type DisplayCapabilities6 struct {
	Dstn      UserInterface1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Dstn"`
	AvlblFrmt []OutputFormat1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AvlblFrmt,omitempty"`
	NbOfLines float64             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NbOfLines,omitempty"`
	LineWidth float64             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 LineWidth,omitempty"`
	AvlblLang []string            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AvlblLang,omitempty"`
}

type DisputeData1 struct {
	PresntmntCycl  Exact1NumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PresntmntCycl,omitempty"`
	DsptCond       Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DsptCond,omitempty"`
	DsptSts        Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DsptSts,omitempty"`
	PrtlDspt       bool                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrtlDspt,omitempty"`
	DsptRef        []DisputeReference1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DsptRef,omitempty"`
	DcmnttnSts     Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DcmnttnSts,omitempty"`
	AddtlDsptData  Max1000Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlDsptData,omitempty"`
	DsptRjctRsn    []Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DsptRjctRsn,omitempty"`
	ChrgbckElgblty Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ChrgbckElgblty,omitempty"`
}

type DisputeIdentification1 struct {
	Tp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Id Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
}

type DisputeReference1 struct {
	AssgnrNtty     PartyType32Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AssgnrNtty,omitempty"`
	OthrAssgnrNtty Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrAssgnrNtty,omitempty"`
	DsptId         []DisputeIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DsptId"`
}

type Document struct {
	RtrvlInitn RetrievalInitiationV01 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RtrvlInitn"`
}

type ECommerceData1 struct {
	Tp  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	Val Max2048Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cntt,omitempty"`
}

type EncryptedContent4 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification24 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CnttNcrptnAlgo,omitempty"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdData"`
}

type EncryptedContent5 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification25 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CnttNcrptnAlgo"`
	NcrptdDataElmt []EncryptedDataElement1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdDataElmt"`
}

type EncryptedData1 struct {
	Ctrl           Exact1HexBinaryText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctrl,omitempty"`
	KeySetIdr      Max8NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeySetIdr,omitempty"`
	DrvdInf        Max32HexBinaryText      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DrvdInf,omitempty"`
	Algo           Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo,omitempty"`
	KeyLngth       Max4NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyLngth,omitempty"`
	KeyPrtcn       Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyPrtcn,omitempty"`
	KeyIndx        Max5NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyIndx,omitempty"`
	PddgMtd        Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PddgMtd,omitempty"`
	NcrptdDataFrmt Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdDataFrmt,omitempty"`
	NcrptdDataElmt []EncryptedDataElement1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdDataElmt"`
}

type EncryptedData1Choice struct {
	BinryData   Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BinryData,omitempty"`
	HexBinryVal string        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 HexBinryVal,omitempty"`
}

type EncryptedDataElement1 struct {
	Id                   ExternalEncryptedElementIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	OthrId               Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrId,omitempty"`
	NcrptdData           EncryptedData1Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdData"`
	ClearTxtDataFrmt     EncryptedDataFormat1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ClearTxtDataFrmt,omitempty"`
	OthrClearTxtDataFrmt Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrClearTxtDataFrmt,omitempty"`
}

// May be one of ASCI, BINF, EBCD, HEXF, OTHN, OTHP
type EncryptedDataFormat1Code string

// May be one of TR31, TR34, I238
type EncryptionFormat2Code string

// May be one of TR34, TR31, CTCE, CBCE
type EncryptionFormat3Code string

type EnvelopedData5 struct {
	Vrsn       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	OrgtrInf   OriginatorInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OrgtrInf,omitempty"`
	Rcpt       []Recipient6Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcpt"`
	NcrptdCntt EncryptedContent4      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdCntt,omitempty"`
}

type EnvelopedData6 struct {
	Vrsn       float64            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	Rcpt       []Recipient7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcpt"`
	NcrptdCntt EncryptedContent5  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdCntt,omitempty"`
}

type Environment13 struct {
	Acqrr  PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Acqrr"`
	Sndr   PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sndr,omitempty"`
	Rcvr   PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcvr,omitempty"`
	Accptr PartyIdentification203 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Accptr,omitempty"`
	Pyer   PartyIdentification211 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Pyer,omitempty"`
	Pyee   PartyIdentification211 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Pyee,omitempty"`
	Termnl Terminal2              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Termnl,omitempty"`
	Card   CardData5              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Card"`
	Wllt   Wallet1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Wllt,omitempty"`
	Tkn    Token1                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tkn,omitempty"`
}

type Environment6 struct {
	Acqrr    PartyIdentification198 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Acqrr,omitempty"`
	Sndr     PartyIdentification198 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sndr,omitempty"`
	Rcvr     PartyIdentification198 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcvr,omitempty"`
	Accptr   PartyIdentification199 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Accptr,omitempty"`
	Pyer     PartyIdentification211 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Pyer,omitempty"`
	Pyee     PartyIdentification211 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Pyee,omitempty"`
	Termnl   Terminal3              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Termnl,omitempty"`
	Card     CardData3              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Card"`
	CstmrDvc CustomerDevice2        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CstmrDvc,omitempty"`
	Wllt     Wallet1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Wllt,omitempty"`
	Tkn      Token1                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tkn,omitempty"`
	Crdhldr  Cardholder15           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Crdhldr,omitempty"`
}

// Must match the pattern ([0-9A-F][0-9A-F]){1}
type Exact1HexBinaryText string

// Must match the pattern [0-9]
type Exact1NumericText string

// Must match the pattern [a-zA-Z0-9]{2}
type Exact2AlphaNumericText string

// Must match the pattern [0-9]{2}
type Exact2NumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

// Must match the pattern [a-zA-Z0-9\s]{6}
type Exact6AlphaNumericText string

// Must match the pattern ([0-9A-F][0-9A-F]){1,3}
type ExternalEncryptedElementIdentification1Code string

type FeeAmount2 struct {
	Amt      float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	Ccy      ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ccy,omitempty"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 XchgRate,omitempty"`
	QtnDt    ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 QtnDt,omitempty"`
	Sgn      bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sgn,omitempty"`
}

type FinancialInstitution4 struct {
	Id           Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Nm           Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nm,omitempty"`
	Adr          Address1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Adr,omitempty"`
	Email        Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Email,omitempty"`
	URLAdr       Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 URLAdr,omitempty"`
	PhneNb       Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PhneNb,omitempty"`
	CstmrSvc     Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlCtctInf,omitempty"`
}

type FundingService1 struct {
	FndgSvc TransferService1  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FndgSvc,omitempty"`
	FndgSrc FundingSource2    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FndgSrc,omitempty"`
	ClmInf  ClaimInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ClmInf,omitempty"`
}

type FundingSource2 struct {
	SrcTp     FundingSourceType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SrcTp,omitempty"`
	OthrSrcTp Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrSrcTp,omitempty"`
	Ref       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ref,omitempty"`
}

// May be one of LOYL, OTHN, OTHP, SVNG, UVRL, CASH, CRDT, CDBT, EPRS, DBAC, CURR, CHQE, PRPD, LCDT
type FundingSourceType2Code string

type GenericIdentification172 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	Tp     PartyType17Code   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	OthrTp Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Assgnr PartyType18Code   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
}

type GenericIdentification48 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	Vrsn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Issr"`
}

type GenericInformation1 struct {
	Nm  Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nm"`
	Val Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val,omitempty"`
}

type GeographicCoordinates1 struct {
	Lat  Max16Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Lat"`
	Long Max16Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Long"`
}

// May be one of ELEC, PHYS, ELPH
type GoodsAndServices1Code string

// May be one of CRCU, FORX, OTHN, OTHP, SECS
type GoodsAndServicesSubType1Code string

type Header55 struct {
	MsgFctn        MessageFunction37Code       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MsgFctn"`
	PrtcolVrsn     Max2048Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrtcolVrsn"`
	XchgId         Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 XchgId,omitempty"`
	ReTrnsmssnCntr Max3NumericText             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ReTrnsmssnCntr,omitempty"`
	CreDtTm        ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CreDtTm"`
	BtchMgmtInf    BatchManagementInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BtchMgmtInf,omitempty"`
	InitgPty       GenericIdentification172    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 InitgPty"`
	RcptPty        GenericIdentification172    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcptPty,omitempty"`
	TracData       []AdditionalData1           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TracData,omitempty"`
	Tracblt        []Traceability7             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tracblt,omitempty"`
}

// Must match the pattern [a-z]{2,2}
type ISO2ALanguageCode string

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

// Must match the pattern [0-9]{3,3}
type ISO3NumericCurrencyCode string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

// May be one of DRID, NTID, PASS, SSYN, ARNB, OTHP, OTHN, EMAL, PHNB
type Identification2Code string

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SrlNb"`
}

type KEK5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification23 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdKey"`
}

type KEK6 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	KEKId         KEKIdentifier6            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification28 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdKey,omitempty"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DerivtnId,omitempty"`
}

type KEKIdentifier6 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyVrsn,omitempty"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DerivtnId,omitempty"`
}

type KeyTransport5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdKey"`
}

type KeyTransport6 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification27 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

type MACData1 struct {
	Ctrl         Exact1HexBinaryText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctrl"`
	KeySetIdr    Max8NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeySetIdr"`
	DrvdInf      Max32HexBinaryText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DrvdInf,omitempty"`
	Algo         Max2NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Algo"`
	KeyLngth     Max4NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyLngth,omitempty"`
	KeyPrtcn     Max2NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyPrtcn,omitempty"`
	KeyIndx      Max5NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyIndx,omitempty"`
	PddgMtd      Max2NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PddgMtd,omitempty"`
	InitlstnVctr Max32HexBinaryText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 InitlstnVctr,omitempty"`
}

// May be no more than 1000 items long
type Max1000Text string

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 10000 items long
type Max10KText string

// May be no more than 10 items long
type Max10Text string

// Must match the pattern [0-9]{1,11}
type Max11NumericText string

// Must match the pattern [0-9]{1,12}
type Max12NumericText string

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 140 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// May be no more than 16 items long
type Max16Text string

// Must match the pattern [0-9]{1,19}
type Max19NumericText string

// May be no more than 2048 items long
type Max2048Text string

// May be no more than 20000 items long
type Max20KText string

// Must match the pattern [0-9]{1,23}
type Max23NumericText string

// May be no more than 256 items long
type Max256Text string

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern ([0-9A-F][0-9A-F]){1,32}
type Max32HexBinaryText string

// May be no more than 350 items long
type Max350Text string

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,35}
type Max35NumericText string

// May be no more than 35 items long
type Max35Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

// Must match the pattern [0-9]{1,4}
type Max4NumericText string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 500 items long
type Max500Text string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must match the pattern [0-9]{1,6}
type Max6NumericText string

// May be no more than 70 items long
type Max70Text string

// Must match the pattern ([0-9A-F][0-9A-F]){1,8}
type Max8HexBinaryText string

// Must match the pattern [0-9]{1,8}
type Max8NumericText string

// May be no more than 99 items long
type Max99Text string

type MemoryCharacteristics1 struct {
	Id     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	TtlSz  float64         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TtlSz"`
	FreeSz float64         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FreeSz"`
	Unit   MemoryUnit1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Unit"`
}

// May be one of BYTE, EXAB, GIGA, KILO, MEGA, PETA, TERA
type MemoryUnit1Code string

// May be one of ADVC, NOTI, REQU, STNO, STRQ, STAD
type MessageFunction37Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must match the pattern [0-9]{2,3}
type Min2Max3NumericText string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be one of OFLN, ONLN, BOTH
type OnLineCapability2Code string

type OriginalTransaction1 struct {
	Envt     Environment6      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Envt,omitempty"`
	Cntxt    Context3          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cntxt,omitempty"`
	Tx       Transaction85     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tx,omitempty"`
	PrcgRslt ProcessingResult2 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrcgRslt,omitempty"`
}

type OriginalTransactionAmount1 struct {
	AmtQlfr        TypeOfAmount11Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AmtQlfr,omitempty"`
	TxAmt          TransactionAmount1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxAmt"`
	CrdhldrBllgAmt Amount4            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrBllgAmt,omitempty"`
	RcncltnAmt     Amount4            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcncltnAmt,omitempty"`
}

type OriginatorInformation1 struct {
	Cert []Max5000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cert,omitempty"`
}

// May be one of MREF, TEXT, HTML
type OutputFormat1Code string

// May be one of FLNM, MREF, OTHN, OTHP, SMSI, TEXT, URLI, HTML
type OutputFormat4Code string

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI, WT2G, WT3G, WT4G, WT5G
type POICommunicationType2Code string

// May be one of APPL, CERT, EVAL
type POIComponentAssessment1Code string

// May be one of WAIT, OUTD, OPER, DACT
type POIComponentStatus1Code string

// May be one of AQPP, APPR, TLPR, SCPR, SERV, TERM, DVCE, SECM, APLI, EMVK, EMVO, MDWR, DRVR, OPST, MRPR, CRTF, TMSP, SACP, SAPR
type POIComponentType5Code string

type Parameter10 struct {
	NcrptnFrmt   EncryptionFormat2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MskGnrtrAlgo,omitempty"`
}

type Parameter11 struct {
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MskGnrtrAlgo"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SaltLngth"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TrlrFld,omitempty"`
}

type Parameter12 struct {
	NcrptnFrmt   EncryptionFormat2Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BPddg,omitempty"`
}

type Parameter13 struct {
	DgstAlgo     Algorithm20Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification26 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MskGnrtrAlgo,omitempty"`
}

type Parameter14 struct {
	NcrptnFrmt   EncryptionFormat3Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BPddg,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BPddg,omitempty"`
}

type Parameter9 struct {
	DgstAlgo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo,omitempty"`
}

type PartyIdentification197 struct {
	Id      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	Assgnr  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry    ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
	AddtlId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlId,omitempty"`
}

type PartyIdentification198 struct {
	Id     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Assgnr PartyType18Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry   ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
}

type PartyIdentification199 struct {
	Id           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Assgnr       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry         ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
	AddtlId      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlId,omitempty"`
	NmAndLctn    Max99Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NmAndLctn,omitempty"`
	Adr          Address1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Adr,omitempty"`
	Email        Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Email,omitempty"`
	URLAdr       Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 URLAdr,omitempty"`
	PhneNb       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PhneNb,omitempty"`
	CstmrSvc     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlCtctInf,omitempty"`
	TaxRegnId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TaxRegnId,omitempty"`
}

type PartyIdentification200 struct {
	Id     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Tp     PartyType28Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	OthrTp Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Assgnr PartyType18Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry   ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
}

type PartyIdentification203 struct {
	Id           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	Assgnr       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry         ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
	AddtlId      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlId,omitempty"`
	NmAndLctn    Max99Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NmAndLctn"`
	Adr          Address1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Adr,omitempty"`
	Email        Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Email,omitempty"`
	URLAdr       Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 URLAdr,omitempty"`
	PhneNb       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PhneNb,omitempty"`
	CstmrSvc     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlCtctInf,omitempty"`
	TaxRegnId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TaxRegnId,omitempty"`
	AddtlData    []AdditionalData1      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlData,omitempty"`
	SpnsrdMrchnt []SponsoredMerchant1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SpnsrdMrchnt,omitempty"`
}

type PartyIdentification211 struct {
	FI    FinancialInstitution4 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FI,omitempty"`
	Cstmr Customer3             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cstmr,omitempty"`
}

// May be one of OTHN, OTHP, ACQR, ACQP, CISS, CISP, AGNT
type PartyType17Code string

// May be one of ACQR, CISS, CSCH, AGNT
type PartyType18Code string

// May be one of ACCP, ACQR, ACQP, CISS, CISP, AGNT, OTHN, OTHP
type PartyType19Code string

// May be one of ACCP, ACQR, CRDH, CISS, AGNT
type PartyType20Code string

// May be one of ACCP, CRDH, OTHN, OTHP
type PartyType21Code string

// May be one of CRDH, MERC, OTHN, OTHP, AGNT
type PartyType22Code string

// May be one of ACCP, ACQR, ICCA, CISS, DLIS, AGNT, OTHN, OTHP
type PartyType26Code string

// May be one of ACCP, ACQR, AGNT, OTHN, OTHP, WLPR, ISUR
type PartyType28Code string

// May be one of ACQR, AGNT, ISUR, OTHN, OTHP
type PartyType32Code string

// May be one of ACQR, ITAG, PCPT, TMGT, SALE
type PartyType7Code string

// May be one of ACQR, ACQP, CISS, CISP, CSCH, SCHP
type PartyType9Code string

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PointOfInteractionComponent8 struct {
	Tp       POIComponentType5Code                       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	Id       PointOfInteractionComponentIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	Sts      PointOfInteractionComponentStatus3          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sts,omitempty"`
	StdCmplc []GenericIdentification48                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 StdCmplc,omitempty"`
	Chrtcs   PointOfInteractionComponentCharacteristics4 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Chrtcs,omitempty"`
	Assmnt   []PointOfInteractionComponentAssessment1    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assmnt,omitempty"`
}

type PointOfInteractionComponentAssessment1 struct {
	Tp      POIComponentAssessment1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	Assgnr  []Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr"`
	DlvryDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DlvryDt,omitempty"`
	XprtnDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 XprtnDt,omitempty"`
	Nb      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nb"`
}

type PointOfInteractionComponentCharacteristics4 struct {
	Mmry           []MemoryCharacteristics1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Mmry,omitempty"`
	Com            []CommunicationCharacteristics3 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Com,omitempty"`
	SctyAccsMdls   float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SctyAccsMdls,omitempty"`
	SbcbrIdntyMdls float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SbcbrIdntyMdls,omitempty"`
	SctyElmt       []CryptographicKey13            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SctyElmt,omitempty"`
}

type PointOfInteractionComponentIdentification1 struct {
	ItmNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ItmNb,omitempty"`
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrvdrId,omitempty"`
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	SrlNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SrlNb,omitempty"`
}

type PointOfInteractionComponentStatus3 struct {
	VrsnNb Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 VrsnNb,omitempty"`
	Sts    POIComponentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sts,omitempty"`
	XpryDt ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 XpryDt,omitempty"`
}

type PointOfServiceContext1 struct {
	CardPres           bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPres,omitempty"`
	CrdhldrPres        bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrPres,omitempty"`
	CrdhldrActvtd      bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrActvtd,omitempty"`
	TrnspndrInittd     bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TrnspndrInittd,omitempty"`
	AttnddInd          bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AttnddInd,omitempty"`
	UattnddLvlCtgy     Max35NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 UattnddLvlCtgy,omitempty"`
	EComrcInd          bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 EComrcInd,omitempty"`
	EComrcData         []ECommerceData1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 EComrcData,omitempty"`
	MOTOInd            bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MOTOInd,omitempty"`
	PrtlApprvlSpprtd   bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrtlApprvlSpprtd,omitempty"`
	DelydAuthstnInd    bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DelydAuthstnInd,omitempty"`
	SctyChrtcs         []SecurityCharacteristics1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SctyChrtcs,omitempty"`
	OthrSctyChrtcs     Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrSctyChrtcs,omitempty"`
	CardDataNtryMd     CardDataReading7Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardDataNtryMd"`
	OthrCardDataNtryMd Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrCardDataNtryMd,omitempty"`
	StorgLctn          Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 StorgLctn,omitempty"`
	SpclConds          []SpecialConditions1           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SpclConds,omitempty"`
}

type PointOfServiceContext2 struct {
	CardPres           bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPres,omitempty"`
	CrdhldrPres        bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrPres,omitempty"`
	CrdhldrActvtd      bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrActvtd,omitempty"`
	TrnspndrInittd     bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TrnspndrInittd,omitempty"`
	AttnddInd          bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AttnddInd,omitempty"`
	UattnddLvlCtgy     Max35NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 UattnddLvlCtgy,omitempty"`
	EComrcInd          bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 EComrcInd,omitempty"`
	EComrcData         []ECommerceData1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 EComrcData,omitempty"`
	MOTOInd            bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MOTOInd,omitempty"`
	PrtlApprvlSpprtd   bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrtlApprvlSpprtd,omitempty"`
	DelydAuthstnInd    bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DelydAuthstnInd,omitempty"`
	SctyChrtcs         []SecurityCharacteristics1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SctyChrtcs,omitempty"`
	OthrSctyChrtcs     Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrSctyChrtcs,omitempty"`
	CardDataNtryMd     CardDataReading7Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardDataNtryMd,omitempty"`
	OthrCardDataNtryMd Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrCardDataNtryMd,omitempty"`
	StorgLctn          Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 StorgLctn,omitempty"`
	SpclConds          []SpecialConditions1           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SpclConds,omitempty"`
}

// May be one of URGT, HIGH, NORM
type Priority3Code string

type ProcessingResult2 struct {
	ApprvlData    ApprovalData1             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ApprvlData,omitempty"`
	RsltData      ResultData1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RsltData,omitempty"`
	OrgnlRsltData ResultData1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OrgnlRsltData,omitempty"`
	ActnReqrd     bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ActnReqrd,omitempty"`
	Actn          []Action9                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Actn,omitempty"`
	AddtlActn     []AdditionalAction1       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlActn,omitempty"`
	AddtlInf      []AdditionalInformation20 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlInf,omitempty"`
}

type ProtectedData1 struct {
	CnttTp     ContentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CnttTp"`
	EnvlpdData EnvelopedData6   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 EnvlpdData,omitempty"`
	NcrptdData EncryptedData1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcrptdData,omitempty"`
}

// May be one of EMAL, OTHR, PAPR, SMSM, URID
type ReceiptType1Code string

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 IssrAndSrlNb,omitempty"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyIdr,omitempty"`
}

type Recipient6Choice struct {
	KeyTrnsprt KeyTransport5  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyTrnsprt,omitempty"`
	KEK        KEK5           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KEK,omitempty"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyIdr,omitempty"`
}

type Recipient7Choice struct {
	KeyTrnsprt KeyTransport6  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyTrnsprt,omitempty"`
	KEK        KEK6           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KEK,omitempty"`
	KeyIdr     KEKIdentifier6 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 KeyIdr,omitempty"`
}

type Reconciliation3 struct {
	Id        Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Dt        ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Dt,omitempty"`
	ChckptRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ChckptRef,omitempty"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AttrVal"`
}

// May be one of PRCS, UNPR, UNRV, REJT, TECH, OTHN, OTHP
type Response8Code string

type ResultData1 struct {
	Rslt         Response8Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rslt,omitempty"`
	OthrRslt     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrRslt,omitempty"`
	RsltDtls     Exact2AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RsltDtls"`
	OthrRsltDtls Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrRsltDtls,omitempty"`
	AddtlRsltInf []AdditionalData1      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlRsltInf,omitempty"`
}

type RetrievalDeliveryMethod1Choice struct {
	ReqdMtd      []Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ReqdMtd,omitempty"`
	EstblishdMtd []Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 EstblishdMtd,omitempty"`
	ActlDlvryMtd Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ActlDlvryMtd,omitempty"`
}

type RetrievalFulfilmentInstructions1 struct {
	Mtd      RetrievalDeliveryMethod1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Mtd,omitempty"`
	DlvryInf DeliveryInformation2           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DlvryInf,omitempty"`
	AddtlInf AdditionalInformation22        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlInf,omitempty"`
}

type RetrievalInitiation1 struct {
	Envt           Environment13          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Envt"`
	Cntxt          Context4               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cntxt"`
	Tx             Transaction89          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tx,omitempty"`
	OrgnlTx        OriginalTransaction1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OrgnlTx"`
	PrtctdData     []ProtectedData1       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PrtctdData,omitempty"`
	RtrvlFlfmtDstn PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RtrvlFlfmtDstn,omitempty"`
	SplmtryData    []SupplementaryData1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SplmtryData,omitempty"`
}

type RetrievalInitiationV01 struct {
	Hdr      Header55                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Hdr"`
	Body     RetrievalInitiation1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Body"`
	SctyTrlr ContentInformationType20 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SctyTrlr,omitempty"`
}

type RiskAssessment1 struct {
	RskAssmntNtty   PartyIdentification200 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RskAssmntNtty,omitempty"`
	RskAssmntTp     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RskAssmntTp,omitempty"`
	Rsn             []Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rsn,omitempty"`
	Rslt            Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rslt,omitempty"`
	AddtlRskData    []AdditionalRiskData1  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlRskData,omitempty"`
	RcmmnddActn     []ActionType8Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcmmnddActn,omitempty"`
	OthrRcmmnddActn Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrRcmmnddActn,omitempty"`
	RcmmnddActnDtls Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcmmnddActnDtls,omitempty"`
}

type RiskAssessmentDataEntityProvider1 struct {
	Tp     PartyType28Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	OthrTp Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
}

type RiskContext1 struct {
	RskInptData []RiskInputData1  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RskInptData,omitempty"`
	RskAssmnt   []RiskAssessment1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RskAssmnt,omitempty"`
}

type RiskInputData1 struct {
	Ntty RiskAssessmentDataEntityProvider1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ntty,omitempty"`
	Tp   Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp"`
	Val  Max10KText                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val"`
}

type SaleContext7 struct {
	SaleId               Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SaleId,omitempty"`
	SaleRefId            Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SaleRefId,omitempty"`
	SaleRefNb            Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SaleRefNb,omitempty"`
	GoodsAndSvcsTp       GoodsAndServices1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 GoodsAndSvcsTp,omitempty"`
	GoodAndSvcsSubTp     GoodsAndServicesSubType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 GoodAndSvcsSubTp,omitempty"`
	GoodAndSvcsOthrSubTp Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 GoodAndSvcsOthrSubTp,omitempty"`
	SpltPmtInd           bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SpltPmtInd,omitempty"`
	RctReqInd            bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RctReqInd,omitempty"`
	RctTp                []ReceiptType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RctTp,omitempty"`
	RctDstn              Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RctDstn,omitempty"`
}

// May be one of CETE, CPTE, CENC, CMAC, ETEE, METE, MPTE, OPNN, PMAC, PKIE, PRAE, PRAM, PRVN, STAM, APTE, AETE, OTHN, OTHP
type SecurityCharacteristics1Code string

type SettlementReportingEntity1 struct {
	Tp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
}

type SettlementService1 struct {
	SttlmSvcPropsd SettlementServiceMode1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmSvcPropsd,omitempty"`
	SttlmSvcApld   SettlementServiceMode1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmSvcApld,omitempty"`
	SttlmSvcDts    SettlementServiceDate1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmSvcDts,omitempty"`
	SttlmRptgNtty  SettlementReportingEntity1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmRptgNtty,omitempty"`
}

type SettlementService2 struct {
	SttlmSvcApld  SettlementServiceMode1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmSvcApld,omitempty"`
	SttlmSvcDts   SettlementServiceDate1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmSvcDts,omitempty"`
	SttlmRptgNtty SettlementReportingEntity1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmRptgNtty,omitempty"`
}

type SettlementServiceDate1 struct {
	ReqdSttlmDt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ReqdSttlmDt,omitempty"`
	SttlmDt       ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmDt,omitempty"`
	SttlmTm       ISOTime     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmTm,omitempty"`
	SttlmPrd      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmPrd,omitempty"`
	SttlmCutOffTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmCutOffTm,omitempty"`
}

type SettlementServiceMode1 struct {
	Tp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Id        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	ShrtNm    Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
	SttlmPrty Priority3Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmPrty,omitempty"`
}

type SignedData5 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo,omitempty"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 NcpsltdCntt,omitempty"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cert,omitempty"`
	Sgnr        []Signer4                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sgnr,omitempty"`
}

type Signer4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Vrsn,omitempty"`
	SgnrId      Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SgnrId,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DgstAlgo"`
	SgndAttrbts []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SgndAttrbts,omitempty"`
	SgntrAlgo   AlgorithmIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SgntrAlgo"`
	Sgntr       Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Sgntr"`
}

type SpecialConditions1 struct {
	Id  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Val Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val,omitempty"`
}

type SpecialProgrammeDetails1 struct {
	Nm  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Nm,omitempty"`
	Val Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Val,omitempty"`
}

type SpecialProgrammeQualification1 struct {
	Prgrmm Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Prgrmm,omitempty"`
	Dtl    []SpecialProgrammeDetails1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Dtl,omitempty"`
}

type SponsoredMerchant1 struct {
	Id      PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	AddtlId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlId,omitempty"`
	CmonNm  Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CmonNm,omitempty"`
	Adr     Address1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Adr,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type Terminal2 struct {
	TermnlId TerminalIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TermnlId"`
}

type Terminal3 struct {
	TermnlId            TerminalIdentification2               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TermnlId,omitempty"`
	Cpblties            Capabilities1                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Cpblties,omitempty"`
	CrdhldrVrfctnCpblty []CardholderVerificationCapabilities1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrVrfctnCpblty,omitempty"`
	TermnlIntgtn        TerminalIntegrationCategory1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TermnlIntgtn,omitempty"`
	OutdrInd            bool                                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OutdrInd,omitempty"`
	OffPrmissInd        bool                                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OffPrmissInd,omitempty"`
	OnBrdInd            bool                                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OnBrdInd,omitempty"`
	POICmpnt            []PointOfInteractionComponent8        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 POICmpnt,omitempty"`
}

type TerminalIdentification1 struct {
	Id     Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	Assgnr Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
}

type TerminalIdentification2 struct {
	Id     Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id,omitempty"`
	Tp     TerminalType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	OthrTp Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	Assgnr Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Assgnr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ShrtNm,omitempty"`
}

// May be one of MPOI, MSLE, SSLE
type TerminalIntegrationCategory1Code string

// May be one of ATMT, MPOS, OTHN, OTHP, POST
type TerminalType1Code string

type Token1 struct {
	PmtTkn        Max19NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PmtTkn,omitempty"`
	TknXpryDt     Exact4NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TknXpryDt,omitempty"`
	TknRqstrId    Max11NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TknRqstrId,omitempty"`
	TknAssrncData Max140Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TknAssrncData,omitempty"`
	TknAssrncMtd  Max2NumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TknAssrncMtd,omitempty"`
	TknInittdInd  bool              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TknInittdInd,omitempty"`
}

type Traceability7 struct {
	RlayId      GenericIdentification172 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RlayId"`
	TracDtTmIn  ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TracDtTmIn,omitempty"`
	TracDtTmOut ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TracDtTmOut,omitempty"`
}

type Transaction85 struct {
	TxTp             Exact2AlphaNumericText           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxTp,omitempty"`
	TxSubTp          Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxSubTp,omitempty"`
	AddtlSvc         []AdditionalService1             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlSvc,omitempty"`
	TxAttr           TransactionAttribute1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxAttr,omitempty"`
	OthrTxAttr       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTxAttr,omitempty"`
	MsgRsn           []Exact4NumericText              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MsgRsn,omitempty"`
	AltrnMsgRsn      []Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AltrnMsgRsn,omitempty"`
	PreAuthstnTmLmt  Max6NumericText                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PreAuthstnTmLmt,omitempty"`
	AssoctdDataRef   Max70Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AssoctdDataRef,omitempty"`
	SpclPrgrmmQlfctn []SpecialProgrammeQualification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SpclPrgrmmQlfctn,omitempty"`
	TxId             TransactionIdentification11      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxId,omitempty"`
	DsptData         []DisputeData1                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DsptData,omitempty"`
	TxAmts           TransactionAmounts1              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxAmts,omitempty"`
	AddtlAmts        []AdditionalAmounts1             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlAmts,omitempty"`
	AddtlFees        []AdditionalFee1                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlFees,omitempty"`
	OrgnlAddtlFees   []AdditionalFee1                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OrgnlAddtlFees,omitempty"`
	DpstDtls         []DepositDetails1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DpstDtls,omitempty"`
	FndsSvcs         FundingService1                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FndsSvcs,omitempty"`
	AcctFr           AccountDetails2                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AcctFr,omitempty"`
	AcctTo           AccountDetails2                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AcctTo,omitempty"`
	TxDesc           Max1000Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxDesc,omitempty"`
	AddtlData        []AdditionalData1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlData,omitempty"`
}

type Transaction89 struct {
	MsgRsn           []Exact4NumericText                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MsgRsn,omitempty"`
	AltrnMsgRsn      []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AltrnMsgRsn,omitempty"`
	SpclPrgrmmQlfctn []SpecialProgrammeQualification1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SpclPrgrmmQlfctn,omitempty"`
	TxId             TransactionIdentification11        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxId"`
	DsptRef          []DisputeReference1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DsptRef,omitempty"`
	RtrvlFlfmtInstrs []RetrievalFulfilmentInstructions1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RtrvlFlfmtInstrs,omitempty"`
	AddtlFees        []AdditionalFee1                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlFees,omitempty"`
	TxDesc           Max1000Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxDesc,omitempty"`
	AddtlData        []AdditionalData1                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlData,omitempty"`
}

type TransactionAmount1 struct {
	Amt float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Amt"`
	Ccy ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ccy"`
}

type TransactionAmounts1 struct {
	AmtQlfr        TypeOfAmount11Code         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AmtQlfr,omitempty"`
	TxAmt          TransactionAmount1         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxAmt,omitempty"`
	CrdhldrBllgAmt Amount4                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CrdhldrBllgAmt,omitempty"`
	RcncltnAmt     Amount4                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RcncltnAmt,omitempty"`
	DtldAmt        []DetailedAmount19         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DtldAmt,omitempty"`
	OrgnlTxAmts    OriginalTransactionAmount1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OrgnlTxAmts,omitempty"`
}

// May be one of AGGR, CADB, DBRP, DFRD, INST, OTHN, OTHP, RCPT, TPUP, PPYT, INCR, PAUT, PACP, SUBR, FRCP, CPLT
type TransactionAttribute1Code string

type TransactionContext1 struct {
	MrchntCtgyCd        Exact4NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MrchntCtgyCd"`
	MrchntCtgySpcfcData Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MrchntCtgySpcfcData,omitempty"`
	CstmrCnsnt          bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CstmrCnsnt,omitempty"`
	ICCFllbckInd        bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 ICCFllbckInd,omitempty"`
	MgntcStrpFllbckInd  bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MgntcStrpFllbckInd,omitempty"`
	LatePresntmntInd    bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 LatePresntmntInd,omitempty"`
	FnlAuthstnInd       bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 FnlAuthstnInd,omitempty"`
	DfrrdDlvryInd       bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 DfrrdDlvryInd,omitempty"`
	TxInitr             TransactionInitiator1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxInitr,omitempty"`
	CardPrgrmm          CardProgramme1            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPrgrmm,omitempty"`
	SttlmSvc            SettlementService1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmSvc,omitempty"`
	Rcncltn             Reconciliation3           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcncltn,omitempty"`
	CaptrDt             ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CaptrDt,omitempty"`
}

type TransactionContext3 struct {
	MrchntCtgyCd   Exact4NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 MrchntCtgyCd,omitempty"`
	TxInitr        TransactionInitiator1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxInitr,omitempty"`
	CardPrgrmmApld CardProgrammeMode1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardPrgrmmApld,omitempty"`
	SttlmSvc       SettlementService2        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SttlmSvc,omitempty"`
	Rcncltn        Reconciliation3           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rcncltn,omitempty"`
}

type TransactionIdentification11 struct {
	LclDtTm             ISODateTime                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 LclDtTm,omitempty"`
	TmZone              Max70Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TmZone,omitempty"`
	TxRef               Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TxRef,omitempty"`
	TrnsmssnDtTm        ISODateTime                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 TrnsmssnDtTm,omitempty"`
	SysTracAudtNb       Max12NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SysTracAudtNb"`
	RtrvlRefNb          string                              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RtrvlRefNb"`
	LifeCyclSpprtInd    Exact2NumericText                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 LifeCyclSpprtInd,omitempty"`
	LifeCyclTracIdData  TransactionLifeCycleIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 LifeCyclTracIdData,omitempty"`
	LifeCyclTracIdMssng Max70Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 LifeCyclTracIdMssng,omitempty"`
	AcqrrRefData        Max99Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AcqrrRefData,omitempty"`
	AcqrrRefNb          Max23NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AcqrrRefNb,omitempty"`
	CardIssrRefData     Max1000Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 CardIssrRefData,omitempty"`
}

// May be one of MERC, CUST
type TransactionInitiator1Code string

type TransactionLifeCycleIdentification1 struct {
	Id              string            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Id"`
	AuthstnSeqNb    Exact2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AuthstnSeqNb,omitempty"`
	PresntmntSeqNb  Exact2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PresntmntSeqNb,omitempty"`
	PresntmntSeqCnt Exact2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 PresntmntSeqCnt,omitempty"`
	AuthntcnTkn     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AuthntcnTkn,omitempty"`
}

type TransferService1 struct {
	SvcPrvdr Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SvcPrvdr,omitempty"`
	SvcNm    Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SvcNm,omitempty"`
	Ref      Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ref,omitempty"`
	BizPurp  Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 BizPurp,omitempty"`
	Desc     Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Desc,omitempty"`
}

// May be one of INTC, FEEP, OTHN, OTHP, FEEA
type TypeOfAmount10Code string

// May be one of ACTL, DFLT, ESTM, MAXI, RESD, PRXY, DPST
type TypeOfAmount11Code string

// May be one of AMTH, DCNT, ISCF, CUAT, MAXI, AMTX, AMTN, AMTQ, OTHN, OTHP, RQCH, ANTA, PDCC
type TypeOfAmount12Code string

// May be one of CDSP, CRCP, MDSP, MRCP
type UserInterface1Code string

// May be one of CDSP, CRCP, MDSP, MRCP, CRDO, FILE, CHAP, MRAP, MRIN
type UserInterface6Code string

// May be one of DSPU, FILE, LOGF, OTHP, OTHN
type UserInterface8Code string

type Verification2 struct {
	Tp         AuthenticationMethod11Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	OthrTp     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrTp,omitempty"`
	SubTp      Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 SubTp,omitempty"`
	AddtlInf   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlInf,omitempty"`
	VrfctnRslt []VerificationResult1      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 VrfctnRslt,omitempty"`
}

// May be one of FAIL, FUTA, MISS, NOVF, OTHN, OTHP, PART, SUCC, ERRR
type Verification2Code string

// May be one of MERC, ACQR, AGNT, ISSR, OTHN, OTHP
type VerificationEntity1Code string

type VerificationResult1 struct {
	Tp       Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Tp,omitempty"`
	Ntty     VerificationEntity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Ntty,omitempty"`
	OthrNtty Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrNtty,omitempty"`
	Rslt     Verification2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Rslt,omitempty"`
	OthrRslt Max500Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 OthrRslt,omitempty"`
	RsltDtls []AdditionalData1       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 RsltDtls,omitempty"`
}

type Wallet1 struct {
	Prvdr         PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 Prvdr,omitempty"`
	AddtlWlltData Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.021.001.01 AddtlWlltData,omitempty"`
}

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
