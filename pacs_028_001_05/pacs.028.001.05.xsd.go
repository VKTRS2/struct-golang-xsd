// Code generated by download. DO NOT EDIT.

package iso20022_pacs_028_001_05

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

// AccountIdentification4Choice
//
// Specifies the unique identification of an account as assigned by the account servicer.
type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 IBAN,omitempty"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Othr,omitempty"`
}

// AccountSchemeName1Choice
//
// Sets of elements to identify a name of the identification scheme.
type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// ActiveOrHistoricCurrencyAndAmount
//
// A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.
type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// AddressType3Choice
//
// Choice of formats for the type of address.
type AddressType3Choice struct {
	Cd    AddressType2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// AmendmentInformationDetails14
//
// Provides further details on the list of direct debit mandate elements that have been modified when the amendment indicator has been set.
type AmendmentInformationDetails14 struct {
	OrgnlMndtId      Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlMndtId,omitempty"`
	OrgnlCdtrSchmeId PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlCdtrSchmeId,omitempty"`
	OrgnlCdtrAgt     BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlCdtrAgt,omitempty"`
	OrgnlCdtrAgtAcct CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlCdtrAgtAcct,omitempty"`
	OrgnlDbtr        PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlDbtr,omitempty"`
	OrgnlDbtrAcct    CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlDbtrAcct,omitempty"`
	OrgnlDbtrAgt     BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlDbtrAgt,omitempty"`
	OrgnlDbtrAgtAcct CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlDbtrAgtAcct,omitempty"`
	OrgnlFnlColltnDt ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlFnlColltnDt,omitempty"`
	OrgnlFrqcy       Frequency36Choice                            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlFrqcy,omitempty"`
	OrgnlRsn         MandateSetupReason1Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlRsn,omitempty"`
	OrgnlTrckgDays   Exact2NumericText                            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlTrckgDays,omitempty"`
}

// AmountType4Choice
//
// Specifies the amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
type AmountType4Choice struct {
	InstdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstdAmt,omitempty"`
	EqvtAmt  EquivalentAmount2                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 EqvtAmt,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type BICFIDec2014Identifier string

// BranchAndFinancialInstitutionIdentification6
//
// Unique and unambiguous identification of a financial institution or a branch of a financial institution.
type BranchAndFinancialInstitutionIdentification6 struct {
	FinInstnId FinancialInstitutionIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FinInstnId"`
	BrnchId    BranchData3                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 BrnchId,omitempty"`
}

// BranchData3
//
// Information that locates and identifies a specific branch of a financial institution.
type BranchData3 struct {
	Id      Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id,omitempty"`
	LEI     LEIIdentifier   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 LEI,omitempty"`
	Nm      Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nm,omitempty"`
	PstlAdr PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PstlAdr,omitempty"`
}

// CashAccount40
//
// Provides the details to identify an account.
type CashAccount40 struct {
	Id   AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id,omitempty"`
	Tp   CashAccountType2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Ccy  ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Ccy,omitempty"`
	Nm   Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nm,omitempty"`
	Prxy ProxyAccountIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prxy,omitempty"`
}

// CashAccountType2Choice
//
// Nature or use of the account.
type CashAccountType2Choice struct {
	Cd    ExternalCashAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// CategoryPurpose1Choice
//
// Specifies the high level purpose of the instruction based on a set of pre-defined categories.
// Usage: This is used by the initiating party to provide information concerning the processing of the payment. It is likely to trigger special processing by any of the agents involved in the payment chain.
type CategoryPurpose1Choice struct {
	Cd    ExternalCategoryPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// May be one of RTGS, RTNS, MPNS, BOOK
type ClearingChannel2Code string

// ClearingSystemIdentification2Choice
//
// Choice of a clearing system identifier.
type ClearingSystemIdentification2Choice struct {
	Cd    ExternalClearingSystemIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// ClearingSystemIdentification3Choice
//
// Specifies the clearing system identification.
type ClearingSystemIdentification3Choice struct {
	Cd    ExternalCashClearingSystem1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// ClearingSystemMemberIdentification2
//
// Unique identification, as assigned by a clearing system, to unambiguously identify a member of the clearing system.
type ClearingSystemMemberIdentification2 struct {
	ClrSysId ClearingSystemIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ClrSysId,omitempty"`
	MmbId    Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 MmbId"`
}

// Contact4
//
// Specifies the details of the contact person.
type Contact4 struct {
	NmPrfx    NamePrefix2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 NmPrfx,omitempty"`
	Nm        Max140Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nm,omitempty"`
	PhneNb    PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PhneNb,omitempty"`
	MobNb     PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 MobNb,omitempty"`
	FaxNb     PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FaxNb,omitempty"`
	EmailAdr  Max2048Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 EmailAdr,omitempty"`
	EmailPurp Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 EmailPurp,omitempty"`
	JobTitl   Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 JobTitl,omitempty"`
	Rspnsblty Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Rspnsblty,omitempty"`
	Dept      Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dept,omitempty"`
	Othr      []OtherContact1             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Othr,omitempty"`
	PrefrdMtd PreferredContactMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PrefrdMtd,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

// CreditTransferMandateData1
//
// Provides further details related to a credit transfer mandate signed between the creditor and the debtor.
type CreditTransferMandateData1 struct {
	MndtId       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 MndtId,omitempty"`
	Tp           MandateTypeInformation2   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	DtOfSgntr    ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DtOfSgntr,omitempty"`
	DtOfVrfctn   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DtOfVrfctn,omitempty"`
	ElctrncSgntr Max10KBinary              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ElctrncSgntr,omitempty"`
	FrstPmtDt    ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FrstPmtDt,omitempty"`
	FnlPmtDt     ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FnlPmtDt,omitempty"`
	Frqcy        Frequency36Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Frqcy,omitempty"`
	Rsn          MandateSetupReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Rsn,omitempty"`
}

// CreditorReferenceInformation2
//
// Reference information provided by the creditor to allow the identification of the underlying documents.
type CreditorReferenceInformation2 struct {
	Tp  CreditorReferenceType2 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Ref Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Ref,omitempty"`
}

// CreditorReferenceType1Choice
//
// Specifies the type of document referred by the creditor.
type CreditorReferenceType1Choice struct {
	Cd    DocumentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// CreditorReferenceType2
//
// Specifies the type of creditor reference.
type CreditorReferenceType2 struct {
	CdOrPrtry CreditorReferenceType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdOrPrtry"`
	Issr      Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// DateAndDateTime2Choice
//
// Choice between a date or a date and time format.
type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dt,omitempty"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DtTm,omitempty"`
}

// DateAndPlaceOfBirth1
//
// Date and place of birth of a person.
type DateAndPlaceOfBirth1 struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CtryOfBirth"`
}

// DatePeriod2
//
// Range of time defined by a start date and an end date.
type DatePeriod2 struct {
	FrDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FrDt"`
	ToDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ToDt"`
}

// DiscountAmountAndType1
//
// Specifies the amount with a specific type.
type DiscountAmountAndType1 struct {
	Tp  DiscountAmountType1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Amt"`
}

// DiscountAmountType1Choice
//
// Specifies the amount type.
type DiscountAmountType1Choice struct {
	Cd    ExternalDiscountAmountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

type Document struct {
	FIToFIPmtStsReq FIToFIPaymentStatusRequestV05 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FIToFIPmtStsReq"`
}

// DocumentAdjustment1
//
// Set of elements used to provide information on the amount and reason of the document adjustment.
type DocumentAdjustment1 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtDbtInd,omitempty"`
	Rsn       Max4Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Rsn,omitempty"`
	AddtlInf  Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AddtlInf,omitempty"`
}

// DocumentLineIdentification1
//
// Identifies the documents referred to in the remittance information.
type DocumentLineIdentification1 struct {
	Tp     DocumentLineType1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Nb     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nb,omitempty"`
	RltdDt ISODate           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RltdDt,omitempty"`
}

// DocumentLineInformation1
//
// Provides document line information.
type DocumentLineInformation1 struct {
	Id   []DocumentLineIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id"`
	Desc Max2048Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Desc,omitempty"`
	Amt  RemittanceAmount3             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Amt,omitempty"`
}

// DocumentLineType1
//
// Specifies the type of the document line identification.
type DocumentLineType1 struct {
	CdOrPrtry DocumentLineType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdOrPrtry"`
	Issr      Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// DocumentLineType1Choice
//
// Specifies the type of the document line identification.
type DocumentLineType1Choice struct {
	Cd    ExternalDocumentLineType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// May be one of RADM, RPIN, FXDR, DISP, PUOR, SCOR
type DocumentType3Code string

// May be one of MSIN, CNFA, DNFA, CINV, CREN, DEBN, HIRI, SBIN, CMCN, SOAC, DISP, BOLD, VCHR, AROI, TSUT, PUOR
type DocumentType6Code string

// EquivalentAmount2
//
// Amount of money to be moved between the debtor and creditor, expressed in the currency of the debtor's account, and the currency in which the amount is to be moved.
type EquivalentAmount2 struct {
	Amt      ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Amt"`
	CcyOfTrf ActiveOrHistoricCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CcyOfTrf"`
}

// Must match the pattern [0-9]{2}
type Exact2NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// May be no more than 4 items long
type ExternalAccountIdentification1Code string

// May be no more than 4 items long
type ExternalCashAccountType1Code string

// May be no more than 3 items long
type ExternalCashClearingSystem1Code string

// May be no more than 4 items long
type ExternalCategoryPurpose1Code string

// May be no more than 5 items long
type ExternalClearingSystemIdentification1Code string

// May be no more than 4 items long
type ExternalDiscountAmountType1Code string

// May be no more than 4 items long
type ExternalDocumentLineType1Code string

// May be no more than 4 items long
type ExternalFinancialInstitutionIdentification1Code string

// May be no more than 4 items long
type ExternalGarnishmentType1Code string

// May be no more than 35 items long
type ExternalLocalInstrument1Code string

// May be no more than 4 items long
type ExternalMandateSetupReason1Code string

// May be no more than 4 items long
type ExternalOrganisationIdentification1Code string

// May be no more than 4 items long
type ExternalPersonIdentification1Code string

// May be no more than 4 items long
type ExternalProxyAccountType1Code string

// May be no more than 4 items long
type ExternalPurpose1Code string

// May be no more than 4 items long
type ExternalServiceLevel1Code string

// May be no more than 4 items long
type ExternalTaxAmountType1Code string

// FIToFIPaymentStatusRequestV05
//
// Scope
// The FinancialInstitutionToFinancialInstitutionPaymentStatusRequest message is sent by the debtor agent to the creditor agent, directly or through other agents and/or a payment clearing and settlement system. It is used to request a FIToFIPaymentStatusReport message containing information on the status of a previously sent instruction.
// Usage
// The FIToFIPaymentStatusRequest message is exchanged between agents to request status information about instructions previously sent. Its usage will always be governed by a bilateral agreement between the agents.
// The FIToFIPaymentStatusRequest message can be used to request information about the status (such as rejection, acceptance) of a credit transfer instruction, a direct debit instruction, as well as other intra-agent instructions (for example FIToFIPaymentCancellationRequest).
// The FIToFIPaymentStatusRequest message refers to the original instruction(s) by means of references only or by means of references and a set of elements from the original instruction.
// The FIToFIPaymentStatusRequest message can be used in domestic and cross-border scenarios.
type FIToFIPaymentStatusRequestV05 struct {
	GrpHdr      GroupHeader91                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 GrpHdr"`
	OrgnlGrpInf []OriginalGroupInformation27 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlGrpInf,omitempty"`
	TxInf       []PaymentTransaction131      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TxInf,omitempty"`
	SplmtryData []SupplementaryData1         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SplmtryData,omitempty"`
}

// FinancialIdentificationSchemeName1Choice
//
// Sets of elements to identify a name of the organisation identification scheme.
type FinancialIdentificationSchemeName1Choice struct {
	Cd    ExternalFinancialInstitutionIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// FinancialInstitutionIdentification18
//
// Specifies the details to identify a financial institution.
type FinancialInstitutionIdentification18 struct {
	BICFI       BICFIDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 BICFI,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ClrSysMmbId,omitempty"`
	LEI         LEIIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 LEI,omitempty"`
	Nm          Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nm,omitempty"`
	PstlAdr     PostalAddress24                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PstlAdr,omitempty"`
	Othr        GenericFinancialIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Othr,omitempty"`
}

// Frequency36Choice
//
// Choice of format for a frequency, for example, the frequency of payment.
type Frequency36Choice struct {
	Tp     Frequency6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Prd    FrequencyPeriod1    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prd,omitempty"`
	PtInTm FrequencyAndMoment1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PtInTm,omitempty"`
}

// May be one of YEAR, MNTH, QURT, MIAN, WEEK, DAIL, ADHO, INDA, FRTN
type Frequency6Code string

// FrequencyAndMoment1
//
// Defines a frequency in terms a specific moment within a specified period type.
type FrequencyAndMoment1 struct {
	Tp     Frequency6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp"`
	PtInTm Exact2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PtInTm"`
}

// FrequencyPeriod1
//
// Defines a frequency in terms on counts per period for a specific period type.
type FrequencyPeriod1 struct {
	Tp        Frequency6Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp"`
	CntPerPrd float64        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CntPerPrd"`
}

// Garnishment3
//
// Provides remittance information about a payment for garnishment-related purposes.
type Garnishment3 struct {
	Tp                GarnishmentType1                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp"`
	Grnshee           PartyIdentification135            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Grnshee,omitempty"`
	GrnshmtAdmstr     PartyIdentification135            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 GrnshmtAdmstr,omitempty"`
	RefNb             Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RefNb,omitempty"`
	Dt                ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dt,omitempty"`
	RmtdAmt           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RmtdAmt,omitempty"`
	FmlyMdclInsrncInd bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FmlyMdclInsrncInd,omitempty"`
	MplyeeTermntnInd  bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 MplyeeTermntnInd,omitempty"`
}

// GarnishmentType1
//
// Specifies the type of garnishment.
type GarnishmentType1 struct {
	CdOrPrtry GarnishmentType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdOrPrtry"`
	Issr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// GarnishmentType1Choice
//
// Specifies the type of garnishment.
type GarnishmentType1Choice struct {
	Cd    ExternalGarnishmentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// GenericAccountIdentification1
//
// Information related to a generic account identification.
type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// GenericFinancialIdentification1
//
// Information related to an identification of a financial institution.
type GenericFinancialIdentification1 struct {
	Id      Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id"`
	SchmeNm FinancialIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SchmeNm,omitempty"`
	Issr    Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// GenericIdentification30
//
// Information related to an identification, for example, party identification or account identification.
type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SchmeNm,omitempty"`
}

// GenericOrganisationIdentification1
//
// Information related to an identification of an organisation.
type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// GenericPersonIdentification1
//
// Information related to an identification of a person.
type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// GroupHeader91
//
// Set of characteristics shared by all individual transactions included in the message.
type GroupHeader91 struct {
	MsgId    Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 MsgId"`
	CreDtTm  ISODateTime                                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CreDtTm"`
	InstgAgt BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstgAgt,omitempty"`
	InstdAgt BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstdAgt,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// ISODate
//
// A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

// ISODateTime
//
// A particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004" which is aligned with ISO 8601.
// Note on the time format:
// 1) beginning / end of calendar day
// 00:00:00 = the beginning of a calendar day
// 24:00:00 = the end of a calendar day
// 2) fractions of second in time format
// Decimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed.
type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

// ISOYear
//
// Year represented by YYYY (ISO 8601).
type ISOYear time.Time

func (t *ISOYear) UnmarshalText(text []byte) error {
	return (*xsdGYear)(t).UnmarshalText(text)
}
func (t ISOYear) MarshalText() ([]byte, error) {
	return xsdGYear(t).MarshalText()
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// LocalInstrument2Choice
//
// Set of elements that further identifies the type of local instruments being requested by the initiating party.
type LocalInstrument2Choice struct {
	Cd    ExternalLocalInstrument1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// MandateClassification1Choice
//
// Specifies the high level purpose of the instruction based on a set of pre-defined categories.
// Usage: This is used by the initiating party to provide information concerning the processing of the payment. It is likely to trigger special processing by any of the agents involved in the payment chain.
type MandateClassification1Choice struct {
	Cd    MandateClassification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// May be one of FIXE, USGB, VARI
type MandateClassification1Code string

// MandateRelatedData2Choice
//
// Choice of mandate related information.
type MandateRelatedData2Choice struct {
	DrctDbtMndt MandateRelatedInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DrctDbtMndt,omitempty"`
	CdtTrfMndt  CreditTransferMandateData1  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtTrfMndt,omitempty"`
}

// MandateRelatedInformation15
//
// Provides further details related to a direct debit mandate signed between the creditor and the debtor.
type MandateRelatedInformation15 struct {
	MndtId        Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 MndtId,omitempty"`
	DtOfSgntr     ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DtOfSgntr,omitempty"`
	AmdmntInd     bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AmdmntInd,omitempty"`
	AmdmntInfDtls AmendmentInformationDetails14 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AmdmntInfDtls,omitempty"`
	ElctrncSgntr  Max1025Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ElctrncSgntr,omitempty"`
	FrstColltnDt  ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FrstColltnDt,omitempty"`
	FnlColltnDt   ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FnlColltnDt,omitempty"`
	Frqcy         Frequency36Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Frqcy,omitempty"`
	Rsn           MandateSetupReason1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Rsn,omitempty"`
	TrckgDays     Exact2NumericText             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TrckgDays,omitempty"`
}

// MandateSetupReason1Choice
//
// Specifies the reason for the setup of the mandate.
type MandateSetupReason1Choice struct {
	Cd    ExternalMandateSetupReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// MandateTypeInformation2
//
// Set of elements used to further detail the information related to the type of payment.
type MandateTypeInformation2 struct {
	SvcLvl    ServiceLevel8Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SvcLvl,omitempty"`
	LclInstrm LocalInstrument2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 LclInstrm,omitempty"`
	CtgyPurp  CategoryPurpose1Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CtgyPurp,omitempty"`
	Clssfctn  MandateClassification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Clssfctn,omitempty"`
}

// May be no more than 1025 items long
type Max1025Text string

// Max10KBinary
//
// Binary data of 10K maximum.
type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 128 items long
type Max128Text string

// May be no more than 140 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// May be no more than 16 items long
type Max16Text string

// May be no more than 2048 items long
type Max2048Text string

// May be no more than 34 items long
type Max34Text string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

// May be no more than 4 items long
type Max4Text string

// May be no more than 70 items long
type Max70Text string

// May be one of DOCT, MADM, MISS, MIST, MIKS
type NamePrefix2Code string

// OrganisationIdentification29
//
// Unique and unambiguous way to identify an organisation.
type OrganisationIdentification29 struct {
	AnyBIC AnyBICDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AnyBIC,omitempty"`
	LEI    LEIIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 LEI,omitempty"`
	Othr   []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Othr,omitempty"`
}

// OrganisationIdentificationSchemeName1Choice
//
// Sets of elements to identify a name of the organisation identification scheme.
type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// OriginalGroupInformation27
//
// Set of elements used to provide information on the original group, to which the message refers.
type OriginalGroupInformation27 struct {
	OrgnlMsgId   Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlMsgId"`
	OrgnlMsgNmId Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlMsgNmId"`
	OrgnlCreDtTm ISODateTime      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlCreDtTm,omitempty"`
	OrgnlNbOfTxs Max15NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlNbOfTxs,omitempty"`
	OrgnlCtrlSum float64          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlCtrlSum,omitempty"`
}

// OriginalGroupInformation29
//
// Unique and unambiguous identifier of the group of transactions as assigned by the original instructing party.
type OriginalGroupInformation29 struct {
	OrgnlMsgId   Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlMsgId"`
	OrgnlMsgNmId Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlMsgNmId"`
	OrgnlCreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlCreDtTm,omitempty"`
}

// OriginalTransactionReference35
//
// Specifies key elements as defined in the original transaction.
type OriginalTransactionReference35 struct {
	IntrBkSttlmAmt ActiveOrHistoricCurrencyAndAmount            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 IntrBkSttlmAmt,omitempty"`
	Amt            AmountType4Choice                            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Amt,omitempty"`
	IntrBkSttlmDt  ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 IntrBkSttlmDt,omitempty"`
	ReqdColltnDt   ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ReqdColltnDt,omitempty"`
	ReqdExctnDt    DateAndDateTime2Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ReqdExctnDt,omitempty"`
	CdtrSchmeId    PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtrSchmeId,omitempty"`
	SttlmInf       SettlementInstruction11                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SttlmInf,omitempty"`
	PmtTpInf       PaymentTypeInformation27                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PmtTpInf,omitempty"`
	PmtMtd         PaymentMethod4Code                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PmtMtd,omitempty"`
	MndtRltdInf    MandateRelatedData2Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 MndtRltdInf,omitempty"`
	RmtInf         RemittanceInformation21                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RmtInf,omitempty"`
	UltmtDbtr      Party40Choice                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 UltmtDbtr,omitempty"`
	Dbtr           Party40Choice                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dbtr,omitempty"`
	DbtrAcct       CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DbtrAcct,omitempty"`
	DbtrAgt        BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DbtrAgt,omitempty"`
	DbtrAgtAcct    CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DbtrAgtAcct,omitempty"`
	CdtrAgt        BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtrAgt,omitempty"`
	CdtrAgtAcct    CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtrAgtAcct,omitempty"`
	Cdtr           Party40Choice                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cdtr,omitempty"`
	CdtrAcct       CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtrAcct,omitempty"`
	UltmtCdtr      Party40Choice                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 UltmtCdtr,omitempty"`
	Purp           Purpose2Choice                               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Purp,omitempty"`
}

// OtherContact1
//
// Communication device number or electronic address used for communication.
type OtherContact1 struct {
	ChanlTp Max4Text   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ChanlTp"`
	Id      Max128Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id,omitempty"`
}

// Party38Choice
//
// Nature or use of the account.
type Party38Choice struct {
	OrgId  OrganisationIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgId,omitempty"`
	PrvtId PersonIdentification13       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PrvtId,omitempty"`
}

// Party40Choice
//
// Identification of a person, an organisation or a financial institution.
type Party40Choice struct {
	Pty PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Pty,omitempty"`
	Agt BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Agt,omitempty"`
}

// PartyIdentification135
//
// Specifies the identification of a person or an organisation.
type PartyIdentification135 struct {
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nm,omitempty"`
	PstlAdr   PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PstlAdr,omitempty"`
	Id        Party38Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id,omitempty"`
	CtryOfRes CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CtryOfRes,omitempty"`
	CtctDtls  Contact4        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CtctDtls,omitempty"`
}

// May be one of CHK, TRF, DD, TRA
type PaymentMethod4Code string

// PaymentTransaction131
//
// Provides further details on the original transactions, to which the status report message refers.
type PaymentTransaction131 struct {
	StsReqId        Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 StsReqId,omitempty"`
	OrgnlGrpInf     OriginalGroupInformation29                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlGrpInf,omitempty"`
	OrgnlInstrId    Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlInstrId,omitempty"`
	OrgnlEndToEndId Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlEndToEndId,omitempty"`
	OrgnlTxId       Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlTxId,omitempty"`
	OrgnlUETR       UUIDv4Identifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlUETR,omitempty"`
	AccptncDtTm     ISODateTime                                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AccptncDtTm,omitempty"`
	ClrSysRef       Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ClrSysRef,omitempty"`
	InstgAgt        BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstgAgt,omitempty"`
	InstdAgt        BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstdAgt,omitempty"`
	OrgnlTxRef      OriginalTransactionReference35               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 OrgnlTxRef,omitempty"`
	SplmtryData     []SupplementaryData1                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SplmtryData,omitempty"`
}

// PaymentTypeInformation27
//
// Provides further details of the type of payment.
type PaymentTypeInformation27 struct {
	InstrPrty Priority2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstrPrty,omitempty"`
	ClrChanl  ClearingChannel2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ClrChanl,omitempty"`
	SvcLvl    []ServiceLevel8Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SvcLvl,omitempty"`
	LclInstrm LocalInstrument2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 LclInstrm,omitempty"`
	SeqTp     SequenceType3Code      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SeqTp,omitempty"`
	CtgyPurp  CategoryPurpose1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CtgyPurp,omitempty"`
}

// PersonIdentification13
//
// Unique and unambiguous way to identify a person.
type PersonIdentification13 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth1           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Othr,omitempty"`
}

// PersonIdentificationSchemeName1Choice
//
// Sets of elements to identify a name of the identification scheme.
type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

// PostalAddress24
//
// Information that locates and identifies a specific address, as defined by postal services.
type PostalAddress24 struct {
	AdrTp       AddressType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AdrTp,omitempty"`
	Dept        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dept,omitempty"`
	SubDept     Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SubDept,omitempty"`
	StrtNm      Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 StrtNm,omitempty"`
	BldgNb      Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 BldgNb,omitempty"`
	BldgNm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 BldgNm,omitempty"`
	Flr         Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Flr,omitempty"`
	PstBx       Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PstBx,omitempty"`
	Room        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Room,omitempty"`
	PstCd       Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PstCd,omitempty"`
	TwnNm       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TwnNm,omitempty"`
	TwnLctnNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TwnLctnNm,omitempty"`
	DstrctNm    Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DstrctNm,omitempty"`
	CtrySubDvsn Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CtrySubDvsn,omitempty"`
	Ctry        CountryCode        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Ctry,omitempty"`
	AdrLine     []Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AdrLine,omitempty"`
}

// May be one of LETT, MAIL, PHON, FAXX, CELL
type PreferredContactMethod1Code string

// May be one of HIGH, NORM
type Priority2Code string

// ProxyAccountIdentification1
//
// Information related to a proxy  identification of the account.
type ProxyAccountIdentification1 struct {
	Tp ProxyAccountType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Id Max2048Text             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Id"`
}

// ProxyAccountType1Choice
//
// Specifies the scheme used for the identification of an account alias.
type ProxyAccountType1Choice struct {
	Cd    ExternalProxyAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// Purpose2Choice
//
// Specifies the underlying reason for the payment transaction.
// Usage: Purpose is used by the end-customers, that is initiating party, (ultimate) debtor, (ultimate) creditor to provide information concerning the nature of the payment. Purpose is a content element, which is not used for processing by any of the agents involved in the payment chain.
type Purpose2Choice struct {
	Cd    ExternalPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// ReferredDocumentInformation7
//
// Set of elements used to identify the documents referred to in the remittance information.
type ReferredDocumentInformation7 struct {
	Tp       ReferredDocumentType4      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Nb       Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nb,omitempty"`
	RltdDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RltdDt,omitempty"`
	LineDtls []DocumentLineInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 LineDtls,omitempty"`
}

// ReferredDocumentType3Choice
//
// Specifies the type of the document referred in the remittance information.
type ReferredDocumentType3Choice struct {
	Cd    DocumentType6Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// ReferredDocumentType4
//
// Specifies the type of the document referred in the remittance information.
type ReferredDocumentType4 struct {
	CdOrPrtry ReferredDocumentType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdOrPrtry"`
	Issr      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Issr,omitempty"`
}

// RemittanceAmount2
//
// Nature of the amount and currency on a document referred to in the remittance section, typically either the original amount due/payable or the amount actually remitted for the referenced document.
type RemittanceAmount2 struct {
	DuePyblAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DuePyblAmt,omitempty"`
	DscntApldAmt      []DiscountAmountAndType1          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DscntApldAmt,omitempty"`
	CdtNoteAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtNoteAmt,omitempty"`
	TaxAmt            []TaxAmountAndType1               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxAmt,omitempty"`
	AdjstmntAmtAndRsn []DocumentAdjustment1             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AdjstmntAmtAndRsn,omitempty"`
	RmtdAmt           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RmtdAmt,omitempty"`
}

// RemittanceAmount3
//
// Nature of the amount and currency on a document referred to in the remittance section, typically either the original amount due/payable or the amount actually remitted for the referenced document.
type RemittanceAmount3 struct {
	DuePyblAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DuePyblAmt,omitempty"`
	DscntApldAmt      []DiscountAmountAndType1          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DscntApldAmt,omitempty"`
	CdtNoteAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtNoteAmt,omitempty"`
	TaxAmt            []TaxAmountAndType1               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxAmt,omitempty"`
	AdjstmntAmtAndRsn []DocumentAdjustment1             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AdjstmntAmtAndRsn,omitempty"`
	RmtdAmt           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RmtdAmt,omitempty"`
}

// RemittanceInformation21
//
// Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system.
type RemittanceInformation21 struct {
	Ustrd []Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Ustrd,omitempty"`
	Strd  []StructuredRemittanceInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Strd,omitempty"`
}

// May be one of FRST, RCUR, FNAL, OOFF, RPRE
type SequenceType3Code string

// ServiceLevel8Choice
//
// Specifies the service level of the transaction.
type ServiceLevel8Choice struct {
	Cd    ExternalServiceLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// SettlementInstruction11
//
// Provides further details on the settlement of the instruction.
type SettlementInstruction11 struct {
	SttlmMtd             SettlementMethod1Code                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SttlmMtd"`
	SttlmAcct            CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SttlmAcct,omitempty"`
	ClrSys               ClearingSystemIdentification3Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ClrSys,omitempty"`
	InstgRmbrsmntAgt     BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstgRmbrsmntAgt,omitempty"`
	InstgRmbrsmntAgtAcct CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstgRmbrsmntAgtAcct,omitempty"`
	InstdRmbrsmntAgt     BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstdRmbrsmntAgt,omitempty"`
	InstdRmbrsmntAgtAcct CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 InstdRmbrsmntAgtAcct,omitempty"`
	ThrdRmbrsmntAgt      BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ThrdRmbrsmntAgt,omitempty"`
	ThrdRmbrsmntAgtAcct  CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 ThrdRmbrsmntAgtAcct,omitempty"`
}

// May be one of INDA, INGA, COVE, CLRG
type SettlementMethod1Code string

// StructuredRemittanceInformation17
//
// Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in a structured form.
type StructuredRemittanceInformation17 struct {
	RfrdDocInf  []ReferredDocumentInformation7 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RfrdDocInf,omitempty"`
	RfrdDocAmt  RemittanceAmount2              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RfrdDocAmt,omitempty"`
	CdtrRefInf  CreditorReferenceInformation2  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CdtrRefInf,omitempty"`
	Invcr       PartyIdentification135         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Invcr,omitempty"`
	Invcee      PartyIdentification135         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Invcee,omitempty"`
	TaxRmt      TaxData1                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxRmt,omitempty"`
	GrnshmtRmt  Garnishment3                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 GrnshmtRmt,omitempty"`
	AddtlRmtInf []Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AddtlRmtInf,omitempty"`
}

// SupplementaryData1
//
// Additional information that can not be captured in the structured fields and/or any other specific block.
type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Envlp"`
}

// SupplementaryDataEnvelope1
//
// Technical component that contains the validated supplementary data information. This technical envelope allows to segregate the supplementary data information from any other information.
type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// TaxAmount3
//
// Set of elements used to provide information on the tax amount(s) of tax record.
type TaxAmount3 struct {
	Rate         float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Rate,omitempty"`
	TaxblBaseAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxblBaseAmt,omitempty"`
	TtlAmt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TtlAmt,omitempty"`
	Dtls         []TaxRecordDetails3               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dtls,omitempty"`
}

// TaxAmountAndType1
//
// Specifies the amount with a specific type.
type TaxAmountAndType1 struct {
	Tp  TaxAmountType1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Amt"`
}

// TaxAmountType1Choice
//
// Specifies the amount type.
type TaxAmountType1Choice struct {
	Cd    ExternalTaxAmountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cd,omitempty"`
	Prtry Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prtry,omitempty"`
}

// TaxAuthorisation1
//
// Details of the authorised tax paying party.
type TaxAuthorisation1 struct {
	Titl Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Titl,omitempty"`
	Nm   Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Nm,omitempty"`
}

// TaxData1
//
// Details about tax paid, or to be paid, to the government in accordance with the law, including pre-defined parameters such as thresholds and type of account.
type TaxData1 struct {
	Cdtr            TaxParty1                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Cdtr,omitempty"`
	Dbtr            TaxParty2                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dbtr,omitempty"`
	UltmtDbtr       TaxParty2                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 UltmtDbtr,omitempty"`
	AdmstnZone      Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AdmstnZone,omitempty"`
	RefNb           Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RefNb,omitempty"`
	Mtd             Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Mtd,omitempty"`
	TtlTaxblBaseAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TtlTaxblBaseAmt,omitempty"`
	TtlTaxAmt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TtlTaxAmt,omitempty"`
	Dt              ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Dt,omitempty"`
	SeqNb           float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 SeqNb,omitempty"`
	Rcrd            []TaxRecord3                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Rcrd,omitempty"`
}

// TaxParty1
//
// Details about the entity involved in the tax paid or to be paid.
type TaxParty1 struct {
	TaxId  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxId,omitempty"`
	RegnId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RegnId,omitempty"`
	TaxTp  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxTp,omitempty"`
}

// TaxParty2
//
// Details about the entity involved in the tax paid or to be paid.
type TaxParty2 struct {
	TaxId   Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxId,omitempty"`
	RegnId  Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 RegnId,omitempty"`
	TaxTp   Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxTp,omitempty"`
	Authstn TaxAuthorisation1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Authstn,omitempty"`
}

// TaxPeriod3
//
// Period of time details related to the tax payment.
type TaxPeriod3 struct {
	Yr     ISOYear              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Yr,omitempty"`
	Tp     TaxRecordPeriod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	FrToDt DatePeriod2          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FrToDt,omitempty"`
}

// TaxRecord3
//
// Set of elements used to define the tax record.
type TaxRecord3 struct {
	Tp       Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Tp,omitempty"`
	Ctgy     Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Ctgy,omitempty"`
	CtgyDtls Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CtgyDtls,omitempty"`
	DbtrSts  Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 DbtrSts,omitempty"`
	CertId   Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 CertId,omitempty"`
	FrmsCd   Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 FrmsCd,omitempty"`
	Prd      TaxPeriod3 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prd,omitempty"`
	TaxAmt   TaxAmount3 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 TaxAmt,omitempty"`
	AddtlInf Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 AddtlInf,omitempty"`
}

// TaxRecordDetails3
//
// Provides information on the individual tax amount(s) per period of the tax record.
type TaxRecordDetails3 struct {
	Prd TaxPeriod3                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Prd,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.028.001.05 Amt"`
}

// May be one of MM01, MM02, MM03, MM04, MM05, MM06, MM07, MM08, MM09, MM10, MM11, MM12, QTR1, QTR2, QTR3, QTR4, HLF1, HLF2
type TaxRecordPeriod1Code string

// Must match the pattern [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
type UUIDv4Identifier string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYear time.Time

func (t *xsdGYear) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006")
}
func (t xsdGYear) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006")
}
func (t xsdGYear) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYear) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
