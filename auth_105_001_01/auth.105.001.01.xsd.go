// Code generated by download. DO NOT EDIT.

package iso20022_auth_105_001_01

import (
	"bytes"
	"encoding/xml"
	"time"
)

type ActiveOrHistoricCurrencyAnd20DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AmountAndDirection107 struct {
	Amt ActiveOrHistoricCurrencyAnd20DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Amt"`
	Sgn bool                                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Sgn,omitempty"`
}

type AmountAndDirection53 struct {
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Amt"`
	Sgn bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Sgn,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

type CollateralData33 struct {
	NetXpsrCollstnInd bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 NetXpsrCollstnInd,omitempty"`
	CmpntTp           CollateralType6Code                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CmpntTp,omitempty"`
	CshCollCcy        ActiveOrHistoricCurrencyCode       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CshCollCcy,omitempty"`
	PricCcy           ActiveOrHistoricCurrencyCode       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PricCcy,omitempty"`
	Qlty              CollateralQualityType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Qlty,omitempty"`
	Mtrty             ContractTerm6Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mtrty,omitempty"`
	IssrJursdctn      IssuerJurisdiction1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 IssrJursdctn,omitempty"`
	Tp                SecuritiesLendingType3Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Tp,omitempty"`
	TradRpstry        OrganisationIdentification15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 TradRpstry,omitempty"`
	RcncltnFlg        ReconciliationFlag2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RcncltnFlg,omitempty"`
	RinvstdCsh        ReinvestedCashTypeAndAmount2       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RinvstdCsh,omitempty"`
}

// May be one of INVG, NIVG, NOTR, NOAP
type CollateralQualityType1Code string

// May be one of GIVE, TAKE
type CollateralRole1Code string

// May be one of GBBK, BOND, CASH, COMM, INSU, LCRE, OTHR, PHYS, SECU, STCF
type CollateralType6Code string

type ContractTerm6Choice struct {
	Opn bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Opn,omitempty"`
	Fxd TimeToMaturity2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Fxd,omitempty"`
}

type CounterpartyData86 struct {
	RptgCtrPty CounterpartyIdentification10       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RptgCtrPty,omitempty"`
	OthrCtrPty OrganisationIdentification15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OthrCtrPty,omitempty"`
	TrptyAgt   bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 TrptyAgt,omitempty"`
	AgtLndr    bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 AgtLndr,omitempty"`
}

type CounterpartyIdentification10 struct {
	Id OrganisationIdentification15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Id,omitempty"`
	Sd CollateralRole1Code                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Sd,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type Document struct {
	SctiesFincgRptgPosSetRpt SecuritiesFinancingReportingPositionSetReportV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 SctiesFincgRptgPosSetRpt"`
}

type ExposureMetrics4 struct {
	PrncplAmt        PrincipalAmount3                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PrncplAmt,omitempty"`
	LnVal            ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 LnVal,omitempty"`
	MktVal           AmountAndDirection53              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MktVal,omitempty"`
	OutsdngMrgnLnAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OutsdngMrgnLnAmt,omitempty"`
	ShrtMktValAmt    ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 ShrtMktValAmt,omitempty"`
	MrgnLn           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MrgnLn,omitempty"`
	CshCollAmt       AmountAndDirection53              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CshCollAmt,omitempty"`
	CollMktVal       AmountAndDirection53              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CollMktVal,omitempty"`
}

type ExposureMetrics5 struct {
	CshCollAmt AmountAndDirection53 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CshCollAmt,omitempty"`
	CollMktVal AmountAndDirection53 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CollMktVal,omitempty"`
}

type ExposureMetrics6 struct {
	PstdMrgnOrColl PostedMarginOrCollateral4 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PstdMrgnOrColl,omitempty"`
}

// May be one of SBSC, MGLD, SLEB, REPO
type ExposureType10Code string

// May be no more than 4 items long
type ExternalAgreementType1Code string

// May be no more than 4 items long
type ExternalRatesAndTenors1Code string

// May be no more than 4 items long
type ExternalSecuritiesLendingType1Code string

type GenericIdentification175 struct {
	Id      Max72Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Issr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type IssuerJurisdiction1Choice struct {
	CtryCd CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CtryCd,omitempty"`
	Othr   Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Othr,omitempty"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LoanData134 struct {
	CtrctTp          ExposureType10Code           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CtrctTp,omitempty"`
	Clrd             bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Clrd,omitempty"`
	PrtflCd          Max52Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PrtflCd,omitempty"`
	TradgVn          TradingVenueType1Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 TradgVn,omitempty"`
	MstrAgrmtTp      ExternalAgreementType1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MstrAgrmtTp,omitempty"`
	MtrtyDt          ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MtrtyDt,omitempty"`
	GnlColl          SpecialCollateral1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 GnlColl,omitempty"`
	Term             ContractTerm6Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Term,omitempty"`
	Rates            Rates1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Rates,omitempty"`
	PrncplAmtCcy     ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PrncplAmtCcy,omitempty"`
	PricCcy          ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PricCcy,omitempty"`
	Scty             Security49                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Scty,omitempty"`
	OutsdngMrgnLnCcy ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OutsdngMrgnLnCcy,omitempty"`
}

type MaturityTerm2 struct {
	Unit RateBasis1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Unit"`
	Val  float64        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Val"`
}

// May be no more than 105 items long
type Max105Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

// May be no more than 500 items long
type Max500Text string

// May be no more than 52 items long
type Max52Text string

// May be no more than 72 items long
type Max72Text string

type NamedPosition3 struct {
	RefDt  ISODate         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RefDt"`
	GnlInf []PositionSet16 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 GnlInf,omitempty"`
	Ln     []PositionSet17 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Ln,omitempty"`
	Coll   []PositionSet18 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Coll,omitempty"`
	Mrgn   []PositionSet20 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mrgn,omitempty"`
	Reuse  []PositionSet19 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Reuse,omitempty"`
}

// May be one of NORE
type NoReasonCode string

type OrganisationIdentification15Choice struct {
	LEI    LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 LEI,omitempty"`
	Othr   OrganisationIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Othr,omitempty"`
	AnyBIC AnyBICDec2014Identifier      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 AnyBIC,omitempty"`
}

type OrganisationIdentification38 struct {
	Id   GenericIdentification175 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Id"`
	Nm   Max105Text               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Nm,omitempty"`
	Dmcl Max500Text               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dmcl,omitempty"`
}

type PositionSet16 struct {
	Dmnsns PositionSetDimensions14 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dmnsns"`
	Mtrcs  PositionSetMetrics7     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mtrcs"`
}

type PositionSet17 struct {
	Dmnsns PositionSetDimensions14 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dmnsns"`
	Mtrcs  PositionSetMetrics13    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mtrcs"`
}

type PositionSet18 struct {
	Dmnsns PositionSetDimensions14 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dmnsns"`
	Mtrcs  PositionSetMetrics12    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mtrcs"`
}

type PositionSet19 struct {
	Dmnsns PositionSetDimensions12 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dmnsns"`
	Mtrcs  PositionSetMetrics11    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mtrcs"`
}

type PositionSet20 struct {
	Dmnsns PositionSetDimensions15 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dmnsns"`
	Mtrcs  PositionSetMetrics10    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mtrcs"`
}

type PositionSetDimensions12 struct {
	RptgCtrPty OrganisationIdentification15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RptgCtrPty,omitempty"`
	CollData   CollateralData33                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CollData,omitempty"`
	OtlrsIncl  bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OtlrsIncl,omitempty"`
}

type PositionSetDimensions14 struct {
	CtrPtyData CounterpartyData86 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CtrPtyData,omitempty"`
	LnData     LoanData134        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 LnData,omitempty"`
	CollData   CollateralData33   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CollData,omitempty"`
	OtlrsIncl  bool               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OtlrsIncl,omitempty"`
}

type PositionSetDimensions15 struct {
	RptgCtrPty  OrganisationIdentification15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RptgCtrPty,omitempty"`
	OthrCtrPty  OrganisationIdentification15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OthrCtrPty,omitempty"`
	CollPrtflId Max52Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CollPrtflId,omitempty"`
	OtlrsIncl   bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OtlrsIncl,omitempty"`
}

type PositionSetMetrics10 struct {
	VolMtrcs ExposureMetrics6 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 VolMtrcs,omitempty"`
}

type PositionSetMetrics11 struct {
	VolMtrcs        VolumeMetrics4 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 VolMtrcs,omitempty"`
	CshRinvstmtRate float64        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CshRinvstmtRate,omitempty"`
}

type PositionSetMetrics12 struct {
	VolMtrcs     VolumeMetrics6              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 VolMtrcs,omitempty"`
	HrcutOrMrgn  float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 HrcutOrMrgn,omitempty"`
	QtyOrNmnlAmt QuantityNominalValue2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 QtyOrNmnlAmt,omitempty"`
}

type PositionSetMetrics13 struct {
	VolMtrcs  VolumeMetrics5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 VolMtrcs"`
	PricMtrcs PriceMetrics3  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PricMtrcs,omitempty"`
}

type PositionSetMetrics7 struct {
	VolMtrcs VolumeMetrics5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 VolMtrcs"`
}

type PositionSetReport3Choice struct {
	DataSetActn ReportPeriodActivity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 DataSetActn,omitempty"`
	Rpt         NamedPosition3            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Rpt,omitempty"`
}

type PostedMarginOrCollateral4 struct {
	InitlMrgnPstd ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 InitlMrgnPstd,omitempty"`
	VartnMrgnPstd ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 VartnMrgnPstd,omitempty"`
	XcssCollPstd  ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 XcssCollPstd,omitempty"`
}

type PriceMetrics3 struct {
	Rates   Rates3  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Rates,omitempty"`
	LndgFee float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 LndgFee,omitempty"`
}

// May be one of PNDG, NOAP
type PriceStatus1Code string

type PrincipalAmount3 struct {
	ValDtAmt   ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 ValDtAmt,omitempty"`
	MtrtyDtAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MtrtyDtAmt,omitempty"`
}

type QuantityNominalValue2Choice struct {
	Qty     float64              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Qty,omitempty"`
	NmnlVal AmountAndDirection53 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 NmnlVal,omitempty"`
}

// May be one of DAYS, MNTH, WEEK, YEAR
type RateBasis1Code string

type Rates1Choice struct {
	Fxd  NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Fxd,omitempty"`
	Fltg ExternalRatesAndTenors1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Fltg,omitempty"`
}

type Rates3 struct {
	Fxd        float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Fxd,omitempty"`
	Fltg       float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Fltg,omitempty"`
	BuySellBck SecuritiesTransactionPrice18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 BuySellBck,omitempty"`
}

type ReconciliationFlag2 struct {
	RptTp            TradeRepositoryReportingType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RptTp,omitempty"`
	BothCtrPtiesRptg bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 BothCtrPtiesRptg,omitempty"`
	PairdSts         bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PairdSts,omitempty"`
	LnRcncltnSts     bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 LnRcncltnSts,omitempty"`
	CollRcncltnSts   bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 CollRcncltnSts,omitempty"`
	ModSts           bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 ModSts,omitempty"`
}

type ReinvestedCashTypeAndAmount2 struct {
	Tp            ReinvestmentType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Tp"`
	RinvstdCshCcy ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RinvstdCshCcy"`
}

// May be one of OTHR, OCMP, MMFT, REPM, SDPU
type ReinvestmentType1Code string

// May be one of NOTX
type ReportPeriodActivity1Code string

type ReuseValue1Choice struct {
	Actl   ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Actl,omitempty"`
	Estmtd ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Estmtd,omitempty"`
}

type SecuritiesFinancingReportingPositionSetReportV01 struct {
	AggtdPoss   PositionSetReport3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 AggtdPoss"`
	SplmtryData []SupplementaryData1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 SplmtryData,omitempty"`
}

type SecuritiesLendingType3Choice struct {
	Cd    ExternalSecuritiesLendingType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Cd,omitempty"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Prtry,omitempty"`
}

type SecuritiesTransactionPrice18Choice struct {
	MntryVal AmountAndDirection107 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MntryVal,omitempty"`
	Pctg     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Pctg,omitempty"`
	Dcml     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dcml,omitempty"`
	BsisPts  float64               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 BsisPts,omitempty"`
}

type SecuritiesTransactionPrice19Choice struct {
	MntryVal AmountAndDirection107       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MntryVal,omitempty"`
	Unit     float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Unit,omitempty"`
	Pctg     float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Pctg,omitempty"`
	Yld      float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Yld,omitempty"`
	Dcml     float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Dcml,omitempty"`
	PdgPric  PriceStatus1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PdgPric,omitempty"`
	Othr     SecuritiesTransactionPrice5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Othr,omitempty"`
}

type SecuritiesTransactionPrice5 struct {
	Val float64   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Val,omitempty"`
	Tp  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Tp,omitempty"`
}

type Security49 struct {
	Id            ISINOct2015Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Id,omitempty"`
	ClssfctnTp    CFIOct2015Identifier               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 ClssfctnTp,omitempty"`
	QtyOrNmnlVal  QuantityNominalValue2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 QtyOrNmnlVal,omitempty"`
	UnitPric      SecuritiesTransactionPrice19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 UnitPric,omitempty"`
	MktVal        AmountAndDirection53               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 MktVal,omitempty"`
	Qlty          CollateralQualityType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Qlty,omitempty"`
	Mtrty         ISODate                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Mtrty,omitempty"`
	Issr          SecurityIssuer4                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Issr,omitempty"`
	Tp            []SecuritiesLendingType3Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Tp,omitempty"`
	ExclsvArrgmnt bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 ExclsvArrgmnt,omitempty"`
}

type SecurityIssuer4 struct {
	Id           OrganisationIdentification15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Id,omitempty"`
	JursdctnCtry CountryCode                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 JursdctnCtry"`
}

// May be one of GENE, SPEC
type SpecialCollateral1Code string

// May be one of BLNK, NTAV
type SpecialPurpose2Code string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TimeToMaturity2Choice struct {
	Prd  TimeToMaturityPeriod2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Prd,omitempty"`
	Spcl SpecialPurpose2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Spcl,omitempty"`
}

type TimeToMaturityPeriod2 struct {
	Start MaturityTerm2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Start,omitempty"`
	End   MaturityTerm2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 End,omitempty"`
}

// May be one of DMST, FRGN
type TradeMarket2Code string

// May be one of SWOS, TWOS
type TradeRepositoryReportingType1Code string

type TradingVenueType1Choice struct {
	OnVn  TradeMarket2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OnVn,omitempty"`
	OffVn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 OffVn,omitempty"`
}

type VolumeMetrics4 struct {
	ReuseVal      ReuseValue1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 ReuseVal,omitempty"`
	RinvstdCshAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 RinvstdCshAmt,omitempty"`
}

type VolumeMetrics5 struct {
	NbOfTxs Max15NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 NbOfTxs,omitempty"`
	Xpsr    ExposureMetrics4 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Xpsr,omitempty"`
}

type VolumeMetrics6 struct {
	Postv ExposureMetrics5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Postv,omitempty"`
	Neg   ExposureMetrics5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.105.001.01 Neg,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}
