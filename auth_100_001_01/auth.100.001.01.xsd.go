// Code generated by download. DO NOT EDIT.

package iso20022_auth_100_001_01

import (
	"bytes"
	"encoding/xml"
	"time"
)

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type Contact9 struct {
	Nm       Max140Text  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Nm"`
	PhneNb   PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 PhneNb"`
	EmailAdr Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 EmailAdr"`
	Fctn     Max140Text  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Fctn,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DatePeriod2 struct {
	FrDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FrDt"`
	ToDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 ToDt"`
}

type Document struct {
	SttlmFlsMnthlyRpt SettlementFailsMonthlyReportV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SttlmFlsMnthlyRpt"`
}

// May be no more than 4 items long
type ExternalFinancialInstrumentIdentificationType1Code string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Cd,omitempty"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Prtry,omitempty"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// May be no more than 140 items long
type Max140Text string

// May be no more than 16 items long
type Max16Text string

// May be no more than 2048 items long
type Max2048Text string

// May be no more than 256 items long
type Max256Text string

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Tp"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

// May be one of NOTX
type ReportPeriodActivity1Code string

type SecuritiesSettlementSystemIdentification2 struct {
	SysId          Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SysId"`
	SysNm          Max140Text    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SysNm,omitempty"`
	CtryOfJursdctn CountryCode   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CtryOfJursdctn,omitempty"`
	CSDLglNm       Max140Text    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CSDLglNm,omitempty"`
	LEI            LEIIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 LEI,omitempty"`
	RspnsblPty     []Contact9    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 RspnsblPty,omitempty"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Desc,omitempty"`
}

type SettlementDailyFailureReason1Choice struct {
	DataSetActn ReportPeriodActivity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DataSetActn,omitempty"`
	Data        SettlementDailyFailureReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Data,omitempty"`
}

type SettlementDailyFailureReason3 struct {
	FaildScties SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FaildScties"`
	FaildCsh    SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FaildCsh"`
}

type SettlementDataRate2 struct {
	Vol float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Vol"`
	Val float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Val"`
}

type SettlementDataVolume2 struct {
	Vol float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Vol"`
	Val float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Val"`
}

type SettlementFailsCurrency2 struct {
	Ccy  ActiveCurrencyCode   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Ccy"`
	Data SettlementTotalData1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Data"`
}

type SettlementFailsDailyCSD1Choice struct {
	DataSetActn ReportPeriodActivity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DataSetActn,omitempty"`
	Data        SettlementFailsDailyCSD3  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Data,omitempty"`
}

type SettlementFailsDailyCSD3 struct {
	IntraCSD SettlementFailsDailyInstructionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 IntraCSD"`
	CrossCSD SettlementFailsDailyInstructionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CrossCSD"`
}

type SettlementFailsDailyData3 struct {
	RptgDt   ISODate                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 RptgDt"`
	DalyRcrd SettlementFailsDailyInstrument3 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DalyRcrd"`
}

type SettlementFailsDailyInstructionType1Choice struct {
	DataSetActn ReportPeriodActivity1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DataSetActn,omitempty"`
	Data        SettlementFailsDailyInstructionType3 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Data,omitempty"`
}

type SettlementFailsDailyInstructionType3 struct {
	DlvryVrssPmt   SettlementDailyFailureReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DlvryVrssPmt"`
	DlvryWthPmt    SettlementDailyFailureReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DlvryWthPmt"`
	PmtFreeOfDlvry SettlementDailyFailureReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 PmtFreeOfDlvry"`
	FreeOfPmt      SettlementDailyFailureReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FreeOfPmt"`
}

type SettlementFailsDailyInstrument3 struct {
	Eqty                 SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Eqty"`
	SvrgnDebt            SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SvrgnDebt"`
	Bd                   SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Bd"`
	OthrTrfblScties      SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 OthrTrfblScties"`
	XchgTraddFnds        SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 XchgTraddFnds"`
	CllctvInvstmtUdrtkgs SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CllctvInvstmtUdrtkgs"`
	MnyMktInstrm         SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 MnyMktInstrm"`
	EmssnAllwnc          SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 EmssnAllwnc"`
	Othr                 SettlementFailsDailyTransactionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Othr"`
}

type SettlementFailsDailyTransactionType1Choice struct {
	DataSetActn ReportPeriodActivity1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DataSetActn,omitempty"`
	Data        SettlementFailsDailyTransactionType3 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Data,omitempty"`
}

type SettlementFailsDailyTransactionType3 struct {
	SctiesBuyOrSell   SettlementFailsDailyCSD1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SctiesBuyOrSell"`
	CollMgmtOpr       SettlementFailsDailyCSD1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CollMgmtOpr"`
	SctiesLndgOrBrrwg SettlementFailsDailyCSD1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SctiesLndgOrBrrwg"`
	RpAgrmt           SettlementFailsDailyCSD1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 RpAgrmt"`
	Othr              SettlementFailsDailyCSD1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Othr"`
}

type SettlementFailsData3 struct {
	Ttl               SettlementTotalData1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Ttl"`
	PtcptInFail       SettlementFailsParticipantRange1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 PtcptInFail,omitempty"`
	FlsPerCcy         []SettlementFailsCurrency2       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FlsPerCcy,omitempty"`
	FlsPerFinInstrmTp SettlementFailsInstrument2       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FlsPerFinInstrmTp,omitempty"`
	SctiesInFail      SettlementFailsSecuritiesRange1  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SctiesInFail,omitempty"`
	FlsPerTxTp        SettlementFailsTransactionType2  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FlsPerTxTp,omitempty"`
	TtlSttlmPnlties   SettlementDataVolume2            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 TtlSttlmPnlties,omitempty"`
	FailrRsn          SettlementFailureReason3         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FailrRsn"`
}

type SettlementFailsInstrument2 struct {
	Eqty                 SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Eqty"`
	SvrgnDebt            SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SvrgnDebt"`
	Bd                   SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Bd"`
	OthrTrfblScties      SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 OthrTrfblScties"`
	XchgTraddFnds        SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 XchgTraddFnds"`
	CllctvInvstmtUdrtkgs SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CllctvInvstmtUdrtkgs"`
	MnyMktInstrm         SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 MnyMktInstrm"`
	EmssnAllwnc          SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 EmssnAllwnc"`
	Othr                 SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Othr"`
}

type SettlementFailsMonthlyReportV01 struct {
	RptHdr      SettlementFailsReportHeader2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 RptHdr"`
	MnthlyAggt  SettlementFailsData3         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 MnthlyAggt"`
	DalyData    []SettlementFailsDailyData3  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DalyData"`
	SplmtryData []SupplementaryData1         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SplmtryData,omitempty"`
}

type SettlementFailsParticipant1 struct {
	LEI  LEIIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 LEI"`
	Rank Max2NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Rank"`
	Aggt SettlementTotalData1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Aggt"`
}

type SettlementFailsParticipantRange1 struct {
	HghstInVol []SettlementFailsParticipant1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 HghstInVol"`
	HghstInVal []SettlementFailsParticipant1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 HghstInVal"`
}

type SettlementFailsReportHeader2 struct {
	CreDtTm        ISODateTime                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CreDtTm"`
	RptgPrd        DatePeriod2                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 RptgPrd"`
	Ccy            ActiveCurrencyCode                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Ccy"`
	RptSts         TransactionOperationType4Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 RptSts"`
	SctiesSttlmSys SecuritiesSettlementSystemIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SctiesSttlmSys"`
}

type SettlementFailsSecurities1 struct {
	FinInstrmId SecurityIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FinInstrmId"`
	Rank        Max2NumericText          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Rank"`
}

type SettlementFailsSecuritiesRange1 struct {
	HghstInVol []SettlementFailsSecurities1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 HghstInVol"`
	HghstInVal []SettlementFailsSecurities1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 HghstInVal"`
}

type SettlementFailsTransactionType2 struct {
	SctiesBuyOrSell   SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SctiesBuyOrSell"`
	CollMgmtOpr       SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 CollMgmtOpr"`
	SctiesLndgOrBrrwg SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 SctiesLndgOrBrrwg"`
	RpAgrmt           SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 RpAgrmt"`
	Othr              SettlementTotalData1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Othr"`
}

type SettlementFailureReason2 struct {
	MainRsns       Max2048Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 MainRsns"`
	EffcncyImprvmt Max2048Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 EffcncyImprvmt"`
}

type SettlementFailureReason3 struct {
	AvrgDrtn float64                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 AvrgDrtn,omitempty"`
	Desc     []SettlementFailureReason2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Desc"`
}

type SettlementTotalData1 struct {
	Sttld     SettlementDataVolume2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Sttld"`
	Faild     SettlementDataVolume2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Faild"`
	Ttl       SettlementDataVolume2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Ttl"`
	FaildRate SettlementDataRate2   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 FaildRate"`
}

type SettlementTotalData1Choice struct {
	DataSetActn ReportPeriodActivity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 DataSetActn,omitempty"`
	Data        SettlementTotalData1      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Data,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.100.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// May be one of NEWT, AMND, CANC
type TransactionOperationType4Code string

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
