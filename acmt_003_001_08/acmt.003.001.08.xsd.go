// Code generated by gen. DO NOT EDIT.

package iso20022_acmt_003_001_08

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account23 struct {
	AcctId       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctId"`
	RltdAcctDtls GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RltdAcctDtls,omitempty"`
}

type Account32 struct {
	Id       Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id,omitempty"`
	AcctSvcr PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctSvcr"`
}

type AccountDesignation1Choice struct {
	Cd    Rank1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IBAN,omitempty"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Othr,omitempty"`
}

type AccountIdentificationAndName5 struct {
	Id AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	Nm Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
}

type AccountModificationInstructionV08 struct {
	MsgId                 MessageIdentification1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MsgId"`
	PrvsRef               AdditionalReference13          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrvsRef,omitempty"`
	InstrDtls             InvestmentAccountModification4 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InstrDtls,omitempty"`
	InvstmtAcctSelctn     AccountSelection3Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InvstmtAcctSelctn"`
	ModfdInvstmtAcct      InvestmentAccount75            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdInvstmtAcct,omitempty"`
	ModfdAcctPties        []AccountParties18             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdAcctPties,omitempty"`
	ModfdIntrmies         []ModificationScope40          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdIntrmies,omitempty"`
	ModfdPlcmnt           ModificationScope43            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdPlcmnt,omitempty"`
	ModfdIsseAllcn        ModificationScope21            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdIsseAllcn,omitempty"`
	ModfdSvgsInvstmtPlan  []ModificationScope41          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdSvgsInvstmtPlan,omitempty"`
	ModfdWdrwlInvstmtPlan []ModificationScope41          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdWdrwlInvstmtPlan,omitempty"`
	ModfdCshSttlm         []CashSettlement4              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdCshSttlm,omitempty"`
	ModfdSvcLvlAgrmt      []ModificationScope44          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdSvcLvlAgrmt,omitempty"`
	ModfdAddtlInf         []ModificationScope45          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdAddtlInf,omitempty"`
	MktPrctcVrsn          MarketPracticeVersion1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MktPrctcVrsn,omitempty"`
	Xtnsn                 []Extension1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Xtnsn,omitempty"`
}

type AccountOwner3Choice struct {
	IndvOwnrId IndividualPersonIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IndvOwnrId,omitempty"`
	OrgOwnrId  PartyIdentification220                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OrgOwnrId,omitempty"`
}

// May be one of UNCO, LIPA, ENTR, CORP, CUST, EURE, PART, TRUS, GOVO, JOIT, COMO, JOIN, LLCO, NOMI, NFPO, ONIS, RGIC, SIGL
type AccountOwnershipType4Code string

type AccountParties13Choice struct {
	PmryOwnr InvestmentAccountOwnershipInformation17   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PmryOwnr,omitempty"`
	Trstee   []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Trstee,omitempty"`
	Nmnee    InvestmentAccountOwnershipInformation17   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nmnee,omitempty"`
	JntOwnr  []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 JntOwnr,omitempty"`
}

type AccountParties18 struct {
	ModScpIndctn  DataModification1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	PrncplAcctPty AccountParties13Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrncplAcctPty,omitempty"`
	ScndryOwnr    []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ScndryOwnr,omitempty"`
	Bnfcry        []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Bnfcry,omitempty"`
	PwrOfAttny    []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PwrOfAttny,omitempty"`
	LglGuardn     []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LglGuardn,omitempty"`
	CtdnForMnr    []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtdnForMnr,omitempty"`
	SucssrOnDth   []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SucssrOnDth,omitempty"`
	Admstr        []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Admstr,omitempty"`
	OthrPty       []ExtendedParty15                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OthrPty,omitempty"`
	Grntr         []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Grntr,omitempty"`
	Sttlr         []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Sttlr,omitempty"`
	SnrMggOffcl   []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SnrMggOffcl,omitempty"`
	Prtctr        []InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtctr,omitempty"`
	RegdShrhldrNm RegisteredShareholderName1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RegdShrhldrNm,omitempty"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type AccountSelection3Choice struct {
	AcctId             Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctId,omitempty"`
	OthrAcctSelctnData InvestmentAccount76 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OthrAcctSelctnData,omitempty"`
}

type AccountStatusUpdateInstruction1 struct {
	UpdInstr    AccountStatusUpdateInstruction1Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 UpdInstr"`
	UpdInstrRsn AccountStatusUpdateInstructionReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 UpdInstrRsn,omitempty"`
}

type AccountStatusUpdateInstruction1Choice struct {
	Cd    AccountStatusUpdateInstruction1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification36             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CLOS, REAC
type AccountStatusUpdateInstruction1Code string

type AccountStatusUpdateInstructionReason1 struct {
	Cd       AccountStatusUpdateInstructionReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	AddtlInf Max350Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AddtlInf,omitempty"`
}

type AccountStatusUpdateInstructionReason1Choice struct {
	NoSpcfdRsn NoReasonCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NoSpcfdRsn,omitempty"`
	Rsn        []AccountStatusUpdateInstructionReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rsn,omitempty"`
}

type AccountStatusUpdateInstructionReason2Choice struct {
	Cd    AccountStatusUpdateRequestReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification36               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CLOE
type AccountStatusUpdateRequestReason1Code string

type AccountType2Choice struct {
	Cd    FundCashAccount4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type AccountUsageType2Choice struct {
	Cd    AccountUsageType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of INVE, ISSP, SETP, TRDP
type AccountUsageType2Code string

type AccountingStatus1Choice struct {
	Cd    AccountingStatus1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of YDOM, NDOM
type AccountingStatus1Code string

type ActiveCurrencyAnd13DecimalAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalReference13 struct {
	Ref     Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Ref"`
	RefIssr PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RefIssr,omitempty"`
	MsgNm   Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MsgNm,omitempty"`
}

type AdditiononalInformation13 struct {
	Lmttn     Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Lmttn,omitempty"`
	AddtlInf  Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AddtlInf,omitempty"`
	AcctVldtn Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctVldtn,omitempty"`
	Tp        Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp,omitempty"`
	Rgltr     PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rgltr,omitempty"`
	Sts       RestrictionStatus1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Sts,omitempty"`
	Prd       DateTimePeriod2              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prd,omitempty"`
}

type AddressType1Choice struct {
	Cd    AddressType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of HOME, BIZZ
type AddressType1Code string

type AddressType2Choice struct {
	Cd    AddressType2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AlternateSecurityIdentification7 struct {
	Id    Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	IdSrc IdentificationSource1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IdSrc"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// Must match the pattern AT[0-9]{5,5}
type AustrianBankleitzahlIdentifier string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type BICFIDec2014Identifier string

type BlockedHoldingDetails2 struct {
	BlckdHldg     Holding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BlckdHldg"`
	PrtlHldgUnits float64      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrtlHldgUnits,omitempty"`
	HldgCertNb    Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 HldgCertNb,omitempty"`
}

type BlockedReason2Choice struct {
	Cd    BlockedReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of BKRP, CMMT, CNFS, MORT, PCOM, PLDG, TRPE, SANC, TRAN
type BlockedReason2Code string

type BlockedStatusReason2 struct {
	TxTp     TransactionType5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TxTp"`
	Blckd    bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Blckd"`
	Rsn      []BlockedReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rsn,omitempty"`
	AddtlInf Max350Text             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AddtlInf"`
}

type BlockedStatusReason2Choice struct {
	NoSpcfdRsn NoReasonCode           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NoSpcfdRsn,omitempty"`
	Rsn        []BlockedStatusReason2 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rsn,omitempty"`
}

// Must match the pattern (BBG)[BCDFGHJKLMNPQRSTVWXYZ\d]{8}\d
type Bloomberg2Identifier string

type BranchData4 struct {
	Id      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id,omitempty"`
	Nm      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
	PstlAdr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstlAdr,omitempty"`
}

// Must match the pattern CP[0-9]{4,4}
type CHIPSParticipantIdentifier string

// Must match the pattern CH[0-9]{6,6}
type CHIPSUniversalIdentifier string

type CRSForm1Choice struct {
	Cd    CRSFormType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CER4, CER3, CER5, CER6, CER8, CER1, CER2, CER7
type CRSFormType1Code string

type CRSSource1Choice struct {
	Cd    CRSSourceStatus1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CALC, DECL
type CRSSourceStatus1Code string

// May be one of C101, C102, C103, C104, C105, C106, C107, C108, C109, C110, C111, C112, C113, C114
type CRSStatus1Code string

type CRSStatus3Choice struct {
	Cd    CRSStatus1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type CRSStatus4 struct {
	Tp             CRSStatus3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp"`
	Src            CRSSource1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Src,omitempty"`
	XcptnlRptgCtry CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 XcptnlRptgCtry,omitempty"`
}

// Must match the pattern CA[0-9]{9,9}
type CanadianPaymentsARNIdentifier string

// May be one of CRDT, DBIT
type CardType1Code string

type CashAccount204 struct {
	SttlmCcy       ActiveCurrencyCode                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SttlmCcy"`
	Id             AccountIdentificationAndName5              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	AcctOwnr       PartyIdentification125Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctOwnr,omitempty"`
	AcctSvcr       FinancialInstitutionIdentification11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctSvcr,omitempty"`
	AcctSvcrBrnch  BranchData4                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctSvcrBrnch,omitempty"`
	AcctOwnrOthrId []GenericIdentification82                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctOwnrOthrId,omitempty"`
	InvstmtAcctTp  AccountType2Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InvstmtAcctTp,omitempty"`
	CdtDbt         CreditDebit3Code                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CdtDbt,omitempty"`
	SttlmInstrRsn  SettlementInstructionReason1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SttlmInstrRsn,omitempty"`
	CshAcctPurp    CashAccountType3Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CshAcctPurp,omitempty"`
	CshAcctDsgnt   AccountDesignation1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CshAcctDsgnt,omitempty"`
	DvddPctg       float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DvddPctg,omitempty"`
}

type CashAccountType3Choice struct {
	Cd    CashAccountType5Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of LEND, COLL, SETT, MARR, SEGT
type CashAccountType5Code string

type CashSettlement4 struct {
	ModScpIndctn     DataModification2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	CshAcctDtls      []CashAccount204      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CshAcctDtls,omitempty"`
	OthrCshSttlmDtls []PaymentInstrument17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OthrCshSttlmDtls,omitempty"`
}

// May be one of AMLC, DVLC, DFOR, GOST, IDEN, INCU, LREF, PASS, PRAD, PKIC
type CertificateType2Code string

type CertificationType1Choice struct {
	Cd    CertificateType2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type Cheque4 struct {
	PyeeId NameAndAddress5 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PyeeId"`
}

type CitizenshipInformation2 struct {
	Ntlty  string `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Ntlty"`
	MnrInd bool   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MnrInd"`
}

type CivilStatus1Choice struct {
	Cd    CivilStatus1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of DIVO, LDIV, MARR, SEPA, SING, UNIO, WIDO
type CivilStatus1Code string

type ClearingSystemMemberIdentification4Choice struct {
	USCHU  CHIPSUniversalIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 USCHU,omitempty"`
	NZNCC  NewZealandNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NZNCC,omitempty"`
	IENSC  IrishNSCIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IENSC,omitempty"`
	GBSC   UKDomesticSortCodeIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 GBSC,omitempty"`
	USCH   CHIPSParticipantIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 USCH,omitempty"`
	CHBC   SwissBCIdentifier                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CHBC,omitempty"`
	USFW   FedwireRoutingNumberIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 USFW,omitempty"`
	PTNCC  PortugueseNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PTNCC,omitempty"`
	RUCB   RussianCentralBankIdentificationCodeIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RUCB,omitempty"`
	ITNCC  ItalianDomesticIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ITNCC,omitempty"`
	ATBLZ  AustrianBankleitzahlIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ATBLZ,omitempty"`
	CACPA  CanadianPaymentsARNIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CACPA,omitempty"`
	CHSIC  SwissSICIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CHSIC,omitempty"`
	DEBLZ  GermanBankleitzahlIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DEBLZ,omitempty"`
	ESNCC  SpanishDomesticInterbankingIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ESNCC,omitempty"`
	ZANCC  SouthAfricanNCCIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ZANCC,omitempty"`
	HKNCC  HongKongBankIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 HKNCC,omitempty"`
	AUBSBx ExtensiveBranchNetworkIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AUBSBx,omitempty"`
	AUBSBs SmallNetworkIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AUBSBs,omitempty"`
}

// May be one of COLL, NCOL
type Collateral1Code string

type CommunicationAddress6 struct {
	AdrTp  AddressType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AdrTp,omitempty"`
	Email  Max256Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Email,omitempty"`
	Phne   PhoneNumber        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Phne,omitempty"`
	Mob    PhoneNumber        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Mob,omitempty"`
	FaxNb  PhoneNumber        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FaxNb,omitempty"`
	TlxAdr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TlxAdr,omitempty"`
	URLAdr Max256Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 URLAdr,omitempty"`
}

// May be one of SWMT, SWMX, FAXI, EMAL, PROP
type CommunicationMethod1Code string

type CommunicationMethod3Choice struct {
	Cd    CommunicationMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type CompanyLink1Choice struct {
	Cd    CompanyLink1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of AGEN, BROK, PART, MEMB, PCOM, RELA
type CompanyLink1Code string

// May be one of NSTA, RCLT, STAN
type ConductClassification1Code string

// May be no more than 35 items long
type ConsolidatedTapeAssociationIdentifier string

type ConsolidationType1Choice struct {
	Cd    ConsolidationType1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of GENL, PART
type ConsolidationType1Code string

type CountryAndResidentialStatusType2 struct {
	Ctry      CountryCode            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Ctry"`
	ResdtlSts ResidentialStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ResdtlSts"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebit3Code string

type CustomerConductClassification1Choice struct {
	Cd    ConductClassification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type DataBaseCheck1 struct {
	DBChck bool      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DBChck"`
	Id     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
}

// May be one of INSE, UPDT, DELT
type DataModification1Code string

// May be one of INSE, DELT
type DataModification2Code string

type DateAndAmount1 struct {
	Dt  ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dt"`
	Amt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Amt"`
}

type DateAndDateTime1Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dt,omitempty"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DtTm,omitempty"`
}

type DateTimePeriod2 struct {
	FrDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FrDtTm"`
	ToDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ToDtTm,omitempty"`
}

type DeMinimus1Choice struct {
	DeMnmsAplbl    DeMinimusApplicable1    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DeMnmsAplbl,omitempty"`
	DeMnmsNotAplbl DeMinimusNotApplicable1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DeMnmsNotAplbl,omitempty"`
}

type DeMinimusApplicable1 struct {
	NewIssePrmssn bool    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NewIssePrmssn"`
	Pctg          float64 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Pctg,omitempty"`
}

type DeMinimusNotApplicable1 struct {
	RstrctdPrsnRsn Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RstrctdPrsnRsn"`
}

type DirectDebitMandate7 struct {
	DbtrAcct      AccountIdentificationAndName5              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DbtrAcct"`
	Dbtr          PartyIdentification125Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dbtr,omitempty"`
	DbtrTaxIdNb   Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DbtrTaxIdNb,omitempty"`
	DbtrNtlRegnNb Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DbtrNtlRegnNb,omitempty"`
	Cdtr          PartyIdentification125Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cdtr,omitempty"`
	DbtrAgt       FinancialInstitutionIdentification11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DbtrAgt"`
	DbtrAgtBrnch  BranchData4                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DbtrAgtBrnch,omitempty"`
	CdtrAgt       FinancialInstitutionIdentification11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CdtrAgt,omitempty"`
	CdtrAgtBrnch  BranchData4                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CdtrAgtBrnch,omitempty"`
	RegnId        Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RegnId,omitempty"`
	MndtId        Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MndtId,omitempty"`
}

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type Document struct {
	AcctModInstr AccountModificationInstructionV08 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctModInstr"`
}

type DocumentToSend4 struct {
	Tp            Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp"`
	Rcpt          PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rcpt"`
	MtdOfTrnsmssn CommunicationMethod3Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MtdOfTrnsmssn"`
}

// May be one of ELIG, NELI
type Eligible1Code string

// May be no more than 12 items long
type EuroclearClearstreamIdentifier string

// May be one of DAIL, ADHO
type EventFrequency10Code string

// May be one of YEAR, SEMI, QUTR, TOMN, MNTH, TWMN, TOWK, WEEK, DAIL, ADHO, INDA, OVNG, ONDE
type EventFrequency1Code string

// May be one of ADHO, YEAR, DAIL, FOMN, TOMN, TOWK, TYEA, INDA, MNTH, ONDE, OVNG, QUTR, SEMI, TWMN, WEEK
type EventFrequency8Code string

// May be one of YEAR, SEMI, QUTR, TOMN, MNTH, TWMN, TOWK, WEEK, DAIL, ADHO, INDA, OVNG, ONDE, NONE
type EventFrequency9Code string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// May be no more than 350 items long
type Extended350Code string

type ExtendedParty15 struct {
	XtndedPtyRole Extended350Code                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 XtndedPtyRole"`
	OthrPtyDtls   InvestmentAccountOwnershipInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OthrPtyDtls"`
}

type Extension1 struct {
	PlcAndNm Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PlcAndNm"`
	Txt      Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Txt"`
}

// Must match the pattern AU[0-9]{6,6}
type ExtensiveBranchNetworkIdentifier string

// May be no more than 4 items long
type ExternalAccountIdentification1Code string

type FATCAForm1Choice struct {
	Cd    FATCAFormType1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CER5, CER7, CER1, CER2, CER3, CER4, CER6
type FATCAFormType1Code string

type FATCASource1Choice struct {
	Cd    FATCASourceStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CALC, DECL
type FATCASourceStatus1Code string

// May be one of F101, F102, F103, F104, F105, F201, F202, F203, F204, F205, F206
type FATCAStatus1Code string

type FATCAStatus2 struct {
	Tp  FATCAStatus2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp"`
	Src FATCASource1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Src,omitempty"`
}

type FATCAStatus2Choice struct {
	Cd    FATCAStatus1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// Must match the pattern FW[0-9]{9,9}
type FedwireRoutingNumberIdentifier string

type FinancialInstitutionIdentification11Choice struct {
	NmAndAdr    NameAndAddress5                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmAndAdr,omitempty"`
	BICFI       BICFIDec2014Identifier                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BICFI,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ClrSysMmbId,omitempty"`
	PrtryId     SimpleIdentificationInformation4          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrtryId,omitempty"`
}

type FinancialInstrument55 struct {
	Id          SecurityIdentification25Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	Nm          Max350Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
	ShrtNm      Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ShrtNm,omitempty"`
	SplmtryId   Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SplmtryId,omitempty"`
	ClssTp      Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ClssTp,omitempty"`
	SctiesForm  FormOfSecurity1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SctiesForm,omitempty"`
	DstrbtnPlcy DistributionPolicy1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DstrbtnPlcy,omitempty"`
	PdctGrp     Max140Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PdctGrp,omitempty"`
}

type FinancialInstrument87 struct {
	Id            SecurityIdentification25Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	Nm            Max350Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
	ShrtNm        Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ShrtNm,omitempty"`
	SplmtryId     Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SplmtryId,omitempty"`
	ClssTp        Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ClssTp,omitempty"`
	SctiesForm    FormOfSecurity1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SctiesForm,omitempty"`
	DstrbtnPlcy   DistributionPolicy1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DstrbtnPlcy,omitempty"`
	PdctGrp       Max140Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PdctGrp,omitempty"`
	BlckdHldgDtls BlockedHoldingDetails2         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BlckdHldgDtls,omitempty"`
	Pldgg         Eligible1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Pldgg,omitempty"`
	Coll          Collateral1Code                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Coll,omitempty"`
	ThrdPtyRghts  ThirdPartyRights2              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ThrdPtyRghts,omitempty"`
	FndOwnrsh     FundOwnership1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FndOwnrsh,omitempty"`
	FndIntntn     FundIntention1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FndIntntn,omitempty"`
	OprlSts       OperationalStatus1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OprlSts,omitempty"`
}

type FiscalYear1Choice struct {
	StartDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 StartDt,omitempty"`
	EndDt   ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 EndDt,omitempty"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type Frequency20Choice struct {
	Cd    EventFrequency8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of HEDG, CPFO, CPFS, SRSA, CSDO, TOFF, ICSA, CSDM, CSDP, PPEN, CPEN
type FundCashAccount4Code string

// May be one of YQUA, NQUA
type FundIntention1Code string

// May be one of YALL, NALL
type FundOwnership1Code string

type GDPRData1 struct {
	CnsntTp  GDPRDataConsent1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CnsntTp"`
	CnsntInd bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CnsntInd"`
	CnsntDt  ISODate                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CnsntDt"`
}

type GDPRDataConsent1Choice struct {
	Cd    GDPRDataConsent1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of DP00, DP03, DP01, DP02
type GDPRDataConsent1Code string

// May be one of FEMA, MALE
type Gender1Code string

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Issr,omitempty"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Issr,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SchmeNm,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SchmeNm,omitempty"`
}

type GenericIdentification81 struct {
	Id   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	IdTp OtherIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IdTp"`
}

type GenericIdentification82 struct {
	Id       Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	Tp       OtherIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp"`
	Issr     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Issr,omitempty"`
	IsseDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IsseDt,omitempty"`
	XpryDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 XpryDt,omitempty"`
	Stat     Max70Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Stat,omitempty"`
	IssrCtry CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IssrCtry,omitempty"`
}

// Must match the pattern BL[0-9]{8,8}
type GermanBankleitzahlIdentifier string

type HighFrequencyTradingProfile1 struct {
	Dt         ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dt,omitempty"`
	SttlmFrqcy SettlementFrequency1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SttlmFrqcy,omitempty"`
	CnsldtnTp  ConsolidationType1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CnsldtnTp,omitempty"`
}

// May be one of CERT, NPRH, PRTH
type Holding1Code string

// Must match the pattern HK[0-9]{3,3}
type HongKongBankIdentifier string

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOYearMonth time.Time

func (t *ISOYearMonth) UnmarshalText(text []byte) error {
	return (*xsdGYearMonth)(t).UnmarshalText(text)
}
func (t ISOYearMonth) MarshalText() ([]byte, error) {
	return xsdGYearMonth(t).MarshalText()
}

type IdentificationSource1Choice struct {
	Dmst  CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dmst,omitempty"`
	Prtry Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CASH, SECU
type IncomePreference2Code string

type IndividualPerson29 struct {
	NmPrfx  NamePrefix1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmPrfx,omitempty"`
	GvnNm   Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 GvnNm,omitempty"`
	MddlNm  Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MddlNm,omitempty"`
	Nm      Max350Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm"`
	PstlAdr []PostalAddress21 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstlAdr"`
}

type IndividualPerson35 struct {
	GvnNm   Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 GvnNm,omitempty"`
	MddlNm  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MddlNm,omitempty"`
	Nm      Max350Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm"`
	Gndr    Gender1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Gndr,omitempty"`
	BirthDt ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BirthDt,omitempty"`
}

type IndividualPerson38 struct {
	NmPrfx         NamePrefix1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmPrfx,omitempty"`
	GvnNm          Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 GvnNm,omitempty"`
	MddlNm         Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MddlNm,omitempty"`
	Nm             Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm"`
	NmSfx          Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmSfx,omitempty"`
	Gndr           Gender1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Gndr,omitempty"`
	BirthDt        ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BirthDt,omitempty"`
	CtryOfBirth    CountryCode               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtryOfBirth,omitempty"`
	PrvcOfBirth    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrvcOfBirth,omitempty"`
	CityOfBirth    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CityOfBirth,omitempty"`
	Prfssn         Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prfssn,omitempty"`
	ModfdPstlAdr   []ModificationScope34     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdPstlAdr,omitempty"`
	ModfdCtznsh    []ModificationScope39     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdCtznsh,omitempty"`
	EmplngCpny     Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 EmplngCpny,omitempty"`
	BizFctn        Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BizFctn,omitempty"`
	PltclyXpsdPrsn PoliticallyExposedPerson1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PltclyXpsdPrsn,omitempty"`
	DthDt          ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DthDt,omitempty"`
	CvlSts         CivilStatus1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CvlSts,omitempty"`
	EdctnLvl       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 EdctnLvl,omitempty"`
	FmlyInf        PersonalInformation1      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FmlyInf,omitempty"`
	GDPRData       []GDPRData1               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 GDPRData,omitempty"`
}

type IndividualPersonIdentification3Choice struct {
	IdNb   GenericIdentification81 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IdNb,omitempty"`
	PrsnNm IndividualPerson35      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrsnNm,omitempty"`
}

type InformationDistribution1Choice struct {
	Cd    InformationDistribution2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of ELEC, NONE, PAPR
type InformationDistribution2Code string

type InitialAmount1Choice struct {
	InitlNbOfInstlmts float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InitlNbOfInstlmts,omitempty"`
	Amt               ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Amt,omitempty"`
}

// May be one of LIFE, PDIS
type Insurance1Code string

type InsuranceType2Choice struct {
	Cd    Insurance1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type Intermediary46 struct {
	Id               PartyIdentification177Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	LglNttyIdr       LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LglNttyIdr,omitempty"`
	Acct             Account32                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Acct,omitempty"`
	WvdTrlrComssnInd bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 WvdTrlrComssnInd,omitempty"`
	Role             PartyRole2Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Role,omitempty"`
	PmryComAdr       []CommunicationAddress6      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PmryComAdr,omitempty"`
	ScndryComAdr     []CommunicationAddress6      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ScndryComAdr,omitempty"`
	NmAndAdr         NameAndAddress4              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmAndAdr,omitempty"`
}

type Intermediary47 struct {
	Id         PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	LglNttyIdr LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LglNttyIdr,omitempty"`
	Acct       Account32                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Acct,omitempty"`
}

type InvestmentAccount75 struct {
	AcctStsUpdInstr     AccountStatusUpdateInstruction1  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctStsUpdInstr,omitempty"`
	Nm                  Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
	Dsgnt               Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dsgnt,omitempty"`
	Tp                  AccountType2Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp,omitempty"`
	OwnrshTp            OwnershipType2Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OwnrshTp,omitempty"`
	TaxXmptn            TaxExemptionReason2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxXmptn,omitempty"`
	StmtFrqcy           StatementFrequencyReason2Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 StmtFrqcy,omitempty"`
	RefCcy              ActiveCurrencyCode               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RefCcy,omitempty"`
	Lang                string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Lang,omitempty"`
	IncmPref            IncomePreference2Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IncmPref,omitempty"`
	RinvstmtDtls        []Reinvestment4                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RinvstmtDtls,omitempty"`
	TaxWhldgMtd         TaxWithholdingMethod3Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxWhldgMtd,omitempty"`
	TaxRptg             []TaxReporting3                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxRptg,omitempty"`
	LttrInttDtls        LetterIntent1                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LttrInttDtls,omitempty"`
	AcmltnRghtRef       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcmltnRghtRef,omitempty"`
	ReqrdSgntriesNb     float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ReqrdSgntriesNb,omitempty"`
	FndFmlyNm           Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FndFmlyNm,omitempty"`
	ModfdFinInstrmDtls  []ModificationScope42            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdFinInstrmDtls,omitempty"`
	RndgDtls            RoundingParameters1              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RndgDtls,omitempty"`
	AcctSvcr            PartyIdentification125Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctSvcr,omitempty"`
	BlckdSts            BlockedStatusReason2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BlckdSts,omitempty"`
	AcctUsgTp           AccountUsageType2Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctUsgTp,omitempty"`
	FrgnStsCertfctn     Provided1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FrgnStsCertfctn,omitempty"`
	AcctSgntrDtTm       DateAndDateTime1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctSgntrDtTm,omitempty"`
	TxChanlTp           TransactionChannelType1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TxChanlTp,omitempty"`
	InvstmtAcctCtgy     InvestmentAccountCategory1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InvstmtAcctCtgy,omitempty"`
	Pldgg               Eligible1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Pldgg,omitempty"`
	Coll                Collateral1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Coll,omitempty"`
	ThrdPtyRghts        ThirdPartyRights2                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ThrdPtyRghts,omitempty"`
	PwrOfAttnyLvlOfCtrl LevelOfControl1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PwrOfAttnyLvlOfCtrl,omitempty"`
	AcctgSts            AccountingStatus1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctgSts,omitempty"`
	OpngDt              DateAndDateTime1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OpngDt,omitempty"`
	ClsgDt              DateAndDateTime1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ClsgDt,omitempty"`
	NegInd              bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NegInd,omitempty"`
	PrcgOrdr            PositionEffect3Code              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrcgOrdr,omitempty"`
	Lblty               Liability1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Lblty,omitempty"`
	ModfdInvstrPrfl     []ModificationScope46            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdInvstrPrfl,omitempty"`
	FsclYr              FiscalYear1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FsclYr,omitempty"`
}

type InvestmentAccount76 struct {
	Nm        Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
	Dsgnt     Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dsgnt,omitempty"`
	FndTp     Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FndTp,omitempty"`
	FndFmlyNm Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FndFmlyNm,omitempty"`
	SctyDtls  FinancialInstrument55        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SctyDtls,omitempty"`
	AcctOwnr  AccountOwner3Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctOwnr,omitempty"`
	Intrmy    []Intermediary47             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Intrmy,omitempty"`
	AcctSvcr  PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctSvcr,omitempty"`
}

type InvestmentAccountCategory1Choice struct {
	Cd    InvestmentAccountCategory1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of MAND, RETA
type InvestmentAccountCategory1Code string

type InvestmentAccountModification4 struct {
	ModRsn      Max350Text            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModRsn,omitempty"`
	AcctApplId  Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctApplId,omitempty"`
	ClntRef     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ClntRef,omitempty"`
	CtrPtyRef   AdditionalReference13 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtrPtyRef,omitempty"`
	ExstgAcctId []Account23           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ExstgAcctId,omitempty"`
}

type InvestmentAccountOwnershipInformation17 struct {
	Pty                  Party48Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Pty"`
	MnyLndrgChck         MoneyLaunderingCheck1Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MnyLndrgChck,omitempty"`
	ModfdInvstrPrflVldtn []ModificationScope27            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdInvstrPrflVldtn,omitempty"`
	OwnrshBnfcryRate     OwnershipBeneficiaryRate1        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OwnrshBnfcryRate,omitempty"`
	ClntId               Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ClntId,omitempty"`
	FsclXmptn            bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FsclXmptn,omitempty"`
	SgntryRghtInd        bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SgntryRghtInd,omitempty"`
	MiFIDClssfctn        MiFIDClassification1             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MiFIDClssfctn,omitempty"`
	Ntfctn               []Notification2                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Ntfctn,omitempty"`
	FATCAFormTp          []FATCAForm1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FATCAFormTp,omitempty"`
	FATCASts             []FATCAStatus2                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FATCASts,omitempty"`
	FATCARptgDt          ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FATCARptgDt,omitempty"`
	CRSFormTp            []CRSForm1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CRSFormTp,omitempty"`
	CRSSts               []CRSStatus4                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CRSSts,omitempty"`
	CRSRptgDt            ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CRSRptgDt,omitempty"`
	OthrId               []GenericIdentification82        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OthrId,omitempty"`
	TaxXmptn             TaxExemptionReason2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxXmptn,omitempty"`
	TaxRptg              []TaxReporting3                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxRptg,omitempty"`
	Lang                 string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Lang,omitempty"`
	MailTp               MailType1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MailTp,omitempty"`
	CtryAndResdtlSts     CountryAndResidentialStatusType2 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtryAndResdtlSts,omitempty"`
	MntryWlth            DateAndAmount1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MntryWlth,omitempty"`
	EqtyVal              DateAndAmount1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 EqtyVal,omitempty"`
	WorkgCptl            DateAndAmount1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 WorkgCptl,omitempty"`
	CpnyLk               CompanyLink1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CpnyLk,omitempty"`
	ElctrncMlngSvcRef    Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ElctrncMlngSvcRef,omitempty"`
	PmryComAdr           []CommunicationAddress6          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PmryComAdr,omitempty"`
	ScndryComAdr         []CommunicationAddress6          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ScndryComAdr,omitempty"`
	AddtlRgltryInf       RegulatoryInformation1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AddtlRgltryInf,omitempty"`
	AcctgSts             AccountingStatus1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AcctgSts,omitempty"`
	AddtlInf             []AdditiononalInformation13      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AddtlInf,omitempty"`
	CtrlgPty             bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtrlgPty,omitempty"`
}

// May be one of CACO, CONC, CUST, DATP, DIST, FACT, FIAD, FIAG, FMCO, FNBR, FTAG, INTR, INVE, INVS, PAYI, REGI, TRAG, TRAN
type InvestmentFundRole6Code string

// May be one of CONC, DIST, FMCO, INTR, PAYI, TRAG, CUST, CACO, FACT, INVE, INVS
type InvestmentFundRole7Code string

// May be one of ALLL, SELL, BUYI, SWIO, TRIN, TOUT, SUBS, REDM, CDEP, CWIT, DIVP, CAEV, CROI, CROO, DIVI, INSP, OTHR, REAA, RWPL, RDIV, SSPL, SUAA
type InvestmentFundTransactionType1Code string

type InvestmentPlan16 struct {
	Frqcy               Frequency20Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Frqcy"`
	StartDt             ISODate                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 StartDt,omitempty"`
	EndDt               ISODate                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 EndDt,omitempty"`
	Qty                 UnitsOrAmount1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Qty"`
	GrssAmtInd          bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 GrssAmtInd,omitempty"`
	IncmPref            IncomePreference2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IncmPref,omitempty"`
	InitlAmt            InitialAmount1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InitlAmt,omitempty"`
	TtlNbOfInstlmts     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TtlNbOfInstlmts,omitempty"`
	RndgDrctn           RoundingDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RndgDrctn,omitempty"`
	SctyDtls            []Repartition6         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SctyDtls"`
	ModfdCshSttlm       []CashSettlement4      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdCshSttlm,omitempty"`
	CtrctRef            Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtrctRef,omitempty"`
	RltdCtrctRef        Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RltdCtrctRef,omitempty"`
	PdctId              Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PdctId,omitempty"`
	SLAChrgAndComssnRef Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SLAChrgAndComssnRef,omitempty"`
	InsrncCover         InsuranceType2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InsrncCover,omitempty"`
	PlanSts             PlanStatus2Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PlanSts,omitempty"`
	InstlmtMgrRole      PartyRole4Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InstlmtMgrRole,omitempty"`
}

type InvestorProfile2 struct {
	Tp            ProfileType1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp,omitempty"`
	Sts           InvestorProfileStatus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Sts,omitempty"`
	Trsr          TreasuryProfile1             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Trsr,omitempty"`
	HghFrqcyTradg HighFrequencyTradingProfile1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 HghFrqcyTradg,omitempty"`
	MktMakr       MarketMakerProfile2          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MktMakr,omitempty"`
}

type InvestorProfileStatus1Choice struct {
	Cd    InvestorProfileStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of DISA, DISG, ENAB, ENBG, ADMI, ANLY, NAPP, PSUS, PEND, SUPS
type InvestorProfileStatus1Code string

// Must match the pattern IE[0-9]{6,6}
type IrishNSCIdentifier string

// Must match the pattern IT[0-9]{10,10}
type ItalianDomesticIdentifier string

type KYCCheckType1Choice struct {
	Cd    KnowYourCustomerCheckType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of ENHA, ORDN, SIMP
type KnowYourCustomerCheckType1Code string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LetterIntent1 struct {
	LttrInttRef Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LttrInttRef"`
	Amt         ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Amt,omitempty"`
	StartDt     ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 StartDt,omitempty"`
	EndDt       ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 EndDt,omitempty"`
}

type LevelOfControl1Choice struct {
	Cd    LevelOfControl1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of TRAN, VIEW
type LevelOfControl1Code string

type Liability1Choice struct {
	Cd    Liability1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of INVE, BROK
type Liability1Code string

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MailType1Choice struct {
	Cd    MailType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of AIRM, ORDM, REGM
type MailType1Code string

type MarketMakerProfile2 struct {
	CtrctPrd DateTimePeriod2 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtrctPrd,omitempty"`
	Cmplc    bool            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cmplc,omitempty"`
	MaxSprd  float64         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MaxSprd,omitempty"`
	Dscnt    float64         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dscnt,omitempty"`
}

type MarketPracticeVersion1 struct {
	Nm Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm"`
	Dt ISOYearMonth `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dt,omitempty"`
	Nb Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nb,omitempty"`
}

// May be no more than 10 items long
type Max10Text string

// May be no more than 140 items long
type Max140Text string

// May be no more than 16 items long
type Max16Text string

// May be no more than 256 items long
type Max256Text string

// May be no more than 34 items long
type Max34Text string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

// May be no more than 3 items long
type Max3Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// May be no more than 70 items long
type Max70Text string

type MessageIdentification1 struct {
	Id      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
	CreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CreDtTm"`
}

type MiFIDClassification1 struct {
	Clssfctn OrderOriginatorEligibility1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Clssfctn"`
	Nrrtv    Max350Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nrrtv,omitempty"`
}

type ModificationScope21 struct {
	ModScpIndctn DataModification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	IsseAllcn    NewIssueAllocation2   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IsseAllcn"`
}

type ModificationScope27 struct {
	ModScpIndctn    DataModification2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	InvstrPrflVldtn PartyProfileInformation5 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InvstrPrflVldtn"`
}

type ModificationScope34 struct {
	ModScpIndctn DataModification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	PstlAdr      PostalAddress21       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstlAdr"`
}

type ModificationScope39 struct {
	ModScpIndctn DataModification2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	Ctznsh       CitizenshipInformation2 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Ctznsh"`
}

type ModificationScope40 struct {
	ModScpIndctn DataModification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	Intrmy       Intermediary46        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Intrmy"`
}

type ModificationScope41 struct {
	ModScpIndctn DataModification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	InvstmtPlan  InvestmentPlan16      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InvstmtPlan"`
}

type ModificationScope42 struct {
	ModScpIndctn  DataModification2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	FinInstrmDtls FinancialInstrument87 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FinInstrmDtls"`
}

type ModificationScope43 struct {
	ModScpIndctn DataModification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	Plcmnt       ReferredAgent3        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Plcmnt"`
}

type ModificationScope44 struct {
	ModScpIndctn DataModification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	SvcLvlAgrmt  DocumentToSend4       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SvcLvlAgrmt"`
}

type ModificationScope45 struct {
	ModScpIndctn DataModification1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	AddtlInf     []AdditiononalInformation13 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AddtlInf"`
}

type ModificationScope46 struct {
	ModScpIndctn DataModification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModScpIndctn"`
	InvstrPrfl   InvestorProfile2      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 InvstrPrfl"`
}

type MoneyLaunderingCheck1Choice struct {
	Cd    MoneyLaunderingCheck1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of PASS, NOTC, EXEM, CLMO, AUTH, POEP
type MoneyLaunderingCheck1Code string

type NameAndAddress15 struct {
	Nm      Max350Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm"`
	PstlAdr PostalAddress21 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstlAdr,omitempty"`
}

type NameAndAddress4 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Adr"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Adr,omitempty"`
}

type NamePrefix1Choice struct {
	Cd    NamePrefix1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type NewIssueAllocation2 struct {
	Rstrctd     bool             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rstrctd"`
	XmptPrsnRsn Max350Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 XmptPrsnRsn,omitempty"`
	DeMnms      DeMinimus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DeMnms,omitempty"`
}

// Must match the pattern NZ[0-9]{6,6}
type NewZealandNCCIdentifier string

// May be one of NORE
type NoReasonCode string

type Notification2 struct {
	NtfctnTp  Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NtfctnTp"`
	Reqrd     bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Reqrd"`
	DstrbtnTp InformationDistribution1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DstrbtnTp,omitempty"`
}

// May be one of ENAB, SPEC
type OperationalStatus1Code string

// May be one of ELIG, RETL, PROF
type OrderOriginatorEligibility1Code string

type Organisation23 struct {
	Nm      Max350Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm"`
	ShrtNm  Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ShrtNm,omitempty"`
	PstlAdr []PostalAddress21 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstlAdr"`
}

type Organisation40 struct {
	Nm           Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nm,omitempty"`
	ShrtNm       Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ShrtNm,omitempty"`
	Id           PartyIdentification177Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id,omitempty"`
	LglNttyIdr   LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LglNttyIdr,omitempty"`
	Purp         Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Purp,omitempty"`
	RegnCtry     CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RegnCtry,omitempty"`
	RegnDt       ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RegnDt,omitempty"`
	ModfdPstlAdr []ModificationScope34        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ModfdPstlAdr,omitempty"`
	TpOfOrg      OrganisationType1Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TpOfOrg,omitempty"`
	PlcOfListg   []MICIdentifier              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PlcOfListg,omitempty"`
}

type OrganisationType1Choice struct {
	Cd    OrganisationType1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of IFUN, PRIV, PUBL, PFUN
type OrganisationType1Code string

type OtherIdentification3Choice struct {
	Cd    PartyIdentificationType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type OwnershipBeneficiaryRate1 struct {
	Rate  float64   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rate,omitempty"`
	Frctn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Frctn,omitempty"`
}

type OwnershipType2Choice struct {
	Cd    AccountOwnershipType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type Party48Choice struct {
	Org      Organisation40     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Org,omitempty"`
	IndvPrsn IndividualPerson38 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IndvPrsn,omitempty"`
}

type PartyIdentification125Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AnyBIC,omitempty"`
	PrtryId  GenericIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrtryId,omitempty"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmAndAdr,omitempty"`
}

type PartyIdentification177Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AnyBIC,omitempty"`
	PrtryId GenericIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrtryId,omitempty"`
}

type PartyIdentification182Choice struct {
	AnyBIC    AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AnyBIC,omitempty"`
	PrtryId   GenericIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PrtryId,omitempty"`
	NmAndAdr  NameAndAddress15        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmAndAdr,omitempty"`
	TaxIdNb   Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxIdNb,omitempty"`
	NtlRegnNb Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NtlRegnNb,omitempty"`
}

type PartyIdentification220 struct {
	Id         PartyIdentification182Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id,omitempty"`
	LglNttyIdr LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LglNttyIdr,omitempty"`
}

// May be one of ATIN, IDCD, NRIN, OTHR, PASS, POCD, SOCS, SRSA, GUNL, GTIN, ITIN, CPFA, AREG, DRLC, EMID, NINV, INCL, GIIN
type PartyIdentificationType7Code string

type PartyProfileInformation5 struct {
	CertfctnInd         bool                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CertfctnInd,omitempty"`
	VldtngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 VldtngPty,omitempty"`
	ChckngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ChckngPty,omitempty"`
	RspnsblPty          Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RspnsblPty,omitempty"`
	CertTp              CertificationType1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CertTp,omitempty"`
	ChckngDt            ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ChckngDt,omitempty"`
	ChckngFrqcy         EventFrequency1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ChckngFrqcy,omitempty"`
	NxtRvsnDt           ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NxtRvsnDt,omitempty"`
	SlryRg              Max35Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SlryRg,omitempty"`
	SrcOfWlth           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SrcOfWlth,omitempty"`
	CstmrCndctClssfctn  CustomerConductClassification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CstmrCndctClssfctn,omitempty"`
	RskLvl              RiskLevel2Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RskLvl,omitempty"`
	KnowYourCstmrChckTp KYCCheckType1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 KnowYourCstmrChckTp,omitempty"`
	KnowYourCstmrDBChck DataBaseCheck1                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 KnowYourCstmrDBChck,omitempty"`
}

// May be one of CUST, INVS
type PartyRole1Code string

type PartyRole2Choice struct {
	Cd    InvestmentFundRole6Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type PartyRole4Choice struct {
	Cd    InvestmentFundRole7Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type PartyRole5Choice struct {
	Cd    PartyRole1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type PaymentCard29 struct {
	Tp         CardType1Code                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp"`
	Nb         Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Nb"`
	HldrNm     Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 HldrNm"`
	StartDt    ISOYearMonth                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 StartDt,omitempty"`
	XpryDt     ISOYearMonth                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 XpryDt"`
	CardIssrNm Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CardIssrNm,omitempty"`
	CardIssrId PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CardIssrId,omitempty"`
	SctyCd     Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SctyCd,omitempty"`
	SeqNb      Max3Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SeqNb,omitempty"`
}

type PaymentInstrument17 struct {
	SttlmCcy          ActiveCurrencyCode        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SttlmCcy"`
	DvddPctg          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DvddPctg,omitempty"`
	SbcptPmtInstrm    PaymentInstrument24Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SbcptPmtInstrm,omitempty"`
	RedPmtInstrm      PaymentInstrument19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RedPmtInstrm,omitempty"`
	DvddPmtInstrm     PaymentInstrument19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DvddPmtInstrm,omitempty"`
	SvgsPlanPmtInstrm PaymentInstrument24Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SvgsPlanPmtInstrm,omitempty"`
	IntrstPmtInstrm   PaymentInstrument19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IntrstPmtInstrm,omitempty"`
}

type PaymentInstrument19Choice struct {
	ChqDtls      Cheque4 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ChqDtls,omitempty"`
	BkrsDrftDtls Cheque4 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BkrsDrftDtls,omitempty"`
}

type PaymentInstrument24Choice struct {
	PmtCardDtls PaymentCard29       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PmtCardDtls,omitempty"`
	DrctDbtDtls DirectDebitMandate7 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DrctDbtDtls,omitempty"`
	Chq         bool                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Chq,omitempty"`
	BkrsDrft    bool                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BkrsDrft,omitempty"`
}

type PersonalInformation1 struct {
	NmOfFthr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmOfFthr,omitempty"`
	MdnNmOfMthr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MdnNmOfMthr,omitempty"`
	NmOfPrtnr   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 NmOfPrtnr,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

// May be one of ACTV, CLOS, SUSP
type PlanStatus1Code string

type PlanStatus2Choice struct {
	Cd    PlanStatus1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type PoliticalExposureType2Choice struct {
	Cd    PoliticalExposureType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of NPEX, YPEX, PEXD, PEXF
type PoliticalExposureType2Code string

type PoliticallyExposedPerson1 struct {
	PltclyXpsdPrsnTp  PoliticalExposureType2Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PltclyXpsdPrsnTp"`
	PltclyXpsdPrsnSts PoliticallyExposedPersonStatus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PltclyXpsdPrsnSts,omitempty"`
}

type PoliticallyExposedPersonStatus1Choice struct {
	Cd    PoliticallyExposedPersonStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of PE03, PE01, PE02
type PoliticallyExposedPersonStatus1Code string

// Must match the pattern PT[0-9]{8,8}
type PortugueseNCCIdentifier string

// May be one of FIFO, LIFO
type PositionEffect3Code string

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Ctry"`
}

type PostalAddress21 struct {
	AdrTp      AddressType2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AdrTp,omitempty"`
	MlngInd    bool               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 MlngInd,omitempty"`
	RegnAdrInd bool               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RegnAdrInd,omitempty"`
	CareOf     Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CareOf,omitempty"`
	AdrLine    []Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 AdrLine,omitempty"`
	StrtNm     Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 StrtNm,omitempty"`
	BldgNb     Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BldgNb,omitempty"`
	BldgNm     Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 BldgNm,omitempty"`
	PstBx      Max10Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstBx,omitempty"`
	SdInBldg   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SdInBldg,omitempty"`
	Flr        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Flr,omitempty"`
	SuiteId    Max10Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SuiteId,omitempty"`
	PstCd      Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 PstCd,omitempty"`
	DstrctNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DstrctNm,omitempty"`
	Vllg       Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Vllg,omitempty"`
	TwnNm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TwnNm,omitempty"`
	Stat       Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Stat,omitempty"`
	Ctry       CountryCode        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Ctry"`
}

type ProfileType1Choice struct {
	Cd    ProfileType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of HEDG, HFTR, MAKE, TREA
type ProfileType1Code string

// May be one of NPRO, PROV
type Provided1Code string

// May be no more than 35 items long
type RICIdentifier string

// May be one of PRIM, SECO
type Rank1Code string

// May be one of REFR, NRFR, UKNW
type Referred1Code string

type ReferredAgent3 struct {
	Rfrd          Referred1Code                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rfrd"`
	RfrdPlcmntAgt PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RfrdPlcmntAgt,omitempty"`
}

type RegisteredShareholderName1Choice struct {
	IndvPrsn IndividualPerson29 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 IndvPrsn,omitempty"`
	Org      Organisation23     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Org,omitempty"`
}

type RegulatoryInformation1 struct {
	Sctr  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Sctr,omitempty"`
	Brnch Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Brnch,omitempty"`
	Grp   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Grp,omitempty"`
	Othr  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Othr,omitempty"`
}

type Reinvestment4 struct {
	FinInstrmDtls FinancialInstrument87 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FinInstrmDtls"`
	ReqdNAVCcy    ActiveCurrencyCode    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ReqdNAVCcy,omitempty"`
	RinvstmtPctg  float64               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RinvstmtPctg"`
}

type Repartition6 struct {
	Qty       UnitsOrAmountOrPercentage1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Qty"`
	FinInstrm FinancialInstrument87            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 FinInstrm"`
	CcyOfPlan ActiveOrHistoricCurrencyCode     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CcyOfPlan,omitempty"`
}

// May be one of RESI, PRES, NRES
type ResidentialStatus1Code string

type RestrictionStatus1Choice struct {
	Cd    RestrictionStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of ACTV, INAC
type RestrictionStatus1Code string

// May be one of HIGH, LOWW, MEDM
type RiskLevel1Code string

type RiskLevel2Choice struct {
	Cd    RiskLevel1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of RDUP, RDWN, STAN, DIST
type RoundingDirection1Code string

type RoundingParameters1 struct {
	RndgMdlus float64                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RndgMdlus,omitempty"`
	RndgDrctn RoundingDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RndgDrctn"`
}

// Must match the pattern RU[0-9]{9,9}
type RussianCentralBankIdentificationCodeIdentifier string

type SecurityIdentification25Choice struct {
	ISIN        ISINOct2015Identifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 ISIN,omitempty"`
	SEDOL       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SEDOL,omitempty"`
	CUSIP       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CUSIP,omitempty"`
	RIC         RICIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 RIC,omitempty"`
	TckrSymb    TickerIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TckrSymb,omitempty"`
	Blmbrg      Bloomberg2Identifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Blmbrg,omitempty"`
	CTA         ConsolidatedTapeAssociationIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CTA,omitempty"`
	QUICK       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 QUICK,omitempty"`
	Wrtppr      string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Wrtppr,omitempty"`
	Dtch        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dtch,omitempty"`
	Vlrn        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Vlrn,omitempty"`
	SCVM        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 SCVM,omitempty"`
	Belgn       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Belgn,omitempty"`
	Cmon        EuroclearClearstreamIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cmon,omitempty"`
	OthrPrtryId AlternateSecurityIdentification7      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 OthrPrtryId,omitempty"`
}

type SettlementFrequency1Choice struct {
	Cd    EventFrequency10Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type SettlementInstructionReason1Choice struct {
	Cd    SettlementInstructionReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// May be one of CSHI, ALLL, CSHO, CHAR, DIVI, INTE, SAVP, REDM, SAVE, BUYI, SELL, SUBS, WTHP, CORP
type SettlementInstructionReason1Code string

type SimpleIdentificationInformation4 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Id"`
}

// Must match the pattern AU[0-9]{6,6}
type SmallNetworkIdentifier string

// Must match the pattern ZA[0-9]{6,6}
type SouthAfricanNCCIdentifier string

// Must match the pattern ES[0-9]{8,9}
type SpanishDomesticInterbankingIdentifier string

type StatementFrequencyReason2Choice struct {
	Cd    EventFrequency9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

// Must match the pattern SW[0-9]{3,5}
type SwissBCIdentifier string

// Must match the pattern SW[0-9]{6,6}
type SwissSICIdentifier string

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP, FORE, INCA, MINO, ASSO, DIPL, DOME, FORP, ORDR, PENF, REFU, RIHO, ADMI, TANR, OANR
type TaxExemptReason3Code string

type TaxExemptionReason2Choice struct {
	Cd    TaxExemptReason3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type TaxReporting3 struct {
	TaxtnCtry   CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxtnCtry"`
	TaxRate     float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxRate,omitempty"`
	TaxPyer     PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxPyer,omitempty"`
	TaxRcpt     PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TaxRcpt,omitempty"`
	CshAcctDtls CashAccount204               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 CshAcctDtls,omitempty"`
	Desc        Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Desc,omitempty"`
}

// May be one of MITX, INVE, ACCT, EXMT, REPT, CRTF, WHCO, WTHD, WTRE
type TaxWithholdingMethod3Code string

type ThirdPartyRights2 struct {
	Tp         Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Tp"`
	DtTm       ISODateTime                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 DtTm,omitempty"`
	Hldr       PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Hldr,omitempty"`
	LglNttyIdr LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 LglNttyIdr,omitempty"`
	Amt        ActiveCurrencyAndAmount      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Amt,omitempty"`
	Desc       Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Desc,omitempty"`
}

// May be no more than 35 items long
type TickerIdentifier string

// May be one of FIAD, HOBA, BRAN
type TransactionChannel2Code string

type TransactionChannelType1Choice struct {
	Cd    TransactionChannel2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type TransactionType5Choice struct {
	Cd    InvestmentFundTransactionType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Cd,omitempty"`
	Prtry GenericIdentification47            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Prtry,omitempty"`
}

type TreasuryProfile1 struct {
	Dt      ISODate          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Dt"`
	TradrTp PartyRole5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 TradrTp"`
	Rate    float64          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Rate"`
}

// Must match the pattern SC[0-9]{6,6}
type UKDomesticSortCodeIdentifier string

type UnitsOrAmount1Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Amt,omitempty"`
	Unit float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Unit,omitempty"`
}

type UnitsOrAmountOrPercentage1Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Amt,omitempty"`
	Unit float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Unit,omitempty"`
	Pctg float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.003.001.08 Pctg,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYearMonth time.Time

func (t *xsdGYearMonth) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYearMonth) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
