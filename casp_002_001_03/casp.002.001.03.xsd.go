// Code generated by download. DO NOT EDIT.

package iso20022_casp_002_001_03

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type Acquirer10 struct {
	Id         GenericIdentification177 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id,omitempty"`
	ParamsVrsn Max256Text               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ParamsVrsn,omitempty"`
}

type Action11 struct {
	ActnTp    ActionType9Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ActnTp"`
	MsgToPres ActionMessage8  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MsgToPres,omitempty"`
}

type ActionMessage8 struct {
	MsgDstn      UserInterface4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MsgDstn"`
	InfQlfr      InformationQualify1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InfQlfr,omitempty"`
	Frmt         OutputFormat3Code        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Frmt,omitempty"`
	MsgCntt      Max20000Text             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MsgCntt"`
	MsgCnttSgntr ContentInformationType25 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MsgCnttSgntr,omitempty"`
	OutptBrcd    OutputBarcode1           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OutptBrcd,omitempty"`
	RspnReqrdFlg bool                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RspnReqrdFlg,omitempty"`
	MinDispTm    float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MinDispTm,omitempty"`
}

// May be one of BUSY, CPTR, DISP, NOVR, RQID, PINL, PINR, PRNT, RFRL, RQDT, DCCQ, FLFW, PINQ, CDCV, CHDA
type ActionType9Code string

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AddressVerification1 struct {
	AdrDgts    Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AdrDgts,omitempty"`
	PstlCdDgts Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PstlCdDgts,omitempty"`
}

type AggregationTransaction3 struct {
	FrstPmtDtTm ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 FrstPmtDtTm,omitempty"`
	LastPmtDtTm ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LastPmtDtTm,omitempty"`
	NbOfPmts    float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NbOfPmts,omitempty"`
	IndvPmt     []DetailedAmount21 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IndvPmt,omitempty"`
}

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of HS25, HS38, HS51, HS01, SH31, SH32, SH33, SH35, SHK1, SHK2
type Algorithm16Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5, CMA2, CM31, CM32, CM33, MCS3, CCA1, CCA2, CCA3
type Algorithm17Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA2, EA9C, EA5C, DA12, DA19, DA25, N108, EA5R, EA9R, EA2R, E3DR, E36C, E36R, SD5C, UKA1, UKA3
type Algorithm24Code string

// May be one of ERS2, ERS1, RPSS, ERS3, ED32, ED33, ED35, ED23, ED25, ES22, ES32, ES33, ES35, ES23, ES25, ED22
type Algorithm25Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Param,omitempty"`
}

type AlgorithmIdentification18 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Algo"`
	Param Parameter9     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Param,omitempty"`
}

type AlgorithmIdentification19 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Algo"`
	Param Parameter10    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Param,omitempty"`
}

type AlgorithmIdentification21 struct {
	Algo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Algo"`
}

type AlgorithmIdentification22 struct {
	Algo  Algorithm17Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Param,omitempty"`
}

type AlgorithmIdentification29 struct {
	Algo  Algorithm24Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Param,omitempty"`
}

type AlgorithmIdentification30 struct {
	Algo  Algorithm25Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Algo"`
	Param Parameter15     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Param,omitempty"`
}

type AmountAndDirection93 struct {
	Amt float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Amt"`
	Ccy ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy"`
	Sgn bool               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Sgn,omitempty"`
}

// May be one of MONE, POIN
type AmountUnit1Code string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// May be one of ATTD, SATT, UATT
type AttendanceContext1Code string

// May be one of ATTL, CARR, CUST, FULL, SELF
type AttendanceContext2Code string

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData7 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn,omitempty"`
	Rcpt        []Recipient10Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rcpt"`
	MACAlgo     AlgorithmIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MAC"`
}

// May be one of ICCD, AGNT, MERC, ACQR, ISSR, TRML
type AuthenticationEntity2Code string

// May be one of NPIN, PPSG, PSWD, SCRT, SCNL, SNCT, CPSG, ADDB, BIOM, CDHI, CRYP, CSCV, PSVE, CSEC, ADDS, MANU, FPIN, TOKP
type AuthenticationMethod6Code string

// May be one of TOKA, ADDB, BYPS, BIOM, CDHI, CRYP, CSCV, MANU, MERC, MOBL, FPIN, NPIN, OTHR, PPSG, PSVE, PSWD, TOKP, SCRT, SCNL, CSEC, SNCT, ADDS, CPSG, TOKN, UKNW
type AuthenticationMethod8Code string

// May be one of DENY, MRCH, CARD, AUTH, CRPT, UCRP
type AuthenticationResult1Code string

type AuthorisationResult14 struct {
	AuthstnNtty   GenericIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType10          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthstnCd,omitempty"`
	CmpltnReqrd   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CmpltnReqrd,omitempty"`
	TMSTrggr      TMSTrigger1             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TMSTrggr,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{1,30}
type BBANIdentifier string

type BalanceInquiryResponse3 struct {
	PmtAcct      PaymentAccount3       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtAcct,omitempty"`
	LltyAcct     LoyaltyAccount2       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyAcct,omitempty"`
	StordValAcct []StoredValueAccount2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 StordValAcct,omitempty"`
	Rct          []PaymentReceipt3     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rct,omitempty"`
}

// May be one of COQR, C128, C025, C039, EA13, EAN8, P417, UPCA
type BarcodeType1Code string

type BatchResponse3 struct {
	PrfrmdTx []PerformedTransaction3 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrfrmdTx,omitempty"`
}

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

type CapturedSignature1 struct {
	ImgFrmt  Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ImgFrmt"`
	ImgData  Max2MBBinary `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ImgData,omitempty"`
	ImgRef   Max500Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ImgRef,omitempty"`
	AddtlInf Max140Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlInf,omitempty"`
}

// May be one of CTDP, CHCK, CRDT, CURR, CDBT, DFLT, EPRS, HEQL, ISTL, INVS, LCDT, MBNW, MNMK, MNMC, MTGL, RTRM, RVLV, SVNG, STBD, UVRL, PRPD, FLTC
type CardAccountType3Code string

type CardAcquisitionResponse2 struct {
	POITxId   TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POITxId"`
	PmtBrnd   []Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtBrnd,omitempty"`
	CstmrLang string                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrLang,omitempty"`
	LltyAcct  []LoyaltyAccount2      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyAcct,omitempty"`
	CstmrOrdr []CustomerOrder1       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrOrdr,omitempty"`
}

// May be one of TAGC, PHYS, BRCD, MGST, CICC, DFLE, CTLS, ECTL, CDFL
type CardDataReading5Code string

// May be one of TAGC, PHYS, BRCD, MGST, CICC, DFLE, CTLS, ECTL, CDFL, SICC, UNKW, QRCD, OPTC
type CardDataReading8Code string

type CardDirectDebit2 struct {
	DbtrId      Debtor4                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DbtrId,omitempty"`
	CdtrId      Creditor4                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CdtrId"`
	MndtRltdInf MandateRelatedInformation13 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MndtRltdInf"`
}

// May be one of FFLB, SFLB, NFLB
type CardFallback1Code string

// May be one of ACCT, BARC, ISO2, PHON, CPAN, PRIV, UUID
type CardIdentificationType1Code string

type CardPaymentContext28 struct {
	PmtCntxt     PaymentContext27 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtCntxt,omitempty"`
	SaleCntxt    SaleContext4     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleCntxt,omitempty"`
	DrctDbtCntxt CardDirectDebit2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DrctDbtCntxt,omitempty"`
}

type CardPaymentEnvironment77 struct {
	Acqrr             Acquirer10               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Acqrr,omitempty"`
	Mrchnt            Organisation41           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Mrchnt,omitempty"`
	POI               PointOfInteraction11     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POI,omitempty"`
	Card              PaymentCard31            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Card,omitempty"`
	Chck              Check1                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Chck,omitempty"`
	StordValAcct      []StoredValueAccount2    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 StordValAcct,omitempty"`
	LltyAcct          []LoyaltyAccount2        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyAcct,omitempty"`
	CstmrDvc          CustomerDevice3          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrDvc,omitempty"`
	Wllt              CustomerDevice3          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Wllt,omitempty"`
	PmtTkn            Token1                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtTkn,omitempty"`
	MrchntTkn         MerchantToken1           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MrchntTkn,omitempty"`
	Crdhldr           Cardholder17             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Crdhldr,omitempty"`
	PrtctdCrdhldrData ContentInformationType28 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtctdCrdhldrData,omitempty"`
	SaleEnvt          RetailerSaleEnvironment2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleEnvt,omitempty"`
}

// May be one of BALC, CACT, CRDP, CAFH, CAVR, CSHW, CSHD, DEFR, LOAD, ORCR, PINC, QUCH, RFND, RESA, VALC, UNLD, CAFT, CAFL, CIDD
type CardPaymentServiceType12Code string

// May be one of IRES, URES, PRES, ARES, FREC, RREC
type CardPaymentServiceType3Code string

// May be one of BALC, CACT, CRDP, CAFH, CAVR, CSHW, CSHD, DEFR, LOAD, ORCR, PINC, QUCH, RFND, RESA, VALC, UNLD, CAFT, CAFL
type CardPaymentServiceType5Code string

// May be one of AGGR, DCCV, GRTT, LOYT, NRES, PUCO, RECP, SOAF, VCAU, INSI, INSA, CSHB, INST, NRFD
type CardPaymentServiceType9Code string

type CardPaymentToken5 struct {
	Tkn           Min8Max28NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tkn,omitempty"`
	CardSeqNb     Min2Max3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardSeqNb,omitempty"`
	TknXpryDt     Max10Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknXpryDt,omitempty"`
	TknChrtc      []Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknChrtc,omitempty"`
	TknRqstr      PaymentTokenIdentifiers1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknRqstr,omitempty"`
	TknAssrncLvl  float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncLvl,omitempty"`
	TknAssrncData Max500Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncData,omitempty"`
	TknAssrncMtd  Max2NumericText          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncMtd,omitempty"`
	TknInittdInd  bool                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknInittdInd,omitempty"`
}

type CardPaymentTransaction109 struct {
	AuthstnRslt     AuthorisationResult14            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthstnRslt"`
	TxVrfctnRslt    []TransactionVerificationResult4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxVrfctnRslt,omitempty"`
	AllwdPdctCd     []Product4                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AllwdPdctCd,omitempty"`
	NotAllwdPdctCd  []Product4                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NotAllwdPdctCd,omitempty"`
	AddtlAvlblPdct  []Product5                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlAvlblPdct,omitempty"`
	Bal             AmountAndDirection93             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Bal,omitempty"`
	PrtctdBal       ContentInformationType28         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtctdBal,omitempty"`
	Actn            []Action11                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Actn,omitempty"`
	CcyConvsElgblty CurrencyConversion20             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CcyConvsElgblty,omitempty"`
}

type CardPaymentTransaction110 struct {
	TxCaptr          bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxCaptr,omitempty"`
	TxTp             CardPaymentServiceType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxTp"`
	AddtlSvc         []CardPaymentServiceType9Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlSvc,omitempty"`
	SvcAttr          CardPaymentServiceType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvcAttr,omitempty"`
	LastTxFlg        bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LastTxFlg,omitempty"`
	MrchntCtgyCd     Min3Max4Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MrchntCtgyCd,omitempty"`
	SaleRefId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleRefId,omitempty"`
	TxId             TransactionIdentifier1          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxId"`
	OrgnlTx          CardPaymentTransaction112       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OrgnlTx,omitempty"`
	RcncltnId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RcncltnId,omitempty"`
	IssrRefData      Max140Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IssrRefData,omitempty"`
	TxDtls           CardPaymentTransactionDetails49 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxDtls"`
	MrchntRefData    Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MrchntRefData,omitempty"`
	CstmrOrdr        CustomerOrder1                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrOrdr,omitempty"`
	CstmrTkn         CardPaymentToken5               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrTkn,omitempty"`
	CstmrCnsnt       bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrCnsnt,omitempty"`
	CardPrgrmmPropsd []Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardPrgrmmPropsd,omitempty"`
	CardPrgrmmApld   Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardPrgrmmApld,omitempty"`
	SaleToPOIData    Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleToPOIData,omitempty"`
	SaleToAcqrrData  Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleToAcqrrData,omitempty"`
	SaleToIssrData   Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleToIssrData,omitempty"`
	AddtlTxData      []Max70Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlTxData,omitempty"`
}

type CardPaymentTransaction112 struct {
	SaleRefId Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleRefId,omitempty"`
	TxId      TransactionIdentifier1  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxId"`
	POIId     GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POIId"`
	CcyConvs  CurrencyConversion22    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CcyConvs,omitempty"`
}

type CardPaymentTransactionDetails49 struct {
	Ccy            ActiveCurrencyCode       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	TtlAmt         float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TtlAmt"`
	CmltvAmt       float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CmltvAmt,omitempty"`
	AmtQlfr        TypeOfAmount8Code        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AmtQlfr,omitempty"`
	DtldAmt        DetailedAmount15         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DtldAmt,omitempty"`
	ReqdAmt        float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ReqdAmt,omitempty"`
	AuthrsdAmt     float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthrsdAmt,omitempty"`
	InvcAmt        float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InvcAmt,omitempty"`
	VldtyDt        ISODate                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 VldtyDt,omitempty"`
	OnLineRsn      []OnLineReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OnLineRsn,omitempty"`
	UattnddLvlCtgy Max35NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UattnddLvlCtgy,omitempty"`
	AcctTp         CardAccountType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AcctTp,omitempty"`
	CcyConvsRslt   CurrencyConversion21     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CcyConvsRslt,omitempty"`
	Instlmt        RecurringTransaction2    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Instlmt,omitempty"`
	AggtnTx        AggregationTransaction3  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AggtnTx,omitempty"`
	PdctCdSetId    Max10Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctCdSetId,omitempty"`
	SaleItm        []Product6               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleItm,omitempty"`
	DlvryLctn      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DlvryLctn,omitempty"`
	AddtlInf       []ExternallyDefinedData2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlInf,omitempty"`
	ICCRltdData    Max10000Binary           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ICCRltdData,omitempty"`
}

// May be one of COMM, CONS
type CardProductType1Code string

type Cardholder17 struct {
	Id           PersonIdentification15           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id,omitempty"`
	Nm           Max45Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Nm,omitempty"`
	Lang         string                           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Lang,omitempty"`
	BllgAdr      PostalAddress22                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BllgAdr,omitempty"`
	ShppgAdr     PostalAddress22                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ShppgAdr,omitempty"`
	TripNb       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TripNb,omitempty"`
	Vhcl         Vehicle1                         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vhcl,omitempty"`
	Authntcn     []CardholderAuthentication14     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Authntcn,omitempty"`
	TxVrfctnRslt []TransactionVerificationResult4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxVrfctnRslt,omitempty"`
	PrsnlData    Max70Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrsnlData,omitempty"`
	MobData      []MobileData3                    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MobData,omitempty"`
}

type CardholderAuthentication14 struct {
	AuthntcnMtd       AuthenticationMethod8Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcnMtd,omitempty"`
	AuthntcnXmptn     Exemption1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcnXmptn,omitempty"`
	AuthntcnVal       Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcnVal,omitempty"`
	PrtctdAuthntcnVal ContentInformationType28  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtctdAuthntcnVal,omitempty"`
	CrdhldrOnLinePIN  OnLinePIN8                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CrdhldrOnLinePIN,omitempty"`
	CrdhldrId         PersonIdentification15    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CrdhldrId,omitempty"`
	AdrVrfctn         AddressVerification1      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AdrVrfctn,omitempty"`
	AuthntcnTp        Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcnTp,omitempty"`
	AuthntcnLvl       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcnLvl,omitempty"`
	AuthntcnRslt      AuthenticationResult1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcnRslt,omitempty"`
	AuthntcnAddtlInf  ExternallyDefinedData2    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcnAddtlInf,omitempty"`
}

// May be one of APKI, CHDT, MNSG, MNVR, FBIG, FBIO, FDSG, FCPN, FEPN, NPIN, PKIS, SCEC, NBIO, NOVF, OTHR
type CardholderVerificationCapability4Code string

type CashAccountIdentification7Choice struct {
	IBAN     IBAN2007Identifier               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IBAN,omitempty"`
	BBAN     BBANIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BBAN,omitempty"`
	UPIC     UPICIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UPIC,omitempty"`
	DmstAcct SimpleIdentificationInformation4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DmstAcct,omitempty"`
}

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RltvDstngshdNm"`
}

type Check1 struct {
	BkId          Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BkId,omitempty"`
	AcctNb        Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AcctNb,omitempty"`
	ChckNb        Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ChckNb,omitempty"`
	ChckCardNb    Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ChckCardNb,omitempty"`
	ChckTrckData2 TrackData2     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ChckTrckData2,omitempty"`
	ChckTp        CheckType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ChckTp,omitempty"`
	Ctry          Max3Text       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ctry,omitempty"`
}

// May be one of BANK, BUSI, GOVC, PAYR, PERS
type CheckType1Code string

type Commission18 struct {
	Rate     float64    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rate"`
	AddtlInf Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlInf,omitempty"`
}

type Commission19 struct {
	Amt      float64    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Amt"`
	AddtlInf Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlInf,omitempty"`
}

type CommunicationAddress9 struct {
	PstlAdr      PostalAddress22 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PstlAdr,omitempty"`
	Email        Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Email,omitempty"`
	URLAdr       Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 URLAdr,omitempty"`
	Phne         PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Phne,omitempty"`
	CstmrSvc     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlCtctInf,omitempty"`
}

type CommunicationCharacteristics5 struct {
	ComTp      POICommunicationType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ComTp"`
	RmotPty    []PartyType7Code            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RmotPty"`
	Actv       bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Actv"`
	Params     NetworkParameters7          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Params,omitempty"`
	PhysIntrfc PhysicalInterfaceParameter1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PhysIntrfc,omitempty"`
}

type ContentInformationType25 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CnttTp"`
	AuthntcdData AuthenticatedData7 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcdData,omitempty"`
	SgndData     SignedData6        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SgndData,omitempty"`
}

type ContentInformationType26 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CnttTp"`
	EnvlpdData   EnvelopedData8     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData7 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AuthntcdData,omitempty"`
	SgndData     SignedData6        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SgndData,omitempty"`
	DgstdData    DigestedData5      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstdData,omitempty"`
}

type ContentInformationType28 struct {
	CnttTp     ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CnttTp"`
	EnvlpdData EnvelopedData8   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 EnvlpdData"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type Creditor4 struct {
	Cdtr   PartyIdentification178Choice `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Cdtr"`
	RegnId Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RegnId,omitempty"`
}

type CryptographicKey15 struct {
	Id           Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	AddtlId      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlId,omitempty"`
	Nm           Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Nm,omitempty"`
	SctyPrfl     Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SctyPrfl,omitempty"`
	ItmNb        Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ItmNb,omitempty"`
	Vrsn         Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn"`
	Tp           CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp,omitempty"`
	Fctn         []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Fctn,omitempty"`
	ActvtnDt     ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ActvtnDt,omitempty"`
	DeactvtnDt   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DeactvtnDt,omitempty"`
	KeyVal       ContentInformationType26  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyVal,omitempty"`
	KeyChckVal   Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyChckVal,omitempty"`
	AddtlMgmtInf []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlMgmtInf,omitempty"`
}

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

type CurrencyAndAmount struct {
	Value float64      `xml:",chardata"`
	Ccy   CurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type CurrencyCode string

type CurrencyConversion20 struct {
	CcyConvsId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CcyConvsId,omitempty"`
	TrgtCcy       CurrencyDetails3       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TrgtCcy"`
	RsltgAmt      float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RsltgAmt"`
	XchgRate      float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 XchgRate"`
	NvrtdXchgRate float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NvrtdXchgRate,omitempty"`
	QtnDt         ISODateTime            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 QtnDt,omitempty"`
	VldUntil      ISODateTime            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 VldUntil,omitempty"`
	SrcCcy        CurrencyDetails2       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SrcCcy"`
	OrgnlAmt      OriginalAmountDetails1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OrgnlAmt"`
	ComssnDtls    []Commission19         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ComssnDtls,omitempty"`
	MrkUpDtls     []Commission18         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MrkUpDtls,omitempty"`
	DclrtnDtls    []ActionMessage8       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DclrtnDtls,omitempty"`
}

type CurrencyConversion21 struct {
	AccptdByCrdhldr bool                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AccptdByCrdhldr,omitempty"`
	Convs           CurrencyConversion20 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Convs,omitempty"`
}

type CurrencyConversion22 struct {
	Rslt      CurrencyConversionResponse3Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rslt"`
	RsltRsn   Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RsltRsn,omitempty"`
	ConvsDtls []CurrencyConversion20          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ConvsDtls,omitempty"`
}

// May be one of ODCC, DCCA, ICRD, IMER, IPRD, IRAT, NDCC, REST, CATG
type CurrencyConversionResponse3Code string

type CurrencyDetails2 struct {
	AlphaCd ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AlphaCd,omitempty"`
	NmrcCd  Exact3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NmrcCd,omitempty"`
	Dcml    float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Dcml,omitempty"`
	Nm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Nm,omitempty"`
}

type CurrencyDetails3 struct {
	AlphaCd ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AlphaCd"`
	NmrcCd  Exact3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NmrcCd"`
	Dcml    float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Dcml"`
	Nm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Nm,omitempty"`
}

type CustomerDevice3 struct {
	Id    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id,omitempty"`
	Tp    Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp,omitempty"`
	Prvdr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Prvdr,omitempty"`
}

type CustomerOrder1 struct {
	CstmrOrdrId Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrOrdrId"`
	SaleRefId   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleRefId"`
	OpnOrdrStat bool               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OpnOrdrStat,omitempty"`
	StartDt     ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 StartDt"`
	EndDt       ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 EndDt,omitempty"`
	Unit        AmountUnit1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Unit,omitempty"`
	FrcstdAmt   float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 FrcstdAmt"`
	CurAmt      float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CurAmt,omitempty"`
	Ccy         ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	AccsdBy     Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AccsdBy,omitempty"`
	AddtlInf    Max1025Text        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlInf,omitempty"`
}

type DateAndPlaceOfBirth1 struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CtryOfBirth"`
}

type Debtor4 struct {
	Dbtr   PartyIdentification178Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Dbtr,omitempty"`
	AcctId CashAccountIdentification7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AcctId,omitempty"`
}

type DetailedAmount15 struct {
	AmtGoodsAndSvcs float64           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AmtGoodsAndSvcs,omitempty"`
	CshBck          float64           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CshBck,omitempty"`
	Grtty           float64           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Grtty,omitempty"`
	Fees            []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Fees,omitempty"`
	Rbt             []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rbt,omitempty"`
	ValAddedTax     []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ValAddedTax,omitempty"`
	Srchrg          []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Srchrg,omitempty"`
}

type DetailedAmount21 struct {
	Amt            float64              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Amt"`
	DtTm           ISODateTime          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DtTm"`
	CardDataNtryMd CardDataReading8Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardDataNtryMd,omitempty"`
	ICCRltdData    Max10000Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ICCRltdData,omitempty"`
	Labl           Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Labl,omitempty"`
}

type DetailedAmount4 struct {
	Amt  float64    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Amt"`
	Labl Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Labl,omitempty"`
}

type DigestedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Dgst"`
}

type DisplayCapabilities4 struct {
	Dstn      []UserInterface4Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Dstn"`
	AvlblFrmt []OutputFormat1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AvlblFrmt,omitempty"`
	NbOfLines float64              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NbOfLines,omitempty"`
	LineWidth float64              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LineWidth,omitempty"`
	AvlblLang []string             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AvlblLang,omitempty"`
}

type Document struct {
	SaleToPOISvcRspn SaleToPOIServiceResponseV03 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleToPOISvcRspn"`
}

// May be one of JNRL, CRCP, HRCP, SRCP, RPIN, VCHR
type DocumentType7Code string

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Cntt,omitempty"`
}

type EncryptedContent6 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CnttNcrptnAlgo,omitempty"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcrptdData"`
}

// May be one of TR31, TR34, I238
type EncryptionFormat2Code string

type EnvelopedData8 struct {
	Vrsn       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn,omitempty"`
	OrgtrInf   OriginatorInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OrgtrInf,omitempty"`
	Rcpt       []Recipient10Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rcpt"`
	NcrptdCntt EncryptedContent6      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcrptdCntt,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{3}
type Exact3AlphaNumericText string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

// May be one of LOWA, MINT, RECP, SCPE, SCAD, TRAE, PKGE, TMBE
type Exemption1Code string

type ExternallyDefinedData2 struct {
	Id        Max1025Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	Val       Max100KBinary            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Val,omitempty"`
	PrtctdVal ContentInformationType26 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtctdVal,omitempty"`
	Tp        Max1025Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp,omitempty"`
}

// May be one of YEAR, MNTH, QURT, MIAN, WEEK, DAIL, TEND
type Frequency3Code string

type GenericIdentification176 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	Tp     PartyType33Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp,omitempty"`
	Issr   PartyType33Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ShrtNm,omitempty"`
}

type GenericIdentification177 struct {
	Id       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	Tp       PartyType33Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp,omitempty"`
	Issr     PartyType33Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Issr,omitempty"`
	Ctry     Min2Max3AlphaText  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ctry,omitempty"`
	ShrtNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ShrtNm,omitempty"`
	RmotAccs NetworkParameters7 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RmotAccs,omitempty"`
	Glctn    Geolocation1       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Glctn,omitempty"`
}

type GenericIdentification32 struct {
	Id     Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	Tp     PartyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp,omitempty"`
	Issr   PartyType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Issr,omitempty"`
	ShrtNm Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ShrtNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SchmeNm,omitempty"`
}

type GenericIdentification4 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	IdTp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IdTp"`
}

type GenericIdentification48 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	Vrsn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Issr"`
}

type GenericIdentification90 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id,omitempty"`
	Tp     PartyType14Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ShrtNm,omitempty"`
}

type GenericInformation1 struct {
	Nm  Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Nm"`
	Val Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Val,omitempty"`
}

type Geolocation1 struct {
	GeogcCordints GeolocationGeographicCoordinates1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 GeogcCordints,omitempty"`
	UTMCordints   GeolocationUTMCoordinates1        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UTMCordints,omitempty"`
}

type GeolocationGeographicCoordinates1 struct {
	Lat  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Lat"`
	Long Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Long"`
}

type GeolocationUTMCoordinates1 struct {
	UTMZone    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UTMZone"`
	UTMEstwrd  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UTMEstwrd"`
	UTMNrthwrd Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UTMNrthwrd"`
}

type Header41 struct {
	MsgFctn    RetailerMessage1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MsgFctn"`
	PrtcolVrsn Max6Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtcolVrsn"`
	XchgId     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 XchgId"`
	CreDtTm    ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CreDtTm"`
	InitgPty   GenericIdentification177 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InitgPty"`
	RcptPty    GenericIdentification177 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RcptPty,omitempty"`
	Tracblt    []Traceability8          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tracblt,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

// May be one of CUSA, DISP, DOCT, ERRO, INPT, POIR, RCPT, SOND, STAT, VCHR
type InformationQualify1Code string

// May be one of EQPM, NQPM, DFRI
type InstalmentPlan1Code string

type IssuerAndSerialNumber2 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Issr"`
	SrlNb Max500Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SrlNb"`
}

type KEK7 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DerivtnId,omitempty"`
}

type KeyTransport7 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn,omitempty"`
	RcptId        Recipient9Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

// May be one of INDR, IPMP, MPOI, MPMP, MSLE, SSLE, VNDG
type LocationCategory3Code string

// May be one of ABRD, NMDC, FIXD, VIRT
type LocationCategory4Code string

type LoyaltyAccount2 struct {
	LltyId Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyId,omitempty"`
	NtryMd CardDataReading8Code        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NtryMd,omitempty"`
	IdTp   CardIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IdTp,omitempty"`
	Brnd   Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Brnd,omitempty"`
	Prvdr  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Prvdr,omitempty"`
	OwnrNm Max45Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OwnrNm,omitempty"`
	Unit   AmountUnit1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Unit,omitempty"`
	Ccy    ActiveCurrencyCode          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	Bal    float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Bal,omitempty"`
}

type LoyaltyAmount1 struct {
	Unit AmountUnit1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Unit,omitempty"`
	Ccy  ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	Amt  float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Amt"`
}

// May be one of ALLO, DENY, PRCS, PROP, REQU
type LoyaltyHandling1Code string

type LoyaltyRebates1 struct {
	TtlRbt     float64           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TtlRbt,omitempty"`
	RbtLabl    Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RbtLabl,omitempty"`
	SaleItmRbt []SaleItemRebate1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleItmRbt,omitempty"`
}

type LoyaltyResponse2 struct {
	SaleTxId     TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleTxId"`
	POITxId      TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POITxId"`
	POIRcncltnId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POIRcncltnId,omitempty"`
	Rslt         []LoyaltyResult2       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rslt,omitempty"`
}

type LoyaltyResult2 struct {
	Acct    LoyaltyAccount2    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Acct"`
	Amt     LoyaltyAmount1     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Amt,omitempty"`
	SvrData LoyaltyServerData1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvrData,omitempty"`
	Rbts    LoyaltyRebates1    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rbts,omitempty"`
}

type LoyaltyServerData1 struct {
	LltySvrId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltySvrId,omitempty"`
	ApprvlCd     Min6Max8Text           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ApprvlCd,omitempty"`
	LltyTxId     TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyTxId,omitempty"`
	HstRcncltnId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 HstRcncltnId,omitempty"`
}

type MandateRelatedInformation13 struct {
	MndtId    Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MndtId"`
	DtOfSgntr ISODate      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DtOfSgntr,omitempty"`
	MndtImg   Max2MBBinary `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MndtImg,omitempty"`
}

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 1025 items long
type Max1025Text string

// May be no more than 104 items long
type Max104Text string

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 10 items long
type Max10Text string

// Must match the pattern [0-9]{1,11}
type Max11NumericText string

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 140 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// May be no more than 16 items long
type Max16Text string

// Must match the pattern [0-9]{1,19}
type Max19NumericText string

// May be no more than 20000 items long
type Max20000Text string

// May be no more than 256 items long
type Max256Text string

type Max2KBinary []byte

func (t *Max2KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max2KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max2MBBinary []byte

func (t *Max2MBBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max2MBBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 30 items long
type Max30Text string

// May be no more than 350 items long
type Max350Text string

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,35}
type Max35NumericText string

// May be no more than 35 items long
type Max35Text string

// May be no more than 37 items long
type Max37Text string

// May be no more than 3 items long
type Max3Text string

// May be no more than 45 items long
type Max45Text string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 500 items long
type Max500Text string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// May be no more than 6 items long
type Max6Text string

// May be no more than 70 items long
type Max70Text string

// May be no more than 76 items long
type Max76Text string

// May be no more than 8000 items long
type Max8000Text string

type MemoryCharacteristics1 struct {
	Id     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	TtlSz  float64         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TtlSz"`
	FreeSz float64         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 FreeSz"`
	Unit   MemoryUnit1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Unit"`
}

// May be one of BYTE, EXAB, GIGA, KILO, MEGA, PETA, TERA
type MemoryUnit1Code string

type MerchantToken1 struct {
	Tkn           Min8Max28NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tkn,omitempty"`
	TknXpryDt     Max10Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknXpryDt,omitempty"`
	TknChrtc      []Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknChrtc,omitempty"`
	TknRqstr      PaymentTokenIdentifiers1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknRqstr,omitempty"`
	TknAssrncLvl  float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncLvl,omitempty"`
	TknAssrncData Max500Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncData,omitempty"`
	TknAssrncMtd  Max2NumericText          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncMtd,omitempty"`
	TknInittdInd  bool                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknInittdInd,omitempty"`
}

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must match the pattern [0-9]{2,3}
type Min2Max3NumericText string

// May be no more than 4 items long
type Min3Max4Text string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 8 items long
type Min6Max8Text string

// Must match the pattern [0-9]{8,28}
type Min8Max28NumericText string

type MobileData3 struct {
	MobCtryCd     Min2Max3AlphaText        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MobCtryCd,omitempty"`
	MobNtwkCd     Min2Max3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MobNtwkCd,omitempty"`
	MobMskdMSISDN Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MobMskdMSISDN,omitempty"`
	Glctn         Geolocation1             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Glctn,omitempty"`
	SnstvMobData  SensitiveMobileData1     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SnstvMobData,omitempty"`
	PrtctdMobData ContentInformationType28 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtctdMobData,omitempty"`
}

type NameAndAddress6 struct {
	Nm  Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Nm"`
	Adr PostalAddress2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Adr"`
}

type NetworkParameters7 struct {
	Adr        []NetworkParameters9 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AccsCd,omitempty"`
	SvrCert    []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvrCertIdr,omitempty"`
	ClntCert   []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ClntCert,omitempty"`
	SctyPrfl   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SctyPrfl,omitempty"`
}

type NetworkParameters9 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NtwkTp"`
	AdrVal Max500Text       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AdrVal"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

// May be one of OFLN, ONLN, SMON
type OnLineCapability1Code string

type OnLinePIN8 struct {
	NcrptdPINBlck ContentInformationType28 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcrptdPINBlck"`
	PINFrmt       PINFormat3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PINFrmt"`
	AddtlInpt     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlInpt,omitempty"`
}

// May be one of RNDM, ICCF, MERF, TRMF, ISSF, FRLT, EXFL, TAMT, CBIN, UBIN, CPAN, FLOW, CRCY
type OnLineReason1Code string

type Organisation26 struct {
	CmonNm       Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CmonNm"`
	Adr          Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Adr,omitempty"`
	CtryCd       ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CtryCd"`
	MrchntCtgyCd Min3Max4Text           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MrchntCtgyCd"`
	RegdIdr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RegdIdr"`
}

type Organisation41 struct {
	Id          GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id,omitempty"`
	CmonNm      Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CmonNm,omitempty"`
	LctnCtgy    LocationCategory4Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LctnCtgy,omitempty"`
	LctnAndCtct CommunicationAddress9   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LctnAndCtct,omitempty"`
	SchmeData   Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SchmeData,omitempty"`
}

type OriginalAmountDetails1 struct {
	ActlAmt float64 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ActlAmt,omitempty"`
	MinAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MinAmt,omitempty"`
	MaxAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MaxAmt,omitempty"`
}

type OriginatorInformation1 struct {
	Cert []Max5000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Cert,omitempty"`
}

type OutputBarcode1 struct {
	BrcdTp        BarcodeType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BrcdTp"`
	BrcdVal       Max8000Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BrcdVal,omitempty"`
	QRCdBinryVal  Max3000Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 QRCdBinryVal,omitempty"`
	QRCdVrsn      Max16Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 QRCdVrsn,omitempty"`
	QRCdNcodgMd   QRCodeEncodingMode1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 QRCdNcodgMd"`
	QRCdErrCrrctn QRCodeErrorCorrection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 QRCdErrCrrctn,omitempty"`
}

// May be one of MREF, TEXT, HTML
type OutputFormat1Code string

// May be one of BARC, MENT, MREF, SREF, TEXT, HTML
type OutputFormat3Code string

// May be one of ISO0, ISO1, ISO2, ISO3, ISO4, ISO5
type PINFormat3Code string

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI, WT2G, WT3G, WT4G, WT5G
type POICommunicationType2Code string

// May be one of APPL, CERT, EVAL
type POIComponentAssessment1Code string

// May be one of WAIT, OUTD, OPER, DACT
type POIComponentStatus1Code string

// May be one of AQPP, APPR, TLPR, SCPR, SERV, TERM, DVCE, SECM, APLI, EMVK, EMVO, MDWR, DRVR, OPST, MRPR, CRTF, TMSP, SACP, SAPR, LOGF, MDFL, SOFT, CONF, RPFL
type POIComponentType6Code string

type PackageType2 struct {
	PackgId     GenericIdentification176 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PackgId,omitempty"`
	PackgLngth  float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PackgLngth,omitempty"`
	OffsetStart float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OffsetStart,omitempty"`
	OffsetEnd   float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OffsetEnd,omitempty"`
	PackgBlck   []ExternallyDefinedData2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PackgBlck,omitempty"`
}

type Parameter10 struct {
	NcrptnFrmt   EncryptionFormat2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MskGnrtrAlgo,omitempty"`
}

type Parameter12 struct {
	NcrptnFrmt   EncryptionFormat2Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BPddg,omitempty"`
}

type Parameter15 struct {
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MskGnrtrAlgo,omitempty"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaltLngth,omitempty"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TrlrFld,omitempty"`
	OIDCrvNm     Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OIDCrvNm,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstAlgo,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BPddg,omitempty"`
}

type Parameter9 struct {
	DgstAlgo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstAlgo,omitempty"`
}

type PartyIdentification178Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AnyBIC,omitempty"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtryId,omitempty"`
	NmAndAdr NameAndAddress6         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NmAndAdr,omitempty"`
}

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS, ICCA
type PartyType14Code string

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS, MTMG, TAXH, TMGT
type PartyType33Code string

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS
type PartyType3Code string

// May be one of MERC, ACCP, ITAG, ACQR, CISS, TAXH
type PartyType4Code string

// May be one of ACQR, ITAG, PCPT, TMGT, SALE
type PartyType7Code string

type PaymentAccount3 struct {
	Ccy          ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	CurBal       float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CurBal,omitempty"`
	PmtAcqrrData Acquirer10         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtAcqrrData,omitempty"`
}

type PaymentCard31 struct {
	PrtctdCardData ContentInformationType28 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtctdCardData,omitempty"`
	PrvtCardData   Max100KBinary            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrvtCardData,omitempty"`
	PlainCardData  PlainCardData15          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PlainCardData,omitempty"`
	PmtAcctRef     Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtAcctRef,omitempty"`
	MskdPAN        Max30Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MskdPAN,omitempty"`
	IssrBIN        Max15NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IssrBIN,omitempty"`
	CardCtryCd     Max3Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardCtryCd,omitempty"`
	CardCcyCd      Exact3AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardCcyCd,omitempty"`
	CardPdctPrfl   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardPdctPrfl,omitempty"`
	CardBrnd       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardBrnd,omitempty"`
	CardPdctTp     CardProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardPdctTp,omitempty"`
	CardPdctSubTp  Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardPdctSubTp,omitempty"`
	IntrnlCard     bool                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IntrnlCard,omitempty"`
	AllwdPdct      []Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AllwdPdct,omitempty"`
	SvcOptn        Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvcOptn,omitempty"`
	AddtlCardData  Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlCardData,omitempty"`
}

type PaymentContext27 struct {
	CardPres       bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardPres,omitempty"`
	CrdhldrPres    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CrdhldrPres,omitempty"`
	OnLineCntxt    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OnLineCntxt,omitempty"`
	AttndncCntxt   AttendanceContext1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AttndncCntxt,omitempty"`
	TxEnvt         TransactionEnvironment1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxEnvt,omitempty"`
	TxChanl        TransactionChannel5Code       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxChanl,omitempty"`
	AttndntMsgCpbl bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AttndntMsgCpbl,omitempty"`
	AttndntLang    string                        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AttndntLang,omitempty"`
	CardDataNtryMd CardDataReading8Code          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardDataNtryMd,omitempty"`
	FllbckInd      CardFallback1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 FllbckInd,omitempty"`
	SpprtdOptn     []SupportedPaymentOption1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SpprtdOptn,omitempty"`
}

type PaymentReceipt3 struct {
	DocQlfr       DocumentType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DocQlfr"`
	IntgrtdPrtFlg bool              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IntgrtdPrtFlg,omitempty"`
	ReqrdSgntrFlg bool              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ReqrdSgntrFlg,omitempty"`
	OutptCntt     ActionMessage8    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OutptCntt"`
}

type PaymentResponse3 struct {
	SaleTxId     TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleTxId"`
	SaleRefId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleRefId,omitempty"`
	POITxId      TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POITxId"`
	POIRcncltnId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POIRcncltnId,omitempty"`
	IssrRefData  Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IssrRefData,omitempty"`
	RtlrPmtRslt  RetailerPaymentResult3 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RtlrPmtRslt"`
	PmtRct       []PaymentReceipt3      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtRct,omitempty"`
	LltyRslt     []LoyaltyResult2       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyRslt,omitempty"`
	CstmrOrdr    []CustomerOrder1       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrOrdr,omitempty"`
}

type PaymentTokenIdentifiers1 struct {
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrvdrId"`
	RqstrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RqstrId"`
}

type PerformedTransaction3 struct {
	Rspn         ResponseType11         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rspn"`
	SaleTxId     TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleTxId,omitempty"`
	POITxId      TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POITxId,omitempty"`
	POIRcncltnId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POIRcncltnId,omitempty"`
	PmtRslt      RetailerPaymentResult3 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtRslt,omitempty"`
	LltyRslt     []LoyaltyResult2       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyRslt,omitempty"`
	RvsdAmt      float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RvsdAmt,omitempty"`
}

type PersonIdentification15 struct {
	DrvrLicNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DrvrLicNb,omitempty"`
	DrvrLicLctn     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DrvrLicLctn,omitempty"`
	DrvrLicNm       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DrvrLicNm,omitempty"`
	DrvrId          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DrvrId,omitempty"`
	CstmrNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrNb,omitempty"`
	SclSctyNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SclSctyNb,omitempty"`
	AlnRegnNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AlnRegnNb,omitempty"`
	PsptNb          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PsptNb,omitempty"`
	TaxIdNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TaxIdNb,omitempty"`
	IdntyCardNb     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IdntyCardNb,omitempty"`
	MplyrIdNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MplyrIdNb,omitempty"`
	MplyeeIdNb      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MplyeeIdNb,omitempty"`
	JobNb           Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 JobNb,omitempty"`
	Dept            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Dept,omitempty"`
	EmailAdr        Max256Text               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 EmailAdr,omitempty"`
	DtAndPlcOfBirth DateAndPlaceOfBirth1     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Othr,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PhysicalInterfaceParameter1 struct {
	IntrfcNm    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IntrfcNm"`
	IntrfcTp    POICommunicationType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IntrfcTp,omitempty"`
	UsrNm       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UsrNm,omitempty"`
	AccsCd      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AccsCd,omitempty"`
	SctyPrfl    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SctyPrfl,omitempty"`
	AddtlParams Max2KBinary               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlParams,omitempty"`
}

type PlainCardData15 struct {
	PAN       Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PAN"`
	CardSeqNb Min2Max3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardSeqNb,omitempty"`
	FctvDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 FctvDt,omitempty"`
	XpryDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 XpryDt"`
	SvcCd     Exact3NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvcCd,omitempty"`
	Trck1     Max76Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Trck1,omitempty"`
	Trck2     Max37Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Trck2,omitempty"`
	Trck3     Max104Text           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Trck3,omitempty"`
	CrdhldrNm Max45Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CrdhldrNm,omitempty"`
}

type PlainCardData17 struct {
	PAN           Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PAN,omitempty"`
	Trck1         Max76Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Trck1,omitempty"`
	Trck2         Max37Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Trck2,omitempty"`
	Trck3         Max104Text           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Trck3,omitempty"`
	AddtlCardData []Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlCardData,omitempty"`
	NtryMd        CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NtryMd,omitempty"`
}

type PointOfInteraction11 struct {
	Id           GenericIdentification177        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	SysNm        Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SysNm,omitempty"`
	GrpId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 GrpId,omitempty"`
	Cpblties     PointOfInteractionCapabilities9 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Cpblties,omitempty"`
	TmZone       Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TmZone,omitempty"`
	TermnlIntgtn LocationCategory3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TermnlIntgtn,omitempty"`
	Cmpnt        []PointOfInteractionComponent11 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Cmpnt,omitempty"`
}

type PointOfInteractionCapabilities9 struct {
	CardRdngCpblties      []CardDataReading8Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardRdngCpblties,omitempty"`
	CrdhldrVrfctnCpblties []CardholderVerificationCapability4Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CrdhldrVrfctnCpblties,omitempty"`
	PINLngthCpblties      float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PINLngthCpblties,omitempty"`
	ApprvlCdLngth         float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ApprvlCdLngth,omitempty"`
	MxScrptLngth          float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MxScrptLngth,omitempty"`
	CardCaptrCpbl         bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardCaptrCpbl,omitempty"`
	OnLineCpblties        OnLineCapability1Code                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OnLineCpblties,omitempty"`
	MsgCpblties           []DisplayCapabilities4                  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MsgCpblties,omitempty"`
}

type PointOfInteractionComponent11 struct {
	Tp       POIComponentType6Code                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp"`
	SubTpInf Max70Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SubTpInf,omitempty"`
	Id       PointOfInteractionComponentIdentification2  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
	Sts      PointOfInteractionComponentStatus3          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Sts,omitempty"`
	StdCmplc []GenericIdentification48                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 StdCmplc,omitempty"`
	Chrtcs   PointOfInteractionComponentCharacteristics7 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Chrtcs,omitempty"`
	Assmnt   []PointOfInteractionComponentAssessment1    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Assmnt,omitempty"`
	Packg    []PackageType2                              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Packg,omitempty"`
}

type PointOfInteractionComponentAssessment1 struct {
	Tp      POIComponentAssessment1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp"`
	Assgnr  []Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Assgnr"`
	DlvryDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DlvryDt,omitempty"`
	XprtnDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 XprtnDt,omitempty"`
	Nb      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Nb"`
}

type PointOfInteractionComponentCharacteristics7 struct {
	Mmry           []MemoryCharacteristics1        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Mmry,omitempty"`
	Com            []CommunicationCharacteristics5 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Com,omitempty"`
	SctyAccsMdls   float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SctyAccsMdls,omitempty"`
	SbcbrIdntyMdls float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SbcbrIdntyMdls,omitempty"`
	SctyElmt       []CryptographicKey15            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SctyElmt,omitempty"`
}

type PointOfInteractionComponentIdentification2 struct {
	ItmNb   Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ItmNb,omitempty"`
	PrvdrId Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrvdrId,omitempty"`
	Id      Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id,omitempty"`
	SrlNb   Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SrlNb,omitempty"`
}

type PointOfInteractionComponentStatus3 struct {
	VrsnNb Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 VrsnNb,omitempty"`
	Sts    POIComponentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Sts,omitempty"`
	XpryDt ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 XpryDt,omitempty"`
}

type PostalAddress2 struct {
	StrtNm      Max70Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 StrtNm,omitempty"`
	PstCdId     Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PstCdId"`
	TwnNm       Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TwnNm"`
	CtrySubDvsn Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CtrySubDvsn,omitempty"`
	Ctry        CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ctry"`
}

type PostalAddress22 struct {
	AdrTp       AddressType2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AdrTp,omitempty"`
	Dept        Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Dept,omitempty"`
	SubDept     Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SubDept,omitempty"`
	AdrLine     []Max70Text       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AdrLine,omitempty"`
	StrtNm      Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 StrtNm,omitempty"`
	BldgNb      Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BldgNb,omitempty"`
	PstCd       Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PstCd,omitempty"`
	TwnNm       Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TwnNm,omitempty"`
	CtrySubDvsn []Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CtrySubDvsn,omitempty"`
	CtryCd      Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CtryCd,omitempty"`
}

type Product4 struct {
	PdctCd      Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctCd"`
	AddtlPdctCd Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlPdctCd,omitempty"`
}

type Product5 struct {
	PdctCd      Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctCd"`
	AddtlPdctCd Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlPdctCd,omitempty"`
	AmtLmt      float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AmtLmt,omitempty"`
	QtyLmt      float64            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 QtyLmt,omitempty"`
	UnitOfMeasr UnitOfMeasure6Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UnitOfMeasr,omitempty"`
}

type Product6 struct {
	ItmId         Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ItmId,omitempty"`
	PdctCd        Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctCd"`
	AddtlPdctCd   Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlPdctCd,omitempty"`
	UnitOfMeasr   UnitOfMeasure6Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UnitOfMeasr,omitempty"`
	PdctQty       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctQty,omitempty"`
	UnitPric      float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UnitPric,omitempty"`
	UnitPricSgn   bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UnitPricSgn,omitempty"`
	PdctAmt       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctAmt"`
	PdctAmtSgn    bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctAmtSgn,omitempty"`
	ValAddedTax   float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ValAddedTax,omitempty"`
	TaxTp         Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TaxTp,omitempty"`
	PdctDesc      Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctDesc,omitempty"`
	DlvryLctn     Max10Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DlvryLctn,omitempty"`
	DlvrySvc      AttendanceContext2Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DlvrySvc,omitempty"`
	SaleChanl     Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleChanl,omitempty"`
	AddtlPdctDesc Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlPdctDesc,omitempty"`
}

// May be one of ALFA, BINA, KANJ, NUME
type QRCodeEncodingMode1Code string

// May be one of M015, Q025, H030, L007
type QRCodeErrorCorrection1Code string

type Recipient10Choice struct {
	KeyTrnsprt KeyTransport7  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyTrnsprt,omitempty"`
	KEK        KEK7           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KEK,omitempty"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyIdr,omitempty"`
}

type Recipient9Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IssrAndSrlNb,omitempty"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 KeyIdr,omitempty"`
}

type RecurringTransaction2 struct {
	InstlmtPlan []InstalmentPlan1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InstlmtPlan,omitempty"`
	PlanId      Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PlanId,omitempty"`
	SeqNb       float64               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SeqNb,omitempty"`
	PrdUnit     Frequency3Code        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrdUnit,omitempty"`
	InstlmtPrd  float64               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InstlmtPrd,omitempty"`
	TtlNbOfPmts float64               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TtlNbOfPmts,omitempty"`
	FrstPmtDt   ISODate               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 FrstPmtDt,omitempty"`
	TtlAmt      CurrencyAndAmount     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TtlAmt,omitempty"`
	FrstAmt     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 FrstAmt,omitempty"`
	Chrgs       float64               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Chrgs,omitempty"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AttrVal"`
}

// May be one of WARN, FAIL, SUCC
type Response11Code string

// May be one of APPR, DECL, PART, SUSP, TECH
type Response9Code string

type ResponseType10 struct {
	Rspn         Response9Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rspn"`
	RspnRsn      Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RspnRsn,omitempty"`
	AddtlRspnInf Max140Text    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlRspnInf,omitempty"`
}

type ResponseType11 struct {
	Rspn         Response11Code            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rspn"`
	RspnRsn      RetailerResultDetail1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RspnRsn,omitempty"`
	AddtlRspnInf Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlRspnInf,omitempty"`
}

// May be one of SSAB, SAAQ, SAAP, SDDR, SDDP, SSEN, SSMQ, SSMR, SSRJ, SARQ, SARP, SFRP, SFRQ, SFSQ, SFSP, SASQ, SASP
type RetailerMessage1Code string

type RetailerPaymentResult3 struct {
	TxTp              CardPaymentServiceType12Code  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxTp"`
	AddtlSvc          []CardPaymentServiceType9Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlSvc,omitempty"`
	SvcAttr           CardPaymentServiceType3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvcAttr,omitempty"`
	ReqdTx            CardPaymentTransaction110     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ReqdTx,omitempty"`
	TxRspn            CardPaymentTransaction109     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxRspn,omitempty"`
	CstmrOrdr         []CustomerOrder1              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrOrdr,omitempty"`
	ImgCaptrdSgntr    CapturedSignature1            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ImgCaptrdSgntr,omitempty"`
	PrtctdCaptrdSgntr ContentInformationType28      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtctdCaptrdSgntr,omitempty"`
	MrchntOvrrdFlg    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MrchntOvrrdFlg,omitempty"`
	CstmrLang         string                        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrLang,omitempty"`
	OnlnFlg           bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OnlnFlg,omitempty"`
}

// May be one of ABRT, BUSY, CANC, DEVO, WPIN, NHOS, UNVS, UNVD, REFU, PAYR, TNFD, NALW, LOUT, IVCA, ICAR, WIPG
type RetailerResultDetail1Code string

type RetailerReversalResult3 struct {
	POIRcncltnId Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POIRcncltnId,omitempty"`
	OrgnlPmtTx   CardPaymentTransaction110 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OrgnlPmtTx,omitempty"`
	CstmrOrdr    []CustomerOrder1          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrOrdr,omitempty"`
}

type RetailerSaleEnvironment2 struct {
	SaleCpblties []SaleCapabilities1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleCpblties,omitempty"`
	Ccy          ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	MinAmtToDlvr float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MinAmtToDlvr,omitempty"`
	MaxCshBckAmt float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MaxCshBckAmt,omitempty"`
	MinSpltAmt   float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MinSpltAmt,omitempty"`
	DbtPrefrdFlg bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DbtPrefrdFlg,omitempty"`
	LltyHdlg     LoyaltyHandling1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyHdlg,omitempty"`
}

// May be one of FSPP, FSRP, FSIP, FSBP, FSLP, FSVP, FSEP, FSAP, FSCP
type RetailerService3Code string

type ReversalResponse5 struct {
	SaleTxId     TransactionIdentifier1  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleTxId"`
	SaleRefId    Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleRefId,omitempty"`
	POITxId      TransactionIdentifier1  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POITxId"`
	POIRcncltnId Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POIRcncltnId,omitempty"`
	IssrRefData  Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IssrRefData,omitempty"`
	RvslTxRslt   RetailerReversalResult3 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RvslTxRslt"`
	RvsdAmt      float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RvsdAmt,omitempty"`
	Rct          []PaymentReceipt3       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rct,omitempty"`
}

// May be one of CHDI, CHER, CHIN, CHST, CUDI, CUAS, CUER, CUIN, POIR, PRDC, PRRP, PRVC
type SaleCapabilities1Code string

type SaleContext4 struct {
	SaleId           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleId,omitempty"`
	SaleRefNb        Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleRefNb,omitempty"`
	SaleRcncltnId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleRcncltnId,omitempty"`
	CshrId           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CshrId,omitempty"`
	CshrLang         []string               `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CshrLang,omitempty"`
	ShftNb           Max2NumericText        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ShftNb,omitempty"`
	CstmrOrdrReqFlg  bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CstmrOrdrReqFlg,omitempty"`
	PurchsOrdrNb     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PurchsOrdrNb,omitempty"`
	InvcNb           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 InvcNb,omitempty"`
	DlvryNoteNb      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DlvryNoteNb,omitempty"`
	SpnsrdMrchnt     []Organisation26       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SpnsrdMrchnt,omitempty"`
	SpltPmt          bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SpltPmt,omitempty"`
	RmngAmt          float64                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RmngAmt,omitempty"`
	ForceOnlnFlg     bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ForceOnlnFlg,omitempty"`
	ReuseCardDataFlg bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ReuseCardDataFlg,omitempty"`
	AllwdNtryMd      []CardDataReading8Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AllwdNtryMd,omitempty"`
	SaleTknScp       SaleTokenScope1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleTknScp,omitempty"`
	AddtlSaleData    Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlSaleData,omitempty"`
}

type SaleItemRebate1 struct {
	SaleItm Product6  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SaleItm"`
	RbtLabl Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RbtLabl,omitempty"`
}

type SaleToPOIServiceResponseV03 struct {
	Hdr      Header41                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Hdr"`
	SvcRspn  ServiceResponse5         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvcRspn"`
	SctyTrlr ContentInformationType25 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SctyTrlr,omitempty"`
}

// May be one of MULT, SNGL
type SaleTokenScope1Code string

type SensitiveMobileData1 struct {
	MSISDN Max35NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MSISDN"`
	IMSI   Max35NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IMSI,omitempty"`
	IMEI   Max35NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IMEI,omitempty"`
}

type ServiceResponse5 struct {
	Envt           CardPaymentEnvironment77 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Envt"`
	Cntxt          CardPaymentContext28     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Cntxt"`
	SvcCntt        RetailerService3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SvcCntt"`
	PmtRspn        PaymentResponse3         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtRspn,omitempty"`
	RvslRspn       ReversalResponse5        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RvslRspn,omitempty"`
	BalNqryRspn    BalanceInquiryResponse3  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BalNqryRspn,omitempty"`
	LltyRspn       LoyaltyResponse2         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 LltyRspn,omitempty"`
	StordValRspn   StoredValueResponse4     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 StordValRspn,omitempty"`
	BtchRspn       BatchResponse3           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 BtchRspn,omitempty"`
	CardAcqstnRspn CardAcquisitionResponse2 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 CardAcqstnRspn,omitempty"`
	Rspn           ResponseType11           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rspn"`
	SplmtryData    []SupplementaryData1     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SplmtryData,omitempty"`
}

type SignedData6 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstAlgo,omitempty"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NcpsltdCntt,omitempty"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Cert,omitempty"`
	Sgnr        []Signer5                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Sgnr,omitempty"`
}

type Signer5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Vrsn,omitempty"`
	SgnrId      Recipient9Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SgnrId,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DgstAlgo"`
	SgndAttrbts []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SgndAttrbts,omitempty"`
	SgntrAlgo   AlgorithmIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 SgntrAlgo"`
	Sgntr       Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Sgntr"`
}

type SimpleIdentificationInformation4 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id"`
}

type StoredValueAccount2 struct {
	AcctTp StoredValueAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AcctTp,omitempty"`
	IdTp   CardIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 IdTp,omitempty"`
	Id     Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Id,omitempty"`
	Brnd   Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Brnd,omitempty"`
	Prvdr  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Prvdr,omitempty"`
	OwnrNm Max45Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OwnrNm,omitempty"`
	XpryDt Max10Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 XpryDt,omitempty"`
	NtryMd CardDataReading8Code        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NtryMd,omitempty"`
	Ccy    ActiveCurrencyCode          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	Bal    float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Bal,omitempty"`
}

// May be one of BNKA, CWVC, CPYA, ELMY, GIFT, GCER, MLVC, OLVC, MERC, OTHR, PHON, CARD, TRVL
type StoredValueAccountType1Code string

type StoredValueData4 struct {
	Prvdr      Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Prvdr,omitempty"`
	TxTp       StoredValueTransactionType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxTp"`
	AcctId     StoredValueAccount2             `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AcctId,omitempty"`
	OrgnlPOITx CardPaymentTransaction110       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 OrgnlPOITx,omitempty"`
	PdctCd     Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PdctCd,omitempty"`
	EANUPC     Max35NumericText                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 EANUPC,omitempty"`
	ItmAmt     float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 ItmAmt,omitempty"`
	Ccy        ActiveCurrencyCode              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Ccy,omitempty"`
	HstTxId    TransactionIdentifier1          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 HstTxId,omitempty"`
}

type StoredValueResponse4 struct {
	POITxId TransactionIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 POITxId"`
	Rslt    []StoredValueData4     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rslt,omitempty"`
	Rct     []PaymentReceipt3      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rct,omitempty"`
}

// May be one of ACTV, DUPL, LOAD, RESV, REVS, ULOA, CLOS, DCTV, OPEN
type StoredValueTransactionType2Code string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// May be one of PART, MSRV
type SupportedPaymentOption1Code string

// May be one of CRIT, ASAP, DTIM
type TMSContactLevel1Code string

type TMSTrigger1 struct {
	TMSCtctLvl  TMSContactLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TMSCtctLvl"`
	TMSId       Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TMSId,omitempty"`
	TMSCtctDtTm ISODateTime          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TMSCtctDtTm,omitempty"`
}

type Token1 struct {
	PmtTkn        Max19NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PmtTkn,omitempty"`
	TknXpryDt     Exact4NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknXpryDt,omitempty"`
	TknRqstrId    Max11NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknRqstrId,omitempty"`
	TknAssrncData Max140Text        `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncData,omitempty"`
	TknAssrncMtd  Max2NumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknAssrncMtd,omitempty"`
	TknInittdInd  bool              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TknInittdInd,omitempty"`
}

type Traceability8 struct {
	RlayId      GenericIdentification177 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RlayId"`
	PrtcolNm    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtcolNm,omitempty"`
	PrtcolVrsn  Max6Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 PrtcolVrsn,omitempty"`
	TracDtTmIn  ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TracDtTmIn"`
	TracDtTmOut ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TracDtTmOut"`
}

type TrackData2 struct {
	TrckNb   float64          `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TrckNb,omitempty"`
	TrckFrmt TrackFormat1Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TrckFrmt,omitempty"`
	TrckVal  Max140Text       `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TrckVal"`
}

// May be one of AAMV, CMC7, E13B, ISOF, JIS1, JIS2
type TrackFormat1Code string

// May be one of MAIL, TLPH, ECOM, TVPY, SECM, MOBL, MPOS
type TransactionChannel5Code string

// May be one of MERC, PRIV, PUBL
type TransactionEnvironment1Code string

type TransactionIdentifier1 struct {
	TxDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxDtTm"`
	TxRef  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TxRef"`
}

type TransactionVerificationResult4 struct {
	Mtd        AuthenticationMethod6Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Mtd"`
	VrfctnNtty AuthenticationEntity2Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 VrfctnNtty,omitempty"`
	Rslt       Verification1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Rslt,omitempty"`
	AddtlRslt  Max500Text                `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlRslt,omitempty"`
}

// May be one of ACTL, ESTM, MAXI, DFLT, RPLT, INCR, DECR, RESD
type TypeOfAmount8Code string

// Must match the pattern [0-9]{8,17}
type UPICIdentifier string

// May be one of PIEC, TONS, FOOT, GBGA, USGA, GRAM, INCH, KILO, PUND, METR, CMET, MMET, LITR, CELI, MILI, GBOU, USOU, GBQA, USQA, GBPI, USPI, MILE, KMET, YARD, SQKI, HECT, ARES, SMET, SCMT, SMIL, SQMI, SQYA, SQFO, SQIN, ACRE, KWHO, DGEU, GGEU
type UnitOfMeasure6Code string

// May be one of CDSP, CRCP, MDSP, MRCP, CRDO
type UserInterface4Code string

type Vehicle1 struct {
	VhclNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 VhclNb,omitempty"`
	TrlrNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TrlrNb,omitempty"`
	VhclTag        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 VhclTag,omitempty"`
	VhclTagNtryMd  CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 VhclTagNtryMd,omitempty"`
	UnitNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 UnitNb,omitempty"`
	RplcmntCar     bool                 `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RplcmntCar,omitempty"`
	Odmtr          float64              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Odmtr,omitempty"`
	Hbmtr          float64              `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Hbmtr,omitempty"`
	TrlrHrs        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 TrlrHrs,omitempty"`
	RefrHrs        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 RefrHrs,omitempty"`
	MntncId        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 MntncId,omitempty"`
	DrvrOrVhclCard PlainCardData17      `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 DrvrOrVhclCard,omitempty"`
	AddtlVhclData  []Vehicle2           `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 AddtlVhclData,omitempty"`
}

type Vehicle2 struct {
	Tp     Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Tp,omitempty"`
	NtryMd CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 NtryMd,omitempty"`
	Data   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:casp.002.001.03 Data"`
}

// May be one of FAIL, MISS, NOVF, PART, SUCC, ERRR
type Verification1Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
