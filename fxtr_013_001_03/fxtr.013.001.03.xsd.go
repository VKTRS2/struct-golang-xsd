// Code generated by download. DO NOT EDIT.

package iso20022_fxtr_013_001_03

type Document struct {
	FXTradWdrwlNtfctn ForeignExchangeTradeWithdrawalNotificationV03 `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 FXTradWdrwlNtfctn"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

type ForeignExchangeTradeWithdrawalNotificationV03 struct {
	MsgId          Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 MsgId"`
	MtchgSysUnqRef Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 MtchgSysUnqRef"`
	WdrwlRsn       WithdrawalReason1      `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 WdrwlRsn,omitempty"`
	SttlmSsnIdr    Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 SttlmSsnIdr,omitempty"`
	SplmtryData    []SupplementaryData1   `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 SplmtryData,omitempty"`
}

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

// May be no more than 4 items long
type Max4Text string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type WithdrawalReason1 struct {
	WdrwlRsnCd    WithdrawalReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 WdrwlRsnCd"`
	WdrwlRsnSubCd Max4Text              `xml:"urn:iso:std:iso:20022:tech:xsd:fxtr.013.001.03 WdrwlRsnSubCd,omitempty"`
}

// May be one of RJCT, RSCD, WTDN
type WithdrawalReason1Code string
