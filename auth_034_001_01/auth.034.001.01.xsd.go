// Code generated by download. DO NOT EDIT.

package iso20022_auth_034_001_01

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type AdditionalInformation1 struct {
	InfTp  InformationType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 InfTp"`
	InfVal Max350Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 InfVal"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BinaryFile1 struct {
	MIMETp         Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 MIMETp,omitempty"`
	NcodgTp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 NcodgTp,omitempty"`
	CharSet        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CharSet,omitempty"`
	InclBinryObjct Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 InclBinryObjct,omitempty"`
}

type ContactDetails2 struct {
	NmPrfx   NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 NmPrfx,omitempty"`
	Nm       Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Nm,omitempty"`
	PhneNb   PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PhneNb,omitempty"`
	MobNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 MobNb,omitempty"`
	FaxNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 FaxNb,omitempty"`
	EmailAdr Max2048Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 EmailAdr,omitempty"`
	Othr     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Othr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type CreditorReferenceInformation2 struct {
	Tp  CreditorReferenceType2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Tp,omitempty"`
	Ref Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Ref,omitempty"`
}

type CreditorReferenceType1Choice struct {
	Cd    DocumentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Cd,omitempty"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Prtry,omitempty"`
}

type CreditorReferenceType2 struct {
	CdOrPrtry CreditorReferenceType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CdOrPrtry"`
	Issr      Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Issr,omitempty"`
}

type CurrencyAndAmount struct {
	Value float64      `xml:",chardata"`
	Ccy   CurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type CurrencyCode string

type CurrencyReference3 struct {
	TrgtCcy     ActiveCurrencyCode         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TrgtCcy"`
	SrcCcy      ActiveCurrencyCode         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SrcCcy"`
	XchgRateInf []ExchangeRateInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 XchgRateInf,omitempty"`
}

type DateAndPlaceOfBirth struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtryOfBirth"`
}

type Document struct {
	InvcTaxRpt InvoiceTaxReportV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 InvcTaxRpt"`
}

type DocumentGeneralInformation2 struct {
	DocTp           ExternalDocumentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DocTp"`
	DocNb           Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DocNb"`
	SndrRcvrSeqId   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SndrRcvrSeqId,omitempty"`
	IsseDt          ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 IsseDt,omitempty"`
	URL             Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 URL,omitempty"`
	AttchdBinryFile []BinaryFile1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 AttchdBinryFile,omitempty"`
}

// May be one of RADM, RPIN, FXDR, DISP, PUOR, SCOR
type DocumentType3Code string

type EarlyPayment1 struct {
	EarlyPmtDt            ISODate             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 EarlyPmtDt"`
	DscntPct              float64             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DscntPct"`
	DscntAmt              CurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DscntAmt"`
	EarlyPmtTaxSpcfctn    []EarlyPaymentsVAT1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 EarlyPmtTaxSpcfctn,omitempty"`
	EarlyPmtTaxTtl        CurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 EarlyPmtTaxTtl,omitempty"`
	DuePyblAmtWthEarlyPmt CurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DuePyblAmtWthEarlyPmt,omitempty"`
}

type EarlyPaymentsVAT1 struct {
	TaxRate     float64           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxRate"`
	DscntTaxTp  Max4Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DscntTaxTp"`
	DscntTaxAmt CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DscntTaxAmt"`
}

type ExchangeRateInformation1 struct {
	XchgRate float64               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 XchgRate,omitempty"`
	RateTp   ExchangeRateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 RateTp,omitempty"`
	CtrctId  Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtrctId,omitempty"`
}

// May be one of SPOT, SALE, AGRD
type ExchangeRateType1Code string

// May be no more than 4 items long
type ExternalDocumentType1Code string

// May be no more than 4 items long
type ExternalOrganisationIdentification1Code string

// May be no more than 4 items long
type ExternalPersonIdentification1Code string

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Issr,omitempty"`
}

type GroupHeader69 struct {
	Id            Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Id"`
	IssdDt        ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 IssdDt"`
	RptCtgy       ExternalDocumentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 RptCtgy"`
	TaxRptPurp    ExternalDocumentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxRptPurp"`
	OrgnlId       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 OrgnlId,omitempty"`
	SellrTaxRprtv PartyIdentification116    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SellrTaxRprtv,omitempty"`
	BuyrTaxRprtv  PartyIdentification116    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 BuyrTaxRprtv,omitempty"`
	LangCd        string                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 LangCd,omitempty"`
}

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type InformationType1Choice struct {
	Cd    InformationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Cd,omitempty"`
	Prtry Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Prtry,omitempty"`
}

// May be one of INST, RELY
type InformationType1Code string

type InvoiceTaxReportV01 struct {
	InvcTaxRptHdr TaxReportHeader1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 InvcTaxRptHdr"`
	TaxRpt        []TaxReport1         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxRpt"`
	SplmtryData   []SupplementaryData1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SplmtryData,omitempty"`
}

type LegalOrganisation1 struct {
	Id Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Id,omitempty"`
	Nm Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Nm,omitempty"`
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 140 items long
type Max140Text string

// May be no more than 16 items long
type Max16Text string

// May be no more than 2048 items long
type Max2048Text string

// May be no more than 256 items long
type Max256Text string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

// May be no more than 4 items long
type Max4Text string

// May be no more than 500 items long
type Max500Text string

// May be no more than 70 items long
type Max70Text string

type MessageIdentification1 struct {
	Id      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Id"`
	CreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CreDtTm"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type OrganisationIdentification28 struct {
	Nm        Max140Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Nm,omitempty"`
	PstlAdr   PostalAddress6              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PstlAdr,omitempty"`
	Id        OrganisationIdentification8 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Id,omitempty"`
	CtryOfRes CountryCode                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtryOfRes,omitempty"`
	CtctDtls  ContactDetails2             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtctDtls"`
}

type OrganisationIdentification8 struct {
	AnyBIC AnyBICIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 AnyBIC,omitempty"`
	Othr   []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Cd,omitempty"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Prtry,omitempty"`
}

type Party11Choice struct {
	OrgId  OrganisationIdentification8 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 OrgId,omitempty"`
	PrvtId PersonIdentification5       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PrvtId,omitempty"`
}

type PartyIdentification116 struct {
	PtyId  OrganisationIdentification28 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PtyId"`
	LglOrg LegalOrganisation1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 LglOrg,omitempty"`
	TaxPty TaxParty1                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxPty,omitempty"`
}

type PartyIdentification43 struct {
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Nm,omitempty"`
	PstlAdr   PostalAddress6  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PstlAdr,omitempty"`
	Id        Party11Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Id,omitempty"`
	CtryOfRes CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtryOfRes,omitempty"`
	CtctDtls  ContactDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtctDtls,omitempty"`
}

type PartyIdentification72 struct {
	PtyId  PartyIdentification43 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PtyId"`
	LglOrg LegalOrganisation1    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 LglOrg,omitempty"`
	TaxPty TaxParty1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxPty,omitempty"`
}

type Period2 struct {
	FrDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 FrDt"`
	ToDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 ToDt"`
}

type PersonIdentification5 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Cd,omitempty"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Prtry,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PostalAddress6 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 AdrLine,omitempty"`
}

type SettlementSubTotalCalculatedTax2 struct {
	TpCd        Max4Text            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TpCd,omitempty"`
	ClctdRate   float64             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 ClctdRate,omitempty"`
	BsisAmt     []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 BsisAmt,omitempty"`
	ClctdAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 ClctdAmt,omitempty"`
	XmptnRsnCd  Max4Text            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 XmptnRsnCd,omitempty"`
	XmptnRsnTxt Max500Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 XmptnRsnTxt,omitempty"`
	TaxCcyXchg  CurrencyReference3  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxCcyXchg,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxOrganisationIdentification1 struct {
	Nm       Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Nm"`
	PstlAdr  PostalAddress6  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PstlAdr,omitempty"`
	CtctDtls ContactDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 CtctDtls,omitempty"`
}

type TaxParty1 struct {
	TaxId  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxId,omitempty"`
	RegnId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 RegnId,omitempty"`
	TaxTp  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxTp,omitempty"`
}

type TaxReport1 struct {
	TaxRptHdr   GroupHeader69                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxRptHdr"`
	Sellr       PartyIdentification72         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Sellr"`
	Buyr        PartyIdentification72         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 Buyr,omitempty"`
	TradSttlm   TradeSettlement2              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TradSttlm"`
	OthrPty     []PartyIdentification72       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 OthrPty,omitempty"`
	AddtlInf    []AdditionalInformation1      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 AddtlInf,omitempty"`
	AddtlRef    []DocumentGeneralInformation2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 AddtlRef,omitempty"`
	SplmtryData []SupplementaryData1          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SplmtryData,omitempty"`
}

type TaxReportHeader1 struct {
	MsgId       MessageIdentification1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 MsgId"`
	NbOfTaxRpts float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 NbOfTaxRpts,omitempty"`
	TaxAuthrty  []TaxOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxAuthrty,omitempty"`
}

type TradeSettlement2 struct {
	PmtRef         CreditorReferenceInformation2      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 PmtRef,omitempty"`
	DueDt          ISODate                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DueDt,omitempty"`
	DuePyblAmt     CurrencyAndAmount                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DuePyblAmt"`
	InvcCcyXchg    CurrencyReference3                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 InvcCcyXchg,omitempty"`
	DlvryDt        ISODate                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 DlvryDt,omitempty"`
	BllgPrd        Period2                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 BllgPrd,omitempty"`
	TaxTtlAmt      CurrencyAndAmount                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 TaxTtlAmt"`
	XmptnRsnCd     Max4Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 XmptnRsnCd,omitempty"`
	XmptnRsn       Max500Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 XmptnRsn,omitempty"`
	SubTtlClctdTax []SettlementSubTotalCalculatedTax2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 SubTtlClctdTax,omitempty"`
	EarlyPmts      []EarlyPayment1                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.034.001.01 EarlyPmts,omitempty"`
}

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
