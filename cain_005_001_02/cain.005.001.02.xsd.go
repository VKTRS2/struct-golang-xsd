// Code generated by download. DO NOT EDIT.

package iso20022_cain_005_001_02

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AccountDetails2 struct {
	AcctNm Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcctNm,omitempty"`
	AcctTp Exact2AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcctTp,omitempty"`
	AcctId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcctId,omitempty"`
}

type Action9 struct {
	Dstn       PartyType20Code  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Dstn,omitempty"`
	ActnTp     ActionType11Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ActnTp,omitempty"`
	OthrActnTp Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrActnTp,omitempty"`
	ActnInf    Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ActnInf,omitempty"`
}

// May be one of FILE, MOBL, OTHN, OTHP, PECR, POFS
type ActionDestination1Code string

// May be one of ACTV, DEAC, DISP, FUPD, PRNT, SNDM
type ActionType10Code string

// May be one of CNTI, CNIS, CNTA, CNAS, CPTR, CHDV, VIPM, TRCK, TRXR, OTHN, OTHP, SIGN
type ActionType11Code string

type AdditionalAction1 struct {
	Tp         ActionType10Code       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Dstn       PartyType21Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Dstn,omitempty"`
	OthrDstn   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrDstn,omitempty"`
	DstnTp     ActionDestination1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DstnTp,omitempty"`
	OthrDstnTp Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrDstnTp,omitempty"`
	DstnAdr    Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DstnAdr,omitempty"`
	Frmt       OutputFormat4Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Frmt,omitempty"`
	OthrFrmt   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrFrmt,omitempty"`
	Cntt       Content1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Cntt,omitempty"`
}

type AdditionalAmounts1 struct {
	Tp     TypeOfAmount12Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp"`
	OthrTp Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTp,omitempty"`
	Amt    Amount14           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	Labl   Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Labl,omitempty"`
}

type AdditionalData1 struct {
	Tp  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Val Max2048Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Val,omitempty"`
}

type AdditionalFee1 struct {
	Tp         TypeOfAmount10Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp"`
	OthrTp     Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTp,omitempty"`
	FeePrgm    Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 FeePrgm,omitempty"`
	FeeDscrptr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 FeeDscrptr,omitempty"`
	Amt        FeeAmount2         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	Labl       Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Labl,omitempty"`
}

type AdditionalInformation20 struct {
	Rcpt     PartyType22Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Rcpt,omitempty"`
	OthrRcpt Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrRcpt,omitempty"`
	Trgt     []UserInterface6Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Trgt,omitempty"`
	OthrTrgt Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTrgt,omitempty"`
	Frmt     OutputFormat4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Frmt,omitempty"`
	OthrFrmt Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrFrmt,omitempty"`
	Tp       Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Val      Max20KText           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Val"`
}

type AdditionalService1 struct {
	Tp     AdditionalServiceType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp"`
	OthrTp Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTp,omitempty"`
}

// May be one of CACT, CSHB, DCCV, INTP, INTT, LOYT, OTHN, OTHP, PRST
type AdditionalServiceType1Code string

type Address1 struct {
	AdrLine1       Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AdrLine1,omitempty"`
	AdrLine2       Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AdrLine2,omitempty"`
	StrtNm         Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 StrtNm,omitempty"`
	BldgNb         Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 BldgNb,omitempty"`
	PstlCd         Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PstlCd,omitempty"`
	TwnNm          Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TwnNm,omitempty"`
	CtrySubDvsnMnr Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CtrySubDvsnMnr,omitempty"`
	CtrySubDvsnMjr Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CtrySubDvsnMjr,omitempty"`
	Ctry           Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctry,omitempty"`
}

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C
type Algorithm13Code string

// May be one of HS25, HS38, HS51
type Algorithm20Code string

// May be one of EA2C, E3DC, EA9C, EA5C, EA2R, EA9R, EA5R, E3DR, E36C, E36R, SD5C
type Algorithm23Code string

// May be one of HS25, HS38, HS51
type Algorithm5Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification25 struct {
	Algo  Algorithm23Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Param,omitempty"`
}

type AlgorithmIdentification26 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Algo"`
	Param Algorithm5Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Param,omitempty"`
}

type AlgorithmIdentification27 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Algo"`
	Param Parameter13    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Param,omitempty"`
}

type AlgorithmIdentification28 struct {
	Algo  Algorithm13Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Algo"`
	Param Parameter14     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Param,omitempty"`
}

type Amount14 struct {
	Amt float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	Ccy ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ccy,omitempty"`
	Sgn bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Sgn,omitempty"`
}

type Amount4 struct {
	Amt      float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	Ccy      ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ccy,omitempty"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 XchgRate,omitempty"`
	QtnDt    ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 QtnDt,omitempty"`
}

type Amount5 struct {
	Amt float64 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	Sgn bool    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Sgn,omitempty"`
}

type ApprovalData1 struct {
	ApprvlNtty ApprovalEntity1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ApprvlNtty,omitempty"`
	ApprvlCd   Exact6AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ApprvlCd,omitempty"`
}

type ApprovalEntity1 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id,omitempty"`
	Tp     PartyType26Code   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp"`
	OthrTp Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTp,omitempty"`
	Assgnr PartyType9Code    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Assgnr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ShrtNm,omitempty"`
}

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type BatchManagementInformation1 struct {
	ColltnId         Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ColltnId,omitempty"`
	BtchId           Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 BtchId"`
	MsgSeqNb         Max15NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MsgSeqNb,omitempty"`
	MsgChcksmInptVal Max140Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MsgChcksmInptVal,omitempty"`
}

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

type CardData5 struct {
	PAN           Max19NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PAN,omitempty"`
	PrtctdPANInd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PrtctdPANInd,omitempty"`
	CardSeqNb     Min2Max3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardSeqNb,omitempty"`
	PmtAcctRef    Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PmtAcctRef,omitempty"`
	PANAcctRg     Max19NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PANAcctRg,omitempty"`
	CardPrtflIdr  Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardPrtflIdr,omitempty"`
	AddtlCardData Max70Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlCardData,omitempty"`
}

// May be one of CDFL, ICPY, MGST, ICCY, MICR, MLEY, OCRR, MSIP, OPTC, OTHN, RFID, UNSP, OTHP, KEEN
type CardDataReading7Code string

// May be one of OTHP, OTHN, ENVL, CHEC, CASH
type CardDepositType1Code string

type CardProgramme1 struct {
	CardPrgrmmPropsd []CardProgrammeMode2 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardPrgrmmPropsd,omitempty"`
	CardPrgrmmApld   CardProgrammeMode1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardPrgrmmApld,omitempty"`
}

type CardProgrammeMode1 struct {
	Tp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
}

type CardProgrammeMode2 struct {
	Tp Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Id []Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
}

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RltvDstngshdNm"`
}

type ClaimInformation1 struct {
	ClmCrdntls Max500Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ClmCrdntls,omitempty"`
	Assgnr     Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Assgnr,omitempty"`
}

type Content1 struct {
	Val    Max20KText   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Val"`
	Sgntr  Max140Binary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Sgntr,omitempty"`
	CertId Max70Text    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CertId,omitempty"`
}

type ContentInformationType20 struct {
	MACData MACData1          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MACData"`
	MAC     Max8HexBinaryText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MAC"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

// May be one of EVLP, IFSE
type ContentType3Code string

type Context7 struct {
	PtOfSvcCntxt PointOfServiceContext2 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PtOfSvcCntxt,omitempty"`
	TxCntxt      TransactionContext4    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxCntxt,omitempty"`
}

type Credentials1 struct {
	IdCd     Identification2Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 IdCd"`
	OthrIdCd Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrIdCd,omitempty"`
	IdVal    Max70Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 IdVal"`
}

type Customer3 struct {
	CstmrId   Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CstmrId,omitempty"`
	Nm        Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Nm,omitempty"`
	Adr       Address1       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Adr,omitempty"`
	Crdntls   []Credentials1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Crdntls,omitempty"`
	AddtlInf  Max256Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlInf,omitempty"`
	DtOfBirth ISODate        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DtOfBirth,omitempty"`
}

type DepositDetails1 struct {
	Tp     CardDepositType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp"`
	OthrTp Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTp,omitempty"`
	Amt    Amount5              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt,omitempty"`
}

// May be one of CSHB, DONN, DCCF, EXTR, FORX, GRTY, OTHN, OTHP, SRCH, TAXT
type DetailAmount1Code string

type DetailedAmount19 struct {
	Tp             DetailAmount1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp"`
	OthrTp         Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTp,omitempty"`
	Amt            Amount5           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	CrdhldrBllgAmt Amount5           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CrdhldrBllgAmt,omitempty"`
	RcncltnAmt     Amount5           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RcncltnAmt,omitempty"`
	Labl           Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Labl,omitempty"`
}

type DisputeData1 struct {
	PresntmntCycl  Exact1NumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PresntmntCycl,omitempty"`
	DsptCond       Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DsptCond,omitempty"`
	DsptSts        Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DsptSts,omitempty"`
	PrtlDspt       bool                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PrtlDspt,omitempty"`
	DsptRef        []DisputeReference1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DsptRef,omitempty"`
	DcmnttnSts     Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DcmnttnSts,omitempty"`
	AddtlDsptData  Max1000Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlDsptData,omitempty"`
	DsptRjctRsn    []Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DsptRjctRsn,omitempty"`
	ChrgbckElgblty Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ChrgbckElgblty,omitempty"`
}

type DisputeIdentification1 struct {
	Tp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Id Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
}

type DisputeReference1 struct {
	AssgnrNtty     PartyType32Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AssgnrNtty,omitempty"`
	OthrAssgnrNtty Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrAssgnrNtty,omitempty"`
	DsptId         []DisputeIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DsptId"`
}

type Document struct {
	RvslInitn ReversalInitiationV02 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RvslInitn"`
}

type ECommerceData1 struct {
	Tp  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp"`
	Val Max2048Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Val"`
}

type EncryptedContent5 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification25 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CnttNcrptnAlgo"`
	NcrptdDataElmt []EncryptedDataElement1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdDataElmt"`
}

type EncryptedData1 struct {
	Ctrl           Exact1HexBinaryText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctrl,omitempty"`
	KeySetIdr      Max8NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeySetIdr,omitempty"`
	DrvdInf        Max32HexBinaryText      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DrvdInf,omitempty"`
	Algo           Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Algo,omitempty"`
	KeyLngth       Max4NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyLngth,omitempty"`
	KeyPrtcn       Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyPrtcn,omitempty"`
	KeyIndx        Max5NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyIndx,omitempty"`
	PddgMtd        Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PddgMtd,omitempty"`
	NcrptdDataFrmt Max2NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdDataFrmt,omitempty"`
	NcrptdDataElmt []EncryptedDataElement1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdDataElmt"`
}

type EncryptedData1Choice struct {
	BinryData   Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 BinryData,omitempty"`
	HexBinryVal string        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 HexBinryVal,omitempty"`
}

type EncryptedDataElement1 struct {
	Id                   ExternalEncryptedElementIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id,omitempty"`
	OthrId               Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrId,omitempty"`
	NcrptdData           EncryptedData1Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdData"`
	ClearTxtDataFrmt     EncryptedDataFormat1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ClearTxtDataFrmt,omitempty"`
	OthrClearTxtDataFrmt Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrClearTxtDataFrmt,omitempty"`
}

// May be one of ASCI, BINF, EBCD, HEXF, OTHN, OTHP
type EncryptedDataFormat1Code string

// May be one of TR34, TR31, CTCE, CBCE
type EncryptionFormat3Code string

type EnvelopedData6 struct {
	Vrsn       float64            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Vrsn,omitempty"`
	Rcpt       []Recipient7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Rcpt"`
	NcrptdCntt EncryptedContent5  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdCntt,omitempty"`
}

type Environment13 struct {
	Acqrr  PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Acqrr"`
	Sndr   PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Sndr,omitempty"`
	Rcvr   PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Rcvr,omitempty"`
	Accptr PartyIdentification203 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Accptr,omitempty"`
	Pyer   PartyIdentification211 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Pyer,omitempty"`
	Pyee   PartyIdentification211 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Pyee,omitempty"`
	Termnl Terminal2              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Termnl,omitempty"`
	Card   CardData5              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Card"`
	Wllt   Wallet1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Wllt,omitempty"`
	Tkn    Token1                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tkn,omitempty"`
}

// Must match the pattern ([0-9A-F][0-9A-F]){1}
type Exact1HexBinaryText string

// Must match the pattern [0-9]
type Exact1NumericText string

// Must match the pattern [a-zA-Z0-9]{2}
type Exact2AlphaNumericText string

// Must match the pattern [0-9]{2}
type Exact2NumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

// Must match the pattern [a-zA-Z0-9\s]{6}
type Exact6AlphaNumericText string

// Must match the pattern ([0-9A-F][0-9A-F]){1,3}
type ExternalEncryptedElementIdentification1Code string

type FeeAmount2 struct {
	Amt      float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	Ccy      ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ccy,omitempty"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 XchgRate,omitempty"`
	QtnDt    ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 QtnDt,omitempty"`
	Sgn      bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Sgn,omitempty"`
}

type FinancialInstitution4 struct {
	Id           Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id,omitempty"`
	Nm           Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Nm,omitempty"`
	Adr          Address1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Adr,omitempty"`
	Email        Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Email,omitempty"`
	URLAdr       Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 URLAdr,omitempty"`
	PhneNb       Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PhneNb,omitempty"`
	CstmrSvc     Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlCtctInf,omitempty"`
}

type FundingService1 struct {
	FndgSvc TransferService1  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 FndgSvc,omitempty"`
	FndgSrc FundingSource2    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 FndgSrc,omitempty"`
	ClmInf  ClaimInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ClmInf,omitempty"`
}

type FundingSource2 struct {
	SrcTp     FundingSourceType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SrcTp,omitempty"`
	OthrSrcTp Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrSrcTp,omitempty"`
	Ref       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ref,omitempty"`
}

// May be one of LOYL, OTHN, OTHP, SVNG, UVRL, CASH, CRDT, CDBT, EPRS, DBAC, CURR, CHQE, PRPD, LCDT
type FundingSourceType2Code string

type GenericIdentification172 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
	Tp     PartyType17Code   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	OthrTp Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTp,omitempty"`
	Assgnr PartyType18Code   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Assgnr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ShrtNm,omitempty"`
}

type Header42 struct {
	MsgFctn        MessageFunction16Code       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MsgFctn"`
	PrtcolVrsn     Max2048Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PrtcolVrsn"`
	XchgId         Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 XchgId,omitempty"`
	ReTrnsmssnCntr Max3NumericText             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ReTrnsmssnCntr,omitempty"`
	CreDtTm        ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CreDtTm"`
	BtchMgmtInf    BatchManagementInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 BtchMgmtInf,omitempty"`
	InitgPty       GenericIdentification172    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 InitgPty"`
	RcptPty        GenericIdentification172    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RcptPty,omitempty"`
	TracData       []AdditionalData1           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TracData,omitempty"`
	Tracblt        []Traceability7             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tracblt,omitempty"`
}

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

// Must match the pattern [0-9]{3,3}
type ISO3NumericCurrencyCode string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

// May be one of DRID, NTID, PASS, SSYN, ARNB, OTHP, OTHN, EMAL, PHNB
type Identification2Code string

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SrlNb"`
}

type KEK6 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Vrsn,omitempty"`
	KEKId         KEKIdentifier6            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification28 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdKey,omitempty"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DerivtnId,omitempty"`
}

type KEKIdentifier6 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyVrsn,omitempty"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DerivtnId,omitempty"`
}

type KeyTransport6 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification27 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdKey"`
}

// May be one of AUTH, FINC
type LifeCycleSupport1Code string

type MACData1 struct {
	Ctrl         Exact1HexBinaryText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctrl"`
	KeySetIdr    Max8NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeySetIdr"`
	DrvdInf      Max32HexBinaryText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DrvdInf,omitempty"`
	Algo         Max2NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Algo"`
	KeyLngth     Max4NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyLngth,omitempty"`
	KeyPrtcn     Max2NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyPrtcn,omitempty"`
	KeyIndx      Max5NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyIndx,omitempty"`
	PddgMtd      Max2NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PddgMtd,omitempty"`
	InitlstnVctr Max32HexBinaryText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 InitlstnVctr,omitempty"`
}

// May be no more than 1000 items long
type Max1000Text string

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,11}
type Max11NumericText string

// Must match the pattern [0-9]{1,12}
type Max12NumericText string

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 140 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// May be no more than 16 items long
type Max16Text string

// Must match the pattern [0-9]{1,19}
type Max19NumericText string

// May be no more than 2048 items long
type Max2048Text string

// May be no more than 20000 items long
type Max20KText string

// Must match the pattern [0-9]{1,23}
type Max23NumericText string

// May be no more than 256 items long
type Max256Text string

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

// Must match the pattern ([0-9A-F][0-9A-F]){1,32}
type Max32HexBinaryText string

// May be no more than 350 items long
type Max350Text string

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,35}
type Max35NumericText string

// May be no more than 35 items long
type Max35Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

// Must match the pattern [0-9]{1,4}
type Max4NumericText string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 500 items long
type Max500Text string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must match the pattern [0-9]{1,6}
type Max6NumericText string

// May be no more than 70 items long
type Max70Text string

// Must match the pattern ([0-9A-F][0-9A-F]){1,8}
type Max8HexBinaryText string

// Must match the pattern [0-9]{1,8}
type Max8NumericText string

// May be no more than 99 items long
type Max99Text string

// May be one of ADDE, AMDT, AUTH, CMGT, CBCK, FEEC, FINL, INQY, VERI
type MessageClass1Code string

// May be one of ADVC, NOTI, CAAD, CANO, REQU
type MessageFunction16Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must match the pattern [0-9]{2,3}
type Min2Max3NumericText string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type OriginalDataElements1 struct {
	MsgClss             MessageClass1Code                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MsgClss,omitempty"`
	TxTp                Exact2AlphaNumericText              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxTp,omitempty"`
	AcqrrId             Max11NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcqrrId,omitempty"`
	SndrId              Max11NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SndrId,omitempty"`
	LclDtTm             ISODateTime                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LclDtTm,omitempty"`
	TmZone              Max70Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TmZone,omitempty"`
	TxRef               Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxRef,omitempty"`
	TrnsmssnDtTm        ISODateTime                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TrnsmssnDtTm,omitempty"`
	SysTracAudtNb       Max12NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SysTracAudtNb,omitempty"`
	RtrvlRefNb          string                              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RtrvlRefNb"`
	LifeCyclSpprt       LifeCycleSupport1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LifeCyclSpprt,omitempty"`
	LifeCyclTracIdData  TransactionLifeCycleIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LifeCyclTracIdData,omitempty"`
	LifeCyclTracIdMssng Max70Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LifeCyclTracIdMssng,omitempty"`
	AcqrrRefData        Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcqrrRefData,omitempty"`
	AcqrrRefNb          Max23NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcqrrRefNb,omitempty"`
	CardIssrRefData     Max1000Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardIssrRefData,omitempty"`
}

type OriginalTransactionAmount1 struct {
	AmtQlfr        TypeOfAmount11Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AmtQlfr,omitempty"`
	TxAmt          TransactionAmount1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxAmt"`
	CrdhldrBllgAmt Amount4            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CrdhldrBllgAmt,omitempty"`
	RcncltnAmt     Amount4            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RcncltnAmt,omitempty"`
}

// May be one of FLNM, MREF, OTHN, OTHP, SMSI, TEXT, URLI, HTML
type OutputFormat4Code string

type Parameter13 struct {
	DgstAlgo     Algorithm20Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification26 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MskGnrtrAlgo,omitempty"`
}

type Parameter14 struct {
	NcrptnFrmt   EncryptionFormat3Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 BPddg,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 BPddg,omitempty"`
}

type PartyIdentification197 struct {
	Id      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
	Assgnr  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Assgnr,omitempty"`
	Ctry    ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctry,omitempty"`
	ShrtNm  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ShrtNm,omitempty"`
	AddtlId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlId,omitempty"`
}

type PartyIdentification203 struct {
	Id           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
	Assgnr       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Assgnr,omitempty"`
	Ctry         ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctry,omitempty"`
	ShrtNm       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ShrtNm,omitempty"`
	AddtlId      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlId,omitempty"`
	NmAndLctn    Max99Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NmAndLctn"`
	Adr          Address1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Adr,omitempty"`
	Email        Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Email,omitempty"`
	URLAdr       Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 URLAdr,omitempty"`
	PhneNb       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PhneNb,omitempty"`
	CstmrSvc     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlCtctInf,omitempty"`
	TaxRegnId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TaxRegnId,omitempty"`
	AddtlData    []AdditionalData1      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlData,omitempty"`
	SpnsrdMrchnt []SponsoredMerchant1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SpnsrdMrchnt,omitempty"`
}

type PartyIdentification211 struct {
	FI    FinancialInstitution4 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 FI,omitempty"`
	Cstmr Customer3             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Cstmr,omitempty"`
}

// May be one of OTHN, OTHP, ACQR, ACQP, CISS, CISP, AGNT
type PartyType17Code string

// May be one of ACQR, CISS, CSCH, AGNT
type PartyType18Code string

// May be one of ACCP, ACQR, CRDH, CISS, AGNT
type PartyType20Code string

// May be one of ACCP, CRDH, OTHN, OTHP
type PartyType21Code string

// May be one of CRDH, MERC, OTHN, OTHP, AGNT
type PartyType22Code string

// May be one of ACCP, ACQR, ICCA, CISS, DLIS, AGNT, OTHN, OTHP
type PartyType26Code string

// May be one of ACQR, AGNT, ISUR, OTHN, OTHP
type PartyType32Code string

// May be one of ACQR, ACQP, CISS, CISP, CSCH, SCHP
type PartyType9Code string

type PointOfServiceContext2 struct {
	CardPres           bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardPres,omitempty"`
	CrdhldrPres        bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CrdhldrPres,omitempty"`
	CrdhldrActvtd      bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CrdhldrActvtd,omitempty"`
	TrnspndrInittd     bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TrnspndrInittd,omitempty"`
	AttnddInd          bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AttnddInd,omitempty"`
	UattnddLvlCtgy     Max35NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 UattnddLvlCtgy,omitempty"`
	EComrcInd          bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 EComrcInd,omitempty"`
	EComrcData         []ECommerceData1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 EComrcData,omitempty"`
	MOTOInd            bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MOTOInd,omitempty"`
	PrtlApprvlSpprtd   bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PrtlApprvlSpprtd,omitempty"`
	DelydAuthstnInd    bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DelydAuthstnInd,omitempty"`
	SctyChrtcs         []SecurityCharacteristics1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SctyChrtcs,omitempty"`
	OthrSctyChrtcs     Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrSctyChrtcs,omitempty"`
	CardDataNtryMd     CardDataReading7Code           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardDataNtryMd,omitempty"`
	OthrCardDataNtryMd Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrCardDataNtryMd,omitempty"`
	StorgLctn          Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 StorgLctn,omitempty"`
	SpclConds          []SpecialConditions1           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SpclConds,omitempty"`
}

// May be one of URGT, HIGH, NORM
type Priority3Code string

type ProcessingResult1 struct {
	ApprvlData    ApprovalData1             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ApprvlData,omitempty"`
	RsltData      ResultData1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RsltData,omitempty"`
	OrgnlRsltData ResultData1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OrgnlRsltData,omitempty"`
	ActnReqrd     bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ActnReqrd,omitempty"`
	Actn          []Action9                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Actn,omitempty"`
	AddtlActn     []AdditionalAction1       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlActn,omitempty"`
	AddtlInf      []AdditionalInformation20 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlInf,omitempty"`
}

type ProtectedData1 struct {
	CnttTp     ContentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CnttTp"`
	EnvlpdData EnvelopedData6   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 EnvlpdData,omitempty"`
	NcrptdData EncryptedData1   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 NcrptdData,omitempty"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 IssrAndSrlNb,omitempty"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyIdr,omitempty"`
}

type Recipient7Choice struct {
	KeyTrnsprt KeyTransport6  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyTrnsprt,omitempty"`
	KEK        KEK6           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KEK,omitempty"`
	KeyIdr     KEKIdentifier6 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 KeyIdr,omitempty"`
}

type Reconciliation3 struct {
	Id        Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id,omitempty"`
	Dt        ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Dt,omitempty"`
	ChckptRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ChckptRef,omitempty"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AttrVal"`
}

// May be one of PRCS, UNPR, UNRV, REJT, TECH, OTHN, OTHP
type Response8Code string

type ResultData1 struct {
	Rslt         Response8Code          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Rslt,omitempty"`
	OthrRslt     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrRslt,omitempty"`
	RsltDtls     Exact2AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RsltDtls"`
	OthrRsltDtls Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrRsltDtls,omitempty"`
	AddtlRsltInf []AdditionalData1      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlRsltInf,omitempty"`
}

type ReversalInitiation1 struct {
	Envt        Environment13        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Envt"`
	Cntxt       Context7             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Cntxt,omitempty"`
	Tx          Transaction77        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tx"`
	PrcgRslt    ProcessingResult1    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PrcgRslt,omitempty"`
	ICCRltdData string               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ICCRltdData,omitempty"`
	PrtctdData  []ProtectedData1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PrtctdData,omitempty"`
	SplmtryData []SupplementaryData1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SplmtryData,omitempty"`
}

type ReversalInitiationV02 struct {
	Hdr      Header42                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Hdr"`
	Body     ReversalInitiation1      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Body"`
	SctyTrlr ContentInformationType20 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SctyTrlr,omitempty"`
}

// May be one of CETE, CPTE, CENC, CMAC, ETEE, METE, MPTE, OPNN, PMAC, PKIE, PRAE, PRAM, PRVN, STAM, APTE, AETE, OTHN, OTHP
type SecurityCharacteristics1Code string

type SettlementReportingEntity1 struct {
	Tp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id,omitempty"`
}

type SettlementService1 struct {
	SttlmSvcPropsd SettlementServiceMode1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmSvcPropsd,omitempty"`
	SttlmSvcApld   SettlementServiceMode1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmSvcApld,omitempty"`
	SttlmSvcDts    SettlementServiceDate1     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmSvcDts,omitempty"`
	SttlmRptgNtty  SettlementReportingEntity1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmRptgNtty,omitempty"`
}

type SettlementServiceDate1 struct {
	ReqdSttlmDt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ReqdSttlmDt,omitempty"`
	SttlmDt       ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmDt,omitempty"`
	SttlmTm       ISOTime     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmTm,omitempty"`
	SttlmPrd      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmPrd,omitempty"`
	SttlmCutOffTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmCutOffTm,omitempty"`
}

type SettlementServiceMode1 struct {
	Tp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Tp,omitempty"`
	Id        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id,omitempty"`
	ShrtNm    Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ShrtNm,omitempty"`
	SttlmPrty Priority3Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmPrty,omitempty"`
}

type SpecialConditions1 struct {
	Id  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id,omitempty"`
	Val Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Val,omitempty"`
}

type SpecialProgrammeDetails1 struct {
	Nm  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Nm,omitempty"`
	Val Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Val,omitempty"`
}

type SpecialProgrammeQualification1 struct {
	Prgrmm Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Prgrmm,omitempty"`
	Dtl    []SpecialProgrammeDetails1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Dtl,omitempty"`
}

type SponsoredMerchant1 struct {
	Id      PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
	AddtlId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlId,omitempty"`
	CmonNm  Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CmonNm,omitempty"`
	Adr     Address1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Adr,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type Terminal2 struct {
	TermnlId TerminalIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TermnlId"`
}

type TerminalIdentification1 struct {
	Id     Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
	Assgnr Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Assgnr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 ShrtNm,omitempty"`
}

type Token1 struct {
	PmtTkn        Max19NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PmtTkn,omitempty"`
	TknXpryDt     Exact4NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TknXpryDt,omitempty"`
	TknRqstrId    Max11NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TknRqstrId,omitempty"`
	TknAssrncData Max140Text        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TknAssrncData,omitempty"`
	TknAssrncMtd  Max2NumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TknAssrncMtd,omitempty"`
	TknInittdInd  bool              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TknInittdInd,omitempty"`
}

type Traceability7 struct {
	RlayId      GenericIdentification172 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RlayId"`
	TracDtTmIn  ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TracDtTmIn,omitempty"`
	TracDtTmOut ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TracDtTmOut,omitempty"`
}

type Transaction77 struct {
	TxTp             Exact2AlphaNumericText           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxTp"`
	TxSubTp          Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxSubTp,omitempty"`
	AddtlSvc         []AdditionalService1             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlSvc,omitempty"`
	TxAttr           TransactionAttribute1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxAttr,omitempty"`
	OthrTxAttr       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OthrTxAttr,omitempty"`
	MsgRsn           []Exact4NumericText              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MsgRsn,omitempty"`
	AltrnMsgRsn      []Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AltrnMsgRsn,omitempty"`
	PreAuthstnTmLmt  Max6NumericText                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PreAuthstnTmLmt,omitempty"`
	AssoctdDataInd   bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AssoctdDataInd,omitempty"`
	AssoctdDataRef   Max70Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AssoctdDataRef,omitempty"`
	AssoctdDataDstn  Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AssoctdDataDstn,omitempty"`
	SpclPrgrmmQlfctn []SpecialProgrammeQualification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SpclPrgrmmQlfctn,omitempty"`
	TxId             TransactionIdentification8       `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxId"`
	DsptData         []DisputeData1                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DsptData,omitempty"`
	TxAmts           TransactionAmounts1              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxAmts"`
	AddtlAmts        []AdditionalAmounts1             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlAmts,omitempty"`
	AddtlFees        []AdditionalFee1                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlFees,omitempty"`
	OrgnlAddtlFees   []AdditionalFee1                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OrgnlAddtlFees,omitempty"`
	DpstDtls         []DepositDetails1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DpstDtls,omitempty"`
	FndsSvcs         FundingService1                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 FndsSvcs,omitempty"`
	AcctFr           AccountDetails2                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcctFr,omitempty"`
	AcctTo           AccountDetails2                  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcctTo,omitempty"`
	TxDesc           Max1000Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxDesc,omitempty"`
	AddtlData        []AdditionalData1                `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlData,omitempty"`
}

type TransactionAmount1 struct {
	Amt float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Amt"`
	Ccy ISO3NumericCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ccy"`
}

type TransactionAmounts1 struct {
	AmtQlfr        TypeOfAmount11Code         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AmtQlfr,omitempty"`
	TxAmt          TransactionAmount1         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxAmt,omitempty"`
	CrdhldrBllgAmt Amount4                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CrdhldrBllgAmt,omitempty"`
	RcncltnAmt     Amount4                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RcncltnAmt,omitempty"`
	DtldAmt        []DetailedAmount19         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DtldAmt,omitempty"`
	OrgnlTxAmts    OriginalTransactionAmount1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OrgnlTxAmts,omitempty"`
}

// May be one of AGGR, CADB, DBRP, DFRD, INST, OTHN, OTHP, RCPT, TPUP, PPYT, INCR, PAUT, PACP, SUBR, FRCP, CPLT
type TransactionAttribute1Code string

type TransactionContext4 struct {
	MrchntCtgyCd  Exact4NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 MrchntCtgyCd,omitempty"`
	DfrrdDlvryInd bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 DfrrdDlvryInd,omitempty"`
	TxInitr       TransactionInitiator1Code `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxInitr,omitempty"`
	CardPrgrmm    CardProgramme1            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardPrgrmm,omitempty"`
	SttlmSvc      SettlementService1        `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SttlmSvc,omitempty"`
	Rcncltn       Reconciliation3           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Rcncltn,omitempty"`
	CaptrDt       ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CaptrDt,omitempty"`
}

type TransactionIdentification8 struct {
	LclDtTm             ISODateTime                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LclDtTm"`
	TmZone              Max70Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TmZone,omitempty"`
	TxRef               Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TxRef,omitempty"`
	TrnsmssnDtTm        ISODateTime                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 TrnsmssnDtTm,omitempty"`
	SysTracAudtNb       Max12NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SysTracAudtNb"`
	RtrvlRefNb          string                              `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 RtrvlRefNb"`
	LifeCyclSpprt       LifeCycleSupport1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LifeCyclSpprt,omitempty"`
	LifeCyclTracIdData  TransactionLifeCycleIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LifeCyclTracIdData,omitempty"`
	LifeCyclTracIdMssng Max70Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 LifeCyclTracIdMssng,omitempty"`
	AcqrrRefData        Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcqrrRefData,omitempty"`
	AcqrrRefNb          Max23NumericText                    `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AcqrrRefNb,omitempty"`
	CardIssrRefData     Max1000Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 CardIssrRefData,omitempty"`
	OrgnlDataElmts      OriginalDataElements1               `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 OrgnlDataElmts,omitempty"`
}

// May be one of MERC, CUST
type TransactionInitiator1Code string

type TransactionLifeCycleIdentification1 struct {
	Id              string            `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Id"`
	AuthstnSeqNb    Exact2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AuthstnSeqNb,omitempty"`
	PresntmntSeqNb  Exact2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PresntmntSeqNb,omitempty"`
	PresntmntSeqCnt Exact2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 PresntmntSeqCnt,omitempty"`
	AuthntcnTkn     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AuthntcnTkn,omitempty"`
}

type TransferService1 struct {
	SvcPrvdr Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SvcPrvdr,omitempty"`
	SvcNm    Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 SvcNm,omitempty"`
	Ref      Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Ref,omitempty"`
	BizPurp  Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 BizPurp,omitempty"`
	Desc     Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Desc,omitempty"`
}

// May be one of INTC, FEEP, OTHN, OTHP, FEEA
type TypeOfAmount10Code string

// May be one of ACTL, DFLT, ESTM, MAXI, RESD, PRXY, DPST
type TypeOfAmount11Code string

// May be one of AMTH, DCNT, ISCF, CUAT, MAXI, AMTX, AMTN, AMTQ, OTHN, OTHP, RQCH, ANTA, PDCC
type TypeOfAmount12Code string

// May be one of CDSP, CRCP, MDSP, MRCP, CRDO, FILE, CHAP, MRAP, MRIN
type UserInterface6Code string

type Wallet1 struct {
	Prvdr         PartyIdentification197 `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 Prvdr,omitempty"`
	AddtlWlltData Max256Text             `xml:"urn:iso:std:iso:20022:tech:xsd:cain.005.001.02 AddtlWlltData,omitempty"`
}

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
