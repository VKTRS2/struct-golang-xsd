// Code generated by download. DO NOT EDIT.

package iso20022_auth_067_001_01

type ActiveCurrencyAnd24Amount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// May be one of FXCR, FXEM, FXMJ, FUEL, FOIL, GOIL, GSLN, GASP, HEAT, IRON, JTFL, KERO, LAMP, LEAD, LLSO, LNGG, CORN, MARS, MWHT, MOLY, NAPH, NBPG, NASC, NCGG, NGLO, NICK, OFFP, ALUM, ALUA, BAKK, BSLD, BDSL, BRNT, BRNX, CNDA, CERE, CBLT, CCOA, COND, CSHP, COPR, DSEL, DBCR, DUBA, ERUE, ESPO, ETHA, EUAE, EUAA, FWHT, FITR, OTHR, PLDM, PKLD, PTNM, POTA, RPSD, BRWN, RICE, ROBU, SLVR, SOYB, STEL, TNKR, TAPI, TINN, TTFG, URAL, WHSG, WTIO, ZINC
type AssetClassDetailedSubProductType16Code string

type AssetClassDetailedSubProductType1Choice struct {
	Cd    AssetClassDetailedSubProductType16Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Cd,omitempty"`
	Prtry GenericIdentification36                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Prtry,omitempty"`
}

type AssetHolding1 struct {
	PstHrcutVal ActiveCurrencyAnd24Amount  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 PstHrcutVal"`
	AsstTp      AssetHolding1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 AsstTp"`
	CollRqrmnt  CollateralAccountType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 CollRqrmnt"`
}

type AssetHolding1Choice struct {
	Gold   ActiveCurrencyAndAmount          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Gold,omitempty"`
	Trpty  ActiveCurrencyAndAmount          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Trpty,omitempty"`
	Csh    ActiveCurrencyAndAmount          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Csh,omitempty"`
	Scty   SecurityIdentificationAndAmount1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Scty,omitempty"`
	Grnt   Guarantee1                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Grnt,omitempty"`
	Cmmdty Commodity2                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Cmmdty,omitempty"`
}

type CCPCollateralReportV01 struct {
	CollAcctOwnr []CollateralAccount4 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 CollAcctOwnr"`
	SplmtryData  []SupplementaryData1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 SplmtryData,omitempty"`
}

type CollateralAccount4 struct {
	Id       GenericIdentification165 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Id"`
	AsstHldg []AssetHolding1          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 AsstHldg"`
}

// May be one of MGIN, DFLT
type CollateralAccountType3Code string

type Commodity2 struct {
	MktVal   ActiveCurrencyAnd24Amount               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 MktVal"`
	CmmdtyTp AssetClassDetailedSubProductType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 CmmdtyTp"`
}

type Document struct {
	CCPCollRpt CCPCollateralReportV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 CCPCollRpt"`
}

type GenericIdentification165 struct {
	Id      Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Id"`
	Desc    Max140Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Desc,omitempty"`
	Issr    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Issr,omitempty"`
	SchmeNm SchemeIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 SchmeNm,omitempty"`
}

type GenericIdentification168 struct {
	Id      Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Id"`
	Desc    Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Desc,omitempty"`
	Issr    Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Issr,omitempty"`
	SchmeNm Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 SchmeNm,omitempty"`
}

type Guarantee1 struct {
	Prvdr PartyIdentification118Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Prvdr"`
	Amt   ActiveCurrencyAndAmount      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Amt"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// May be no more than 140 items long
type Max140Text string

// May be no more than 256 items long
type Max256Text string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

type PartyIdentification118Choice struct {
	LEI   LEIIdentifier            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 LEI,omitempty"`
	Prtry GenericIdentification168 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Prtry,omitempty"`
}

// May be one of SVGN, EQUI, OTHR
type ProductType7Code string

// May be one of MARG, COLL, POSI, CLIM
type SchemeIdentificationType1Code string

type SecurityIdentificationAndAmount1 struct {
	Id          ISINOct2015Identifier     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Id"`
	MktVal      ActiveCurrencyAnd24Amount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 MktVal"`
	FinInstrmTp ProductType7Code          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 FinInstrmTp"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.067.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}
