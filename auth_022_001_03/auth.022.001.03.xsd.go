// Code generated by download. DO NOT EDIT.

package iso20022_auth_022_001_03

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IBAN,omitempty"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Othr,omitempty"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AddressType3Choice struct {
	Cd    AddressType2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type BICFIDec2014Identifier string

// May be one of WIBO, TREA, TIBO, TLBO, SWAP, STBO, PRBO, PFAN, NIBO, MAAA, MOSP, LIBO, LIBI, JIBA, ISDA, GCFR, FUSW, EUCH, EUUS, EURI, EONS, EONA, CIBO, CDOR, BUBO, BBSW
type BenchmarkCurveName2Code string

type BenchmarkCurveName4Choice struct {
	ISIN ISINOct2015Identifier   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ISIN,omitempty"`
	Indx BenchmarkCurveName2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Indx,omitempty"`
	Nm   Max25Text               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Nm,omitempty"`
}

type BinaryFile1 struct {
	MIMETp         Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MIMETp,omitempty"`
	NcodgTp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 NcodgTp,omitempty"`
	CharSet        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CharSet,omitempty"`
	InclBinryObjct Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 InclBinryObjct,omitempty"`
}

type BranchAndFinancialInstitutionIdentification6 struct {
	FinInstnId FinancialInstitutionIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 FinInstnId"`
	BrnchId    BranchData3                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 BrnchId,omitempty"`
}

type BranchData3 struct {
	Id      Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id,omitempty"`
	LEI     LEIIdentifier   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LEI,omitempty"`
	Nm      Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Nm,omitempty"`
	PstlAdr PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PstlAdr,omitempty"`
}

type CashAccount40 struct {
	Id   AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id,omitempty"`
	Tp   CashAccountType2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Tp,omitempty"`
	Ccy  ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ccy,omitempty"`
	Nm   Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Nm,omitempty"`
	Prxy ProxyAccountIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prxy,omitempty"`
}

type CashAccountType2Choice struct {
	Cd    ExternalCashAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type CashCollateral5 struct {
	CollId    Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CollId,omitempty"`
	CshAcctId AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CshAcctId,omitempty"`
	AsstNb    Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AsstNb,omitempty"`
	DpstAmt   ActiveCurrencyAndAmount      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DpstAmt,omitempty"`
	DpstTp    DepositType1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DpstTp,omitempty"`
	MtrtyDt   ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MtrtyDt,omitempty"`
	ValDt     ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ValDt,omitempty"`
	XchgRate  float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XchgRate,omitempty"`
	CollVal   ActiveCurrencyAndAmount      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CollVal"`
	Hrcut     float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Hrcut,omitempty"`
}

type CertificateIdentification1 struct {
	MsgId       Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MsgId,omitempty"`
	AcctSvcrRef Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AcctSvcrRef,omitempty"`
	PmtInfId    Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PmtInfId,omitempty"`
	InstrId     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 InstrId,omitempty"`
	EndToEndId  Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 EndToEndId,omitempty"`
	Prtry       ProprietaryReference1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type CertificateReference2 struct {
	Id CertificateIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	Dt ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Dt,omitempty"`
}

type ClearingSystemIdentification2Choice struct {
	Cd    ExternalClearingSystemIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type ClearingSystemMemberIdentification2 struct {
	ClrSysId ClearingSystemIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ClrSysId,omitempty"`
	MmbId    Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MmbId"`
}

// May be one of EMAL, FAXI, FILE, ONLI, PHON, POST, PROP, SWMT, SWMX
type CommunicationMethod4Code string

type Contact4 struct {
	NmPrfx    NamePrefix2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 NmPrfx,omitempty"`
	Nm        Max140Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Nm,omitempty"`
	PhneNb    PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PhneNb,omitempty"`
	MobNb     PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MobNb,omitempty"`
	FaxNb     PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 FaxNb,omitempty"`
	EmailAdr  Max2048Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 EmailAdr,omitempty"`
	EmailPurp Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 EmailPurp,omitempty"`
	JobTitl   Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 JobTitl,omitempty"`
	Rspnsblty Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Rspnsblty,omitempty"`
	Dept      Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Dept,omitempty"`
	Othr      []OtherContact1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Othr,omitempty"`
	PrefrdMtd PreferredContactMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PrefrdMtd,omitempty"`
}

type ContractBalance1 struct {
	Tp        ContractBalanceType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Tp"`
	Amt       ActiveCurrencyAndAmount    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt"`
	CdtDbtInd CreditDebit3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CdtDbtInd"`
}

type ContractBalanceType1Choice struct {
	Cd    ExternalContractBalanceType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type ContractClosureReason1Choice struct {
	Cd    ExternalContractClosureReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type ContractCollateral1 struct {
	TtlAmt   ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TtlAmt"`
	CollDesc []CashCollateral5       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CollDesc,omitempty"`
	AddtlInf Max1025Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlInf,omitempty"`
}

type ContractRegistrationReference2Choice struct {
	RegdCtrctId Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegdCtrctId,omitempty"`
	Ctrct       DocumentIdentification35 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ctrct,omitempty"`
}

type ContractRegistrationStatement3 struct {
	StmtId             Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 StmtId,omitempty"`
	RptgPty            TradeParty5                                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RptgPty"`
	RegnAgt            BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegnAgt"`
	RptgPrd            ReportingPeriod4                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RptgPrd"`
	RegdCtrct          RegisteredContract12                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegdCtrct"`
	TxJrnl             []TransactionCertificate4                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TxJrnl,omitempty"`
	SpprtgDocJrnl      []SupportingDocument3                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SpprtgDocJrnl,omitempty"`
	AddtlSpprtgDocJrnl []SupportingDocument3                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlSpprtgDocJrnl,omitempty"`
	RgltryRuleVldtn    []GenericValidationRuleIdentification1       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RgltryRuleVldtn,omitempty"`
	TtlCtrctTrnvrSum   ActiveCurrencyAndAmount                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TtlCtrctTrnvrSum"`
	SplmtryData        []SupplementaryData1                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SplmtryData,omitempty"`
}

type ContractRegistrationStatementV03 struct {
	GrpHdr      CurrencyControlHeader6           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 GrpHdr"`
	Stmt        []ContractRegistrationStatement3 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Stmt"`
	SplmtryData []SupplementaryData1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SplmtryData,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebit3Code string

type CurrencyControlHeader6 struct {
	MsgId    Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MsgId"`
	CreDtTm  ISODateTime                                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CreDtTm"`
	NbOfItms Max15NumericText                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 NbOfItms"`
	RcvgPty  PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RcvgPty"`
	RegnAgt  BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegnAgt"`
}

type DateAndPlaceOfBirth1 struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtryOfBirth"`
}

type DatePeriod3 struct {
	FrDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 FrDt"`
	ToDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ToDt,omitempty"`
}

// May be one of FITE, CALL
type DepositType1Code string

type Document struct {
	CtrctRegnStmt ContractRegistrationStatementV03 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrctRegnStmt"`
}

type DocumentAmendment1 struct {
	CrrctnId   float64   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CrrctnId"`
	OrgnlDocId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 OrgnlDocId,omitempty"`
}

type DocumentEntryAmendment1 struct {
	CrrctgNtryNb float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CrrctgNtryNb"`
	OrgnlDoc     DocumentIdentification28 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 OrgnlDoc"`
}

type DocumentGeneralInformation5 struct {
	DocTp           ExternalDocumentType1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DocTp"`
	DocNb           Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DocNb"`
	DocNm           Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DocNm,omitempty"`
	SndrRcvrSeqId   Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SndrRcvrSeqId,omitempty"`
	IsseDt          ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IsseDt,omitempty"`
	URL             Max256Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 URL,omitempty"`
	LkFileHash      SignatureEnvelopeReference `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LkFileHash,omitempty"`
	AttchdBinryFile BinaryFile1                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AttchdBinryFile"`
}

type DocumentIdentification22 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DtOfIsse,omitempty"`
}

type DocumentIdentification28 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id,omitempty"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DtOfIsse"`
}

type DocumentIdentification29 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DtOfIsse"`
}

type DocumentIdentification35 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id,omitempty"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DtOfIsse,omitempty"`
}

// Must match the pattern [0-9]
type Exact1NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [a-zA-Z0-9]{1}[a-zA-Z0-9_]{3}
type Exact4AlphaNumericUnderscoreText string

// Must match the pattern [0-9]{5}
type Exact5NumericText string

type ExchangeRate1 struct {
	UnitCcy  ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 UnitCcy,omitempty"`
	XchgRate float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XchgRate,omitempty"`
	RateTp   ExchangeRateType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RateTp,omitempty"`
	CtrctId  Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrctId,omitempty"`
}

// May be one of SPOT, SALE, AGRD
type ExchangeRateType1Code string

// May be no more than 4 items long
type ExternalAccountIdentification1Code string

// May be no more than 4 items long
type ExternalCashAccountType1Code string

// May be no more than 5 items long
type ExternalClearingSystemIdentification1Code string

// May be no more than 4 items long
type ExternalContractBalanceType1Code string

// May be no more than 4 items long
type ExternalContractClosureReason1Code string

// May be no more than 4 items long
type ExternalDocumentType1Code string

// May be no more than 4 items long
type ExternalFinancialInstitutionIdentification1Code string

// May be no more than 4 items long
type ExternalOrganisationIdentification1Code string

// May be no more than 4 items long
type ExternalPersonIdentification1Code string

// May be no more than 4 items long
type ExternalProxyAccountType1Code string

// May be no more than 4 items long
type ExternalShipmentCondition1Code string

// May be no more than 4 items long
type ExternalValidationRuleIdentification1Code string

type FinancialIdentificationSchemeName1Choice struct {
	Cd    ExternalFinancialInstitutionIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type FinancialInstitutionIdentification18 struct {
	BICFI       BICFIDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 BICFI,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ClrSysMmbId,omitempty"`
	LEI         LEIIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LEI,omitempty"`
	Nm          Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Nm,omitempty"`
	PstlAdr     PostalAddress24                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PstlAdr,omitempty"`
	Othr        GenericFinancialIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Othr,omitempty"`
}

type FloatingInterestRate4 struct {
	RefRate    BenchmarkCurveName4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RefRate"`
	Term       InterestRateContractTerm1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Term"`
	BsisPtSprd float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 BsisPtSprd"`
}

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Issr,omitempty"`
}

type GenericFinancialIdentification1 struct {
	Id      Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	SchmeNm FinancialIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SchmeNm,omitempty"`
	Issr    Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Issr,omitempty"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SchmeNm,omitempty"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Issr,omitempty"`
}

type GenericValidationRuleIdentification1 struct {
	Id      Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
	Desc    Max350Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Desc,omitempty"`
	SchmeNm ValidationRuleSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SchmeNm,omitempty"`
	Issr    Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Issr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

type InterestPaymentDateRange1 struct {
	IntrstSchdlId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IntrstSchdlId,omitempty"`
	XpctdDt       ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XpctdDt,omitempty"`
	DueDt         ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DueDt,omitempty"`
}

type InterestPaymentSchedule1 struct {
	IntrstSchdlId Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IntrstSchdlId,omitempty"`
	Amt           ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt,omitempty"`
	XpctdDt       ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XpctdDt,omitempty"`
	DueDt         ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DueDt,omitempty"`
	AddtlInf      Max1025Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlInf,omitempty"`
}

type InterestRate2Choice struct {
	Fxd  float64               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Fxd,omitempty"`
	Fltg FloatingInterestRate4 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Fltg,omitempty"`
}

type InterestRateContractTerm1 struct {
	Unit RateBasis1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Unit"`
	Val  float64        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Val"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LegalOrganisation2 struct {
	Id           Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id,omitempty"`
	Nm           Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Nm,omitempty"`
	EstblishmtDt ISODate    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 EstblishmtDt,omitempty"`
	RegnDt       ISODate    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegnDt,omitempty"`
}

type LoanContract3 struct {
	CtrctDocId  DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrctDocId"`
	LnTpId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LnTpId,omitempty"`
	Buyr        []TradeParty5                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Buyr"`
	Sellr       []TradeParty5                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Sellr"`
	Amt         ActiveCurrencyAndAmount       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt,omitempty"`
	MtrtyDt     ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MtrtyDt,omitempty"`
	PrlngtnFlg  bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PrlngtnFlg,omitempty"`
	StartDt     ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 StartDt,omitempty"`
	SttlmCcy    ActiveCurrencyCode            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SttlmCcy,omitempty"`
	SpclConds   SpecialCondition1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SpclConds,omitempty"`
	DrtnCd      Exact1NumericText             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DrtnCd,omitempty"`
	IntrstRate  InterestRate2Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IntrstRate,omitempty"`
	Trch        []LoanContractTranche1        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Trch,omitempty"`
	PmtSchdl    []PaymentSchedule1            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PmtSchdl,omitempty"`
	IntrstSchdl []InterestPaymentSchedule1    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IntrstSchdl,omitempty"`
	IntraCpnyLn bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IntraCpnyLn"`
	Coll        ContractCollateral1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Coll,omitempty"`
	SndctdLn    []SyndicatedLoan2             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SndctdLn,omitempty"`
	Attchmnt    []DocumentGeneralInformation5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Attchmnt,omitempty"`
}

type LoanContractTranche1 struct {
	TrchNb      float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TrchNb"`
	XpctdDt     ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XpctdDt"`
	Amt         ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt"`
	DueDt       ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DueDt,omitempty"`
	DrtnCd      Exact1NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DrtnCd,omitempty"`
	LastTrchInd bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LastTrchInd,omitempty"`
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// May be no more than 1025 items long
type Max1025Text string

// May be no more than 128 items long
type Max128Text string

// May be no more than 140 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// May be no more than 16 items long
type Max16Text string

// May be no more than 2048 items long
type Max2048Text string

// May be no more than 256 items long
type Max256Text string

// May be no more than 25 items long
type Max25Text string

// May be no more than 34 items long
type Max34Text string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

// May be no more than 4 items long
type Max4Text string

// May be no more than 500 items long
type Max500Text string

// May be no more than 70 items long
type Max70Text string

// May be one of DOCT, MADM, MISS, MIST, MIKS
type NamePrefix2Code string

type OrganisationIdentification29 struct {
	AnyBIC AnyBICDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AnyBIC,omitempty"`
	LEI    LEIIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LEI,omitempty"`
	Othr   []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type OtherContact1 struct {
	ChanlTp Max4Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ChanlTp"`
	Id      Max128Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id,omitempty"`
}

type Party38Choice struct {
	OrgId  OrganisationIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 OrgId,omitempty"`
	PrvtId PersonIdentification13       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PrvtId,omitempty"`
}

type PartyIdentification135 struct {
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Nm,omitempty"`
	PstlAdr   PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PstlAdr,omitempty"`
	Id        Party38Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id,omitempty"`
	CtryOfRes CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtryOfRes,omitempty"`
	CtctDtls  Contact4        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtctDtls,omitempty"`
}

type PaymentSchedule1 struct {
	PmtSchdlId Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PmtSchdlId,omitempty"`
	Amt        ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt,omitempty"`
	XpctdDt    ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XpctdDt,omitempty"`
	DueDt      ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DueDt,omitempty"`
	AddtlInf   Max1025Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlInf,omitempty"`
}

type PaymentScheduleType2Choice struct {
	Cd    PaymentScheduleType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

// May be one of CNTR, ESTM, BOTH
type PaymentScheduleType2Code string

type PersonIdentification13 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PostalAddress24 struct {
	AdrTp       AddressType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AdrTp,omitempty"`
	Dept        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Dept,omitempty"`
	SubDept     Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SubDept,omitempty"`
	StrtNm      Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 StrtNm,omitempty"`
	BldgNb      Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 BldgNb,omitempty"`
	BldgNm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 BldgNm,omitempty"`
	Flr         Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Flr,omitempty"`
	PstBx       Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PstBx,omitempty"`
	Room        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Room,omitempty"`
	PstCd       Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PstCd,omitempty"`
	TwnNm       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TwnNm,omitempty"`
	TwnLctnNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TwnLctnNm,omitempty"`
	DstrctNm    Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DstrctNm,omitempty"`
	CtrySubDvsn Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrySubDvsn,omitempty"`
	Ctry        CountryCode        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ctry,omitempty"`
	AdrLine     []Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AdrLine,omitempty"`
}

// May be one of LETT, MAIL, PHON, FAXX, CELL
type PreferredContactMethod1Code string

type ProprietaryReference1 struct {
	Tp  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Tp"`
	Ref Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ref"`
}

type ProxyAccountIdentification1 struct {
	Tp ProxyAccountType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Tp,omitempty"`
	Id Max2048Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Id"`
}

type ProxyAccountType1Choice struct {
	Cd    ExternalProxyAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

// May be one of ALLL, CHNG, MODF
type QueryType3Code string

// May be one of DAYS, MNTH, WEEK, YEAR
type RateBasis1Code string

type RegisteredContract12 struct {
	OrgnlCtrctRegnReq Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 OrgnlCtrctRegnReq,omitempty"`
	IssrFI            BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IssrFI"`
	Ctrct             UnderlyingContract3Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ctrct"`
	CtrctBal          []ContractBalance1                           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrctBal,omitempty"`
	PmtSchdlTp        PaymentScheduleType2Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PmtSchdlTp,omitempty"`
	RegdCtrctId       DocumentIdentification29                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegdCtrctId"`
	PrvsRegdCtrctId   DocumentIdentification22                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PrvsRegdCtrctId,omitempty"`
	RegdCtrctJrnl     []RegisteredContractJournal2                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegdCtrctJrnl,omitempty"`
	Amdmnt            []RegisteredContractAmendment1               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amdmnt,omitempty"`
	Submissn          RegisteredContractCommunication1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Submissn"`
	Dlvry             RegisteredContractCommunication1             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Dlvry"`
	LnPrncplAmt       ActiveCurrencyAndAmount                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LnPrncplAmt,omitempty"`
	EstmtdDtInd       bool                                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 EstmtdDtInd"`
	IntrCpnyLn        bool                                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IntrCpnyLn"`
	AddtlInf          Max1025Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlInf,omitempty"`
}

type RegisteredContractAmendment1 struct {
	AmdmntDt  ISODate                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AmdmntDt"`
	Doc       DocumentIdentification28 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Doc"`
	StartDt   ISODate                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 StartDt,omitempty"`
	AmdmntRsn Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AmdmntRsn,omitempty"`
	AddtlInf  Max1025Text              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlInf,omitempty"`
}

type RegisteredContractCommunication1 struct {
	Mtd CommunicationMethod4Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Mtd"`
	Dt  ISODate                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Dt"`
}

type RegisteredContractJournal2 struct {
	RegnAgt BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegnAgt"`
	UnqId   DocumentIdentification28                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 UnqId,omitempty"`
	ClsrDt  ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ClsrDt"`
	ClsrRsn ContractClosureReason1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ClsrRsn"`
}

type ReportingPeriod4 struct {
	FrToDt DatePeriod3    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 FrToDt"`
	FrToTm TimePeriod2    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 FrToTm"`
	Tp     QueryType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Tp"`
}

type ShipmentAttribute2 struct {
	Conds         ShipmentCondition1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Conds,omitempty"`
	XpctdDt       ISODate                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XpctdDt,omitempty"`
	CtryOfCntrPty CountryCode              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtryOfCntrPty,omitempty"`
}

type ShipmentCondition1Choice struct {
	Cd    ExternalShipmentCondition1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type ShipmentDateRange1 struct {
	EarlstShipmntDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 EarlstShipmntDt,omitempty"`
	LatstShipmntDt  ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LatstShipmntDt,omitempty"`
}

type ShipmentDateRange2 struct {
	SubQtyVal       float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SubQtyVal"`
	EarlstShipmntDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 EarlstShipmntDt,omitempty"`
	LatstShipmntDt  ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LatstShipmntDt,omitempty"`
}

type ShipmentSchedule2Choice struct {
	ShipmntDtRg     ShipmentDateRange1   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ShipmntDtRg,omitempty"`
	ShipmntSubSchdl []ShipmentDateRange2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ShipmntSubSchdl,omitempty"`
}

type SignatureEnvelopeReference struct {
	Item string `xml:",any"`
}

type SpecialCondition1 struct {
	IncmgAmt           ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IncmgAmt"`
	OutgngAmt          ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 OutgngAmt"`
	IncmgAmtToOthrAcct ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 IncmgAmtToOthrAcct,omitempty"`
	PmtFrOthrAcct      ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PmtFrOthrAcct,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type SupportingDocument3 struct {
	SpprtgDocId Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SpprtgDocId"`
	OrgnlReqId  Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 OrgnlReqId,omitempty"`
	Cert        DocumentIdentification28                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cert"`
	AcctOwnr    PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AcctOwnr"`
	AcctSvcr    BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AcctSvcr"`
	Amdmnt      DocumentAmendment1                           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amdmnt,omitempty"`
	CtrctRef    ContractRegistrationReference2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrctRef"`
	Ntry        []SupportingDocumentEntry2                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ntry"`
	SplmtryData []SupplementaryData1                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SplmtryData,omitempty"`
}

type SupportingDocumentEntry2 struct {
	NtryId                      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 NtryId"`
	OrgnlDoc                    DocumentIdentification22         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 OrgnlDoc"`
	DocTp                       Exact4AlphaNumericUnderscoreText `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DocTp"`
	TtlAmt                      ActiveCurrencyAndAmount          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TtlAmt,omitempty"`
	TtlAmtAftrShipmnt           ActiveCurrencyAndAmount          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TtlAmtAftrShipmnt,omitempty"`
	TtlAmtInCtrctCcy            ActiveCurrencyAndAmount          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TtlAmtInCtrctCcy,omitempty"`
	TtlAmtAftrShipmntInCtrctCcy ActiveCurrencyAndAmount          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TtlAmtAftrShipmntInCtrctCcy,omitempty"`
	ShipmntAttrbts              ShipmentAttribute2               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ShipmntAttrbts"`
	NtryAmdmntId                DocumentEntryAmendment1          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 NtryAmdmntId,omitempty"`
	MtrtyData                   Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MtrtyData,omitempty"`
	AddtlInf                    Max500Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlInf,omitempty"`
	Attchmnt                    []DocumentGeneralInformation5    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Attchmnt,omitempty"`
}

type SyndicatedLoan2 struct {
	Brrwr       TradeParty5             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Brrwr"`
	Lndr        TradeParty5             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Lndr,omitempty"`
	Amt         ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt,omitempty"`
	Shr         float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Shr,omitempty"`
	XchgRateInf ExchangeRate1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XchgRateInf,omitempty"`
}

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP
type TaxExemptReason1Code string

type TaxExemptionReasonFormat1Choice struct {
	Ustrd Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ustrd,omitempty"`
	Strd  TaxExemptReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Strd,omitempty"`
}

type TaxParty4 struct {
	TaxId       Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TaxId,omitempty"`
	TaxTp       Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TaxTp,omitempty"`
	RegnId      Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RegnId,omitempty"`
	TaxXmptnRsn []TaxExemptionReasonFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TaxXmptnRsn,omitempty"`
}

type TimePeriod2 struct {
	FrTm ISOTime `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 FrTm"`
	ToTm ISOTime `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ToTm,omitempty"`
}

type TradeContract3 struct {
	CtrctDocId   DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrctDocId,omitempty"`
	TradTpId     Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TradTpId,omitempty"`
	Amt          ActiveCurrencyAndAmount       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt,omitempty"`
	Buyr         []TradeParty5                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Buyr"`
	Sellr        []TradeParty5                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Sellr"`
	MtrtyDt      ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 MtrtyDt,omitempty"`
	PrlngtnFlg   bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PrlngtnFlg,omitempty"`
	StartDt      ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 StartDt,omitempty"`
	SttlmCcy     ActiveCurrencyCode            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SttlmCcy,omitempty"`
	XchgRateInf  ExchangeRate1                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XchgRateInf,omitempty"`
	PmtSchdl     InterestPaymentDateRange1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PmtSchdl,omitempty"`
	ShipmntSchdl ShipmentSchedule2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 ShipmntSchdl,omitempty"`
	Attchmnt     []DocumentGeneralInformation5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Attchmnt,omitempty"`
}

type TradeParty5 struct {
	PtyId  PartyIdentification135 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 PtyId"`
	LglOrg LegalOrganisation2     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LglOrg,omitempty"`
	TaxPty []TaxParty4            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TaxPty,omitempty"`
}

type TransactionCertificate4 struct {
	TxId             Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TxId"`
	Cert             DocumentIdentification28        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cert"`
	Acct             CashAccount40                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Acct,omitempty"`
	BkAcctDmcltnCtry CountryCode                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 BkAcctDmcltnCtry,omitempty"`
	Amdmnt           DocumentAmendment1              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amdmnt,omitempty"`
	CertRcrd         []TransactionCertificateRecord2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CertRcrd"`
	SplmtryData      []SupplementaryData1            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 SplmtryData,omitempty"`
}

type TransactionCertificate5 struct {
	RfrdDoc   CertificateReference2   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 RfrdDoc"`
	TxDt      ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TxDt"`
	TxTp      Exact1NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TxTp,omitempty"`
	LclInstrm Exact5NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 LclInstrm"`
	Amt       ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Amt"`
}

type TransactionCertificateContract2 struct {
	CtrctRef           ContractRegistrationReference2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CtrctRef,omitempty"`
	TxAmtInCtrctCcy    ActiveCurrencyAndAmount              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 TxAmtInCtrctCcy,omitempty"`
	XpctdShipmntDt     ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XpctdShipmntDt,omitempty"`
	XpctdAdvncPmtRtrDt ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 XpctdAdvncPmtRtrDt,omitempty"`
	AddtlInf           Max1025Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 AddtlInf,omitempty"`
}

type TransactionCertificateRecord2 struct {
	CertRcrdId      Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 CertRcrdId"`
	DocSubmitgPrcdr Exact1NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 DocSubmitgPrcdr,omitempty"`
	Tx              TransactionCertificate5         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Tx"`
	Ctrct           TransactionCertificateContract2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ctrct,omitempty"`
	Attchmnt        []DocumentGeneralInformation5   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Attchmnt,omitempty"`
}

type UnderlyingContract3Choice struct {
	Ln   LoanContract3  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Ln,omitempty"`
	Trad TradeContract3 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Trad,omitempty"`
}

type ValidationRuleSchemeName1Choice struct {
	Cd    ExternalValidationRuleIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Cd,omitempty"`
	Prtry Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.022.001.03 Prtry,omitempty"`
}

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
