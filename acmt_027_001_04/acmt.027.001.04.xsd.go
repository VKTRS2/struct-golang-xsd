// Code generated by download. DO NOT EDIT.

package iso20022_acmt_027_001_04

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 IBAN,omitempty"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Othr,omitempty"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type AccountSwitchDetails1 struct {
	UnqRefNb      Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 UnqRefNb"`
	RtgUnqRefNb   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RtgUnqRefNb"`
	SwtchRcvdDtTm ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SwtchRcvdDtTm,omitempty"`
	SwtchDt       ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SwtchDt,omitempty"`
	SwtchTp       SwitchType1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SwtchTp"`
	SwtchSts      SwitchStatus1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SwtchSts,omitempty"`
	BalTrfWndw    BalanceTransferWindow1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BalTrfWndw,omitempty"`
	Rspn          []ResponseDetails1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Rspn,omitempty"`
}

type AccountSwitchInformationRequestV04 struct {
	MsgId         MessageIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MsgId"`
	AcctSwtchDtls AccountSwitchDetails1  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AcctSwtchDtls"`
	NewAcct       NewAccount3            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 NewAcct"`
	OdAcct        CashAccount41          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 OdAcct"`
	BalTrf        []BalanceTransfer4     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BalTrf,omitempty"`
	SplmtryData   []SupplementaryData1   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SplmtryData,omitempty"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AddressType3Choice struct {
	Cd    AddressType2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type BICFIDec2014Identifier string

type BalanceTransfer4 struct {
	BalTrfRef     BalanceTransferReference1    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BalTrfRef,omitempty"`
	BalTrfMtd     SettlementMethod4Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BalTrfMtd,omitempty"`
	BalTrfFndgLmt BalanceTransferFundingLimit1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BalTrfFndgLmt,omitempty"`
}

type BalanceTransferFundingLimit1 struct {
	CcyAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CcyAmt"`
}

type BalanceTransferReference1 struct {
	BalTrfRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BalTrfRef"`
}

// May be one of DAYH, EARL
type BalanceTransferWindow1Code string

type BranchAndFinancialInstitutionIdentification6 struct {
	FinInstnId FinancialInstitutionIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FinInstnId"`
	BrnchId    BranchData3                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BrnchId,omitempty"`
}

type BranchData3 struct {
	Id      Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id,omitempty"`
	LEI     LEIIdentifier   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 LEI,omitempty"`
	Nm      Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	PstlAdr PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PstlAdr,omitempty"`
}

// May be one of FWNG, PREC
type BusinessDayConvention1Code string

type CashAccount40 struct {
	Id   AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id,omitempty"`
	Tp   CashAccountType2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Ccy  ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ccy,omitempty"`
	Nm   Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	Prxy ProxyAccountIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prxy,omitempty"`
}

type CashAccount41 struct {
	Id   AccountIdentification4Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id,omitempty"`
	Tp   CashAccountType2Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Ccy  ActiveOrHistoricCurrencyCode                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ccy,omitempty"`
	Nm   Max70Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	Prxy ProxyAccountIdentification1                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prxy,omitempty"`
	Ownr PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ownr,omitempty"`
	Svcr BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Svcr,omitempty"`
}

type CashAccountType2Choice struct {
	Cd    ExternalCashAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type CategoryPurpose1Choice struct {
	Cd    ExternalCategoryPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// May be one of DEBT, CRED, SHAR, SLEV
type ChargeBearerType1Code string

type Cheque11 struct {
	ChqTp       ChequeType2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ChqTp,omitempty"`
	ChqNb       Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ChqNb,omitempty"`
	ChqFr       NameAndAddress16            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ChqFr,omitempty"`
	DlvryMtd    ChequeDeliveryMethod1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DlvryMtd,omitempty"`
	DlvrTo      NameAndAddress16            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DlvrTo,omitempty"`
	InstrPrty   Priority2Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 InstrPrty,omitempty"`
	ChqMtrtyDt  ISODate                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ChqMtrtyDt,omitempty"`
	FrmsCd      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FrmsCd,omitempty"`
	MemoFld     []Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MemoFld,omitempty"`
	RgnlClrZone Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RgnlClrZone,omitempty"`
	PrtLctn     Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PrtLctn,omitempty"`
	Sgntr       []Max70Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Sgntr,omitempty"`
}

// May be one of MLDB, MLCD, MLFA, CRDB, CRCD, CRFA, PUDB, PUCD, PUFA, RGDB, RGCD, RGFA
type ChequeDelivery1Code string

type ChequeDeliveryMethod1Choice struct {
	Cd    ChequeDelivery1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// May be one of CCHQ, CCCH, BCHQ, DRFT, ELDR
type ChequeType2Code string

type CitizenshipInformation1 struct {
	Ntlty   string  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ntlty"`
	MnrInd  bool    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MnrInd,omitempty"`
	StartDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 StartDt,omitempty"`
	EndDt   ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 EndDt,omitempty"`
}

type ClearingSystemIdentification2Choice struct {
	Cd    ExternalClearingSystemIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type ClearingSystemMemberIdentification2 struct {
	ClrSysId ClearingSystemIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ClrSysId,omitempty"`
	MmbId    Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MmbId"`
}

type CommunicationAddress3 struct {
	Email  Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Email,omitempty"`
	Phne   PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Phne,omitempty"`
	Mob    PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Mob,omitempty"`
	FaxNb  PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FaxNb,omitempty"`
	TlxAdr Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TlxAdr,omitempty"`
	URLAdr Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 URLAdr,omitempty"`
}

type Contact4 struct {
	NmPrfx    NamePrefix2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 NmPrfx,omitempty"`
	Nm        Max140Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	PhneNb    PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PhneNb,omitempty"`
	MobNb     PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MobNb,omitempty"`
	FaxNb     PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FaxNb,omitempty"`
	EmailAdr  Max2048Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 EmailAdr,omitempty"`
	EmailPurp Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 EmailPurp,omitempty"`
	JobTitl   Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 JobTitl,omitempty"`
	Rspnsblty Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Rspnsblty,omitempty"`
	Dept      Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dept,omitempty"`
	Othr      []OtherContact1             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Othr,omitempty"`
	PrefrdMtd PreferredContactMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PrefrdMtd,omitempty"`
}

type CountryAndResidentialStatusType1 struct {
	Ctry      CountryCode            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ctry"`
	ResdtlSts ResidentialStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ResdtlSts"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type CreditTransferTransaction51 struct {
	PmtId           PaymentIdentification6                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PmtId"`
	PmtTpInf        PaymentTypeInformation26                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PmtTpInf,omitempty"`
	TaxRateMrkr     TaxRateMarker1Code                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxRateMrkr,omitempty"`
	Amt             ActiveCurrencyAndAmount                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Amt"`
	ChrgBr          ChargeBearerType1Code                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ChrgBr,omitempty"`
	ChqInstr        Cheque11                                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ChqInstr,omitempty"`
	Frqcy           Frequency1                                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Frqcy,omitempty"`
	TrfInstr        TransferInstruction1                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TrfInstr,omitempty"`
	UltmtDbtr       PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 UltmtDbtr,omitempty"`
	IntrmyAgt1      BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 IntrmyAgt1,omitempty"`
	IntrmyAgt2      BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 IntrmyAgt2,omitempty"`
	IntrmyAgt3      BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 IntrmyAgt3,omitempty"`
	CdtrAgt         BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdtrAgt"`
	Cdtr            PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cdtr,omitempty"`
	CdtrAcct        CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdtrAcct,omitempty"`
	UltmtCdtr       PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 UltmtCdtr,omitempty"`
	InstrForCdtrAgt []InstructionForCreditorAgent3               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 InstrForCdtrAgt,omitempty"`
	Purp            Purpose2Choice                               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Purp,omitempty"`
	RgltryRptg      []RegulatoryReporting3                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RgltryRptg,omitempty"`
	Tax             TaxInformation10                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tax,omitempty"`
	RltdRmtInf      []RemittanceLocation6                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RltdRmtInf,omitempty"`
	RmtInf          RemittanceInformation21                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtInf,omitempty"`
}

type CreditorReferenceInformation2 struct {
	Tp  CreditorReferenceType2 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Ref Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ref,omitempty"`
}

type CreditorReferenceType1Choice struct {
	Cd    DocumentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type CreditorReferenceType2 struct {
	CdOrPrtry CreditorReferenceType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdOrPrtry"`
	Issr      Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

type DateAndPlaceOfBirth1 struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtryOfBirth"`
}

type DatePeriod2 struct {
	FrDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FrDt"`
	ToDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ToDt"`
}

type DiscountAmountAndType1 struct {
	Tp  DiscountAmountType1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Amt"`
}

type DiscountAmountType1Choice struct {
	Cd    ExternalDiscountAmountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type Document struct {
	AcctSwtchInfReq AccountSwitchInformationRequestV04 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AcctSwtchInfReq"`
}

type DocumentAdjustment1 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdtDbtInd,omitempty"`
	Rsn       Max4Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Rsn,omitempty"`
	AddtlInf  Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AddtlInf,omitempty"`
}

type DocumentLineIdentification1 struct {
	Tp     DocumentLineType1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Nb     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nb,omitempty"`
	RltdDt ISODate           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RltdDt,omitempty"`
}

type DocumentLineInformation1 struct {
	Id   []DocumentLineIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	Desc Max2048Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Desc,omitempty"`
	Amt  RemittanceAmount3             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Amt,omitempty"`
}

type DocumentLineType1 struct {
	CdOrPrtry DocumentLineType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdOrPrtry"`
	Issr      Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

type DocumentLineType1Choice struct {
	Cd    ExternalDocumentLineType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// May be one of RADM, RPIN, FXDR, DISP, PUOR, SCOR
type DocumentType3Code string

// May be one of MSIN, CNFA, DNFA, CINV, CREN, DEBN, HIRI, SBIN, CMCN, SOAC, DISP, BOLD, VCHR, AROI, TSUT, PUOR
type DocumentType6Code string

type EndPoint1Choice struct {
	NbOfPmts  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 NbOfPmts,omitempty"`
	LastPmtDt ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 LastPmtDt,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// May be no more than 4 items long
type ExternalAccountIdentification1Code string

// May be no more than 4 items long
type ExternalCashAccountType1Code string

// May be no more than 4 items long
type ExternalCategoryPurpose1Code string

// May be no more than 5 items long
type ExternalClearingSystemIdentification1Code string

// May be no more than 4 items long
type ExternalCreditorAgentInstruction1Code string

// May be no more than 4 items long
type ExternalDiscountAmountType1Code string

// May be no more than 4 items long
type ExternalDocumentLineType1Code string

// May be no more than 4 items long
type ExternalFinancialInstitutionIdentification1Code string

// May be no more than 4 items long
type ExternalGarnishmentType1Code string

// May be no more than 35 items long
type ExternalLocalInstrument1Code string

// May be no more than 4 items long
type ExternalOrganisationIdentification1Code string

// May be no more than 4 items long
type ExternalPersonIdentification1Code string

// May be no more than 4 items long
type ExternalProxyAccountType1Code string

// May be no more than 4 items long
type ExternalPurpose1Code string

// May be no more than 4 items long
type ExternalServiceLevel1Code string

// May be no more than 4 items long
type ExternalTaxAmountType1Code string

type FinancialIdentificationSchemeName1Choice struct {
	Cd    ExternalFinancialInstitutionIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type FinancialInstitutionIdentification18 struct {
	BICFI       BICFIDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BICFI,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ClrSysMmbId,omitempty"`
	LEI         LEIIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 LEI,omitempty"`
	Nm          Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	PstlAdr     PostalAddress24                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PstlAdr,omitempty"`
	Othr        GenericFinancialIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Othr,omitempty"`
}

type Frequency1 struct {
	Seq                 Max3NumericText            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Seq,omitempty"`
	StartDt             ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 StartDt"`
	EndPtChc            EndPoint1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 EndPtChc"`
	ReqdFrqcyPttrn      Frequency37Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ReqdFrqcyPttrn,omitempty"`
	NonWorkgDayAdjstmnt BusinessDayConvention1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 NonWorkgDayAdjstmnt,omitempty"`
}

// May be one of NEVR, YEAR, RATE, MIAN, QURT
type Frequency10Code string

type Frequency37Choice struct {
	Cd    Frequency10Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type Garnishment3 struct {
	Tp                GarnishmentType1                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp"`
	Grnshee           PartyIdentification135            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Grnshee,omitempty"`
	GrnshmtAdmstr     PartyIdentification135            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 GrnshmtAdmstr,omitempty"`
	RefNb             Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RefNb,omitempty"`
	Dt                ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dt,omitempty"`
	RmtdAmt           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtdAmt,omitempty"`
	FmlyMdclInsrncInd bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FmlyMdclInsrncInd,omitempty"`
	MplyeeTermntnInd  bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MplyeeTermntnInd,omitempty"`
}

type GarnishmentType1 struct {
	CdOrPrtry GarnishmentType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdOrPrtry"`
	Issr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

type GarnishmentType1Choice struct {
	Cd    ExternalGarnishmentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// May be one of FEMA, MALE
type Gender1Code string

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

type GenericFinancialIdentification1 struct {
	Id      Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	SchmeNm FinancialIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SchmeNm,omitempty"`
	Issr    Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SchmeNm,omitempty"`
}

type GenericIdentification44 struct {
	Id     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	Tp     OtherIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp"`
	Issr   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
	IsseDt ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 IsseDt,omitempty"`
	XpryDt ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 XpryDt,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SchmeNm,omitempty"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOYear time.Time

func (t *ISOYear) UnmarshalText(text []byte) error {
	return (*xsdGYear)(t).UnmarshalText(text)
}
func (t ISOYear) MarshalText() ([]byte, error) {
	return xsdGYear(t).MarshalText()
}

type IndividualPerson36 struct {
	CurNm            IndividualPersonNameLong2        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CurNm"`
	PrvsNm           []IndividualPersonNameLong2      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PrvsNm,omitempty"`
	Gndr             Gender1Code                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Gndr,omitempty"`
	Lang             string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Lang,omitempty"`
	BirthDt          ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BirthDt,omitempty"`
	CtryOfBirth      CountryCode                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtryOfBirth,omitempty"`
	PrvcOfBirth      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PrvcOfBirth,omitempty"`
	CityOfBirth      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CityOfBirth,omitempty"`
	TaxtnCtry        CountryCode                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxtnCtry,omitempty"`
	CtryAndResdtlSts CountryAndResidentialStatusType1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtryAndResdtlSts,omitempty"`
	SclSctyNb        Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SclSctyNb,omitempty"`
	PstlAdr          []PostalAddress24                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PstlAdr,omitempty"`
	CtznshInf        []CitizenshipInformation1        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtznshInf,omitempty"`
	PmryComAdr       CommunicationAddress3            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PmryComAdr,omitempty"`
	ScndryComAdr     CommunicationAddress3            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ScndryComAdr,omitempty"`
	OthrId           []GenericIdentification44        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 OthrId,omitempty"`
	OthrDtls         []TransferInstruction1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 OthrDtls,omitempty"`
}

type IndividualPersonNameLong2 struct {
	NmPrfx  NamePrefix2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 NmPrfx,omitempty"`
	Srnm    Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Srnm"`
	GvnNm   Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 GvnNm,omitempty"`
	MddlNm  Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MddlNm,omitempty"`
	Initls  Max6Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Initls,omitempty"`
	NmSfx   Max350Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 NmSfx,omitempty"`
	Nm      Max350Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	StartDt ISODate         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 StartDt,omitempty"`
	EndDt   ISODate         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 EndDt,omitempty"`
}

type InstructionForCreditorAgent3 struct {
	Cd       ExternalCreditorAgentInstruction1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	InstrInf Max140Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 InstrInf,omitempty"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LocalInstrument2Choice struct {
	Cd    ExternalLocalInstrument1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// May be no more than 10 items long
type Max10Text string

// May be no more than 128 items long
type Max128Text string

// May be no more than 140 items long
type Max140Text string

// May be no more than 16 items long
type Max16Text string

// May be no more than 2048 items long
type Max2048Text string

// May be no more than 256 items long
type Max256Text string

// May be no more than 34 items long
type Max34Text string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// May be no more than 4 items long
type Max4Text string

// May be no more than 6 items long
type Max6Text string

// May be no more than 70 items long
type Max70Text string

type MessageIdentification1 struct {
	Id      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
	CreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CreDtTm"`
}

type NameAndAddress16 struct {
	Nm  Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm"`
	Adr PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Adr"`
}

// May be one of DOCT, MADM, MISS, MIST, MIKS
type NamePrefix2Code string

type NewAccount3 struct {
	Acct    CashAccount41        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Acct"`
	AcctPty []IndividualPerson36 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AcctPty"`
	Org     Organisation35       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Org,omitempty"`
}

type Organisation35 struct {
	FullLglNm    Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FullLglNm"`
	TradgNm      Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TradgNm,omitempty"`
	OrgLglSts    OrganisationLegalStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 OrgLglSts,omitempty"`
	EstblishdDt  ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 EstblishdDt,omitempty"`
	RegnNb       Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RegnNb,omitempty"`
	RegnCtry     CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RegnCtry,omitempty"`
	RegnDt       ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RegnDt,omitempty"`
	TaxtnIdNb    Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxtnIdNb,omitempty"`
	TaxtnCtry    CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxtnCtry,omitempty"`
	CtryOfOpr    CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtryOfOpr,omitempty"`
	BrdRsltnInd  bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BrdRsltnInd,omitempty"`
	BizAdr       PostalAddress24              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BizAdr,omitempty"`
	OprlAdr      PostalAddress24              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 OprlAdr,omitempty"`
	LglAdr       PostalAddress24              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 LglAdr,omitempty"`
	RprtvOffcr   []PartyIdentification135     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RprtvOffcr,omitempty"`
	TrsrMgr      PartyIdentification135       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TrsrMgr,omitempty"`
	MainMndtHldr []PartyIdentification135     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 MainMndtHldr,omitempty"`
	Sndr         []PartyIdentification135     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Sndr,omitempty"`
}

type OrganisationIdentification29 struct {
	AnyBIC AnyBICDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AnyBIC,omitempty"`
	LEI    LEIIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 LEI,omitempty"`
	Othr   []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// May be one of CIOC, CHAR, CICC, GENP, IAPS, LLPP, PCLG, LIMP, PCLS, PCLC, SOLE, UNLC, UNLT
type OrganisationLegalStatus1Code string

type OtherContact1 struct {
	ChanlTp Max4Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 ChanlTp"`
	Id      Max128Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id,omitempty"`
}

type OtherIdentification1Choice struct {
	Cd    PersonIdentificationType5Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry GenericIdentification47       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type Party38Choice struct {
	OrgId  OrganisationIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 OrgId,omitempty"`
	PrvtId PersonIdentification13       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PrvtId,omitempty"`
}

type PartyIdentification135 struct {
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	PstlAdr   PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PstlAdr,omitempty"`
	Id        Party38Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id,omitempty"`
	CtryOfRes CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtryOfRes,omitempty"`
	CtctDtls  Contact4        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtctDtls,omitempty"`
}

type PaymentIdentification6 struct {
	InstrId    Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 InstrId,omitempty"`
	EndToEndId Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 EndToEndId"`
	UETR       UUIDv4Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 UETR,omitempty"`
}

type PaymentTypeInformation26 struct {
	InstrPrty Priority2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 InstrPrty,omitempty"`
	SvcLvl    []ServiceLevel8Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SvcLvl,omitempty"`
	LclInstrm LocalInstrument2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 LclInstrm,omitempty"`
	CtgyPurp  CategoryPurpose1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtgyPurp,omitempty"`
}

type PersonIdentification13 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

// May be one of AREG, CPFA, DRLC, EMID, IDCD, NRIN, OTHR, PASS, POCD, SOCS, SRSA, GUNL
type PersonIdentificationType5Code string

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PostalAddress24 struct {
	AdrTp       AddressType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AdrTp,omitempty"`
	Dept        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dept,omitempty"`
	SubDept     Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SubDept,omitempty"`
	StrtNm      Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 StrtNm,omitempty"`
	BldgNb      Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BldgNb,omitempty"`
	BldgNm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 BldgNm,omitempty"`
	Flr         Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Flr,omitempty"`
	PstBx       Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PstBx,omitempty"`
	Room        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Room,omitempty"`
	PstCd       Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PstCd,omitempty"`
	TwnNm       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TwnNm,omitempty"`
	TwnLctnNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TwnLctnNm,omitempty"`
	DstrctNm    Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DstrctNm,omitempty"`
	CtrySubDvsn Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtrySubDvsn,omitempty"`
	Ctry        CountryCode        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ctry,omitempty"`
	AdrLine     []Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AdrLine,omitempty"`
}

// May be one of LETT, MAIL, PHON, FAXX, CELL
type PreferredContactMethod1Code string

// May be one of HIGH, NORM
type Priority2Code string

type ProxyAccountIdentification1 struct {
	Tp ProxyAccountType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Id Max2048Text             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Id"`
}

type ProxyAccountType1Choice struct {
	Cd    ExternalProxyAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type Purpose2Choice struct {
	Cd    ExternalPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type ReferredDocumentInformation7 struct {
	Tp       ReferredDocumentType4      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Nb       Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nb,omitempty"`
	RltdDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RltdDt,omitempty"`
	LineDtls []DocumentLineInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 LineDtls,omitempty"`
}

type ReferredDocumentType3Choice struct {
	Cd    DocumentType6Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type ReferredDocumentType4 struct {
	CdOrPrtry ReferredDocumentType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdOrPrtry"`
	Issr      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Issr,omitempty"`
}

type RegulatoryAuthority2 struct {
	Nm   Max140Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
	Ctry CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ctry,omitempty"`
}

type RegulatoryReporting3 struct {
	DbtCdtRptgInd RegulatoryReportingType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DbtCdtRptgInd,omitempty"`
	Authrty       RegulatoryAuthority2             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Authrty,omitempty"`
	Dtls          []StructuredRegulatoryReporting3 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dtls,omitempty"`
}

// May be one of CRED, DEBT, BOTH
type RegulatoryReportingType1Code string

type RemittanceAmount2 struct {
	DuePyblAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DuePyblAmt,omitempty"`
	DscntApldAmt      []DiscountAmountAndType1          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DscntApldAmt,omitempty"`
	CdtNoteAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdtNoteAmt,omitempty"`
	TaxAmt            []TaxAmountAndType1               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxAmt,omitempty"`
	AdjstmntAmtAndRsn []DocumentAdjustment1             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AdjstmntAmtAndRsn,omitempty"`
	RmtdAmt           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtdAmt,omitempty"`
}

type RemittanceAmount3 struct {
	DuePyblAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DuePyblAmt,omitempty"`
	DscntApldAmt      []DiscountAmountAndType1          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DscntApldAmt,omitempty"`
	CdtNoteAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdtNoteAmt,omitempty"`
	TaxAmt            []TaxAmountAndType1               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxAmt,omitempty"`
	AdjstmntAmtAndRsn []DocumentAdjustment1             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AdjstmntAmtAndRsn,omitempty"`
	RmtdAmt           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtdAmt,omitempty"`
}

type RemittanceInformation21 struct {
	Ustrd []Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ustrd,omitempty"`
	Strd  []StructuredRemittanceInformation17 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Strd,omitempty"`
}

type RemittanceLocation6 struct {
	RmtId             Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtId,omitempty"`
	RmtLctnMtd        RemittanceLocationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtLctnMtd,omitempty"`
	RmtLctnElctrncAdr Max2048Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtLctnElctrncAdr,omitempty"`
	RmtLctnPstlAdr    NameAndAddress16              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RmtLctnPstlAdr,omitempty"`
}

// May be one of FAXI, EDIC, URID, EMAL, POST, SMSM
type RemittanceLocationMethod2Code string

// May be one of RESI, PRES, NRES
type ResidentialStatus1Code string

type ResponseDetails1 struct {
	RspnCd    Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RspnCd"`
	AddtlDtls Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AddtlDtls,omitempty"`
}

type ServiceLevel8Choice struct {
	Cd    ExternalServiceLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type SettlementMethod4Choice struct {
	Cdt CreditTransferTransaction51 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cdt,omitempty"`
	Dbt CreditTransferTransaction51 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dbt,omitempty"`
}

type StructuredRegulatoryReporting3 struct {
	Tp   Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Dt   ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dt,omitempty"`
	Ctry CountryCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ctry,omitempty"`
	Cd   Max10Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Amt  ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Amt,omitempty"`
	Inf  []Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Inf,omitempty"`
}

type StructuredRemittanceInformation17 struct {
	RfrdDocInf  []ReferredDocumentInformation7 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RfrdDocInf,omitempty"`
	RfrdDocAmt  RemittanceAmount2              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RfrdDocAmt,omitempty"`
	CdtrRefInf  CreditorReferenceInformation2  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CdtrRefInf,omitempty"`
	Invcr       PartyIdentification135         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Invcr,omitempty"`
	Invcee      PartyIdentification135         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Invcee,omitempty"`
	TaxRmt      TaxData1                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxRmt,omitempty"`
	GrnshmtRmt  Garnishment3                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 GrnshmtRmt,omitempty"`
	AddtlRmtInf []Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AddtlRmtInf,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// May be one of ACPT, BTRQ, BTRS, COMP, REDT, REDE, REJT, REQU, TMTN
type SwitchStatus1Code string

// May be one of FULL, PART
type SwitchType1Code string

type TaxAmount3 struct {
	Rate         float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Rate,omitempty"`
	TaxblBaseAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxblBaseAmt,omitempty"`
	TtlAmt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TtlAmt,omitempty"`
	Dtls         []TaxRecordDetails3               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dtls,omitempty"`
}

type TaxAmountAndType1 struct {
	Tp  TaxAmountType1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Amt"`
}

type TaxAmountType1Choice struct {
	Cd    ExternalTaxAmountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd,omitempty"`
	Prtry Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
}

type TaxAuthorisation1 struct {
	Titl Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Titl,omitempty"`
	Nm   Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Nm,omitempty"`
}

type TaxData1 struct {
	Cdtr            TaxParty1                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cdtr,omitempty"`
	Dbtr            TaxParty2                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dbtr,omitempty"`
	UltmtDbtr       TaxParty2                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 UltmtDbtr,omitempty"`
	AdmstnZone      Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AdmstnZone,omitempty"`
	RefNb           Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RefNb,omitempty"`
	Mtd             Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Mtd,omitempty"`
	TtlTaxblBaseAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TtlTaxblBaseAmt,omitempty"`
	TtlTaxAmt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TtlTaxAmt,omitempty"`
	Dt              ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dt,omitempty"`
	SeqNb           float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SeqNb,omitempty"`
	Rcrd            []TaxRecord3                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Rcrd,omitempty"`
}

type TaxInformation10 struct {
	Cdtr            TaxParty1                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cdtr,omitempty"`
	Dbtr            TaxParty2                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dbtr,omitempty"`
	AdmstnZone      Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AdmstnZone,omitempty"`
	RefNb           Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RefNb,omitempty"`
	Mtd             Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Mtd,omitempty"`
	TtlTaxblBaseAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TtlTaxblBaseAmt,omitempty"`
	TtlTaxAmt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TtlTaxAmt,omitempty"`
	Dt              ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Dt,omitempty"`
	SeqNb           float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 SeqNb,omitempty"`
	Rcrd            []TaxRecord3                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Rcrd,omitempty"`
}

type TaxParty1 struct {
	TaxId  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxId,omitempty"`
	RegnId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RegnId,omitempty"`
	TaxTp  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxTp,omitempty"`
}

type TaxParty2 struct {
	TaxId   Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxId,omitempty"`
	RegnId  Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 RegnId,omitempty"`
	TaxTp   Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxTp,omitempty"`
	Authstn TaxAuthorisation1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Authstn,omitempty"`
}

type TaxPeriod3 struct {
	Yr     ISOYear              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Yr,omitempty"`
	Tp     TaxRecordPeriod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	FrToDt DatePeriod2          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FrToDt,omitempty"`
}

// May be one of ALPR, ALIT, GRSS
type TaxRateMarker1Code string

type TaxRecord3 struct {
	Tp       Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Tp,omitempty"`
	Ctgy     Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Ctgy,omitempty"`
	CtgyDtls Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CtgyDtls,omitempty"`
	DbtrSts  Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 DbtrSts,omitempty"`
	CertId   Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 CertId,omitempty"`
	FrmsCd   Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 FrmsCd,omitempty"`
	Prd      TaxPeriod3 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prd,omitempty"`
	TaxAmt   TaxAmount3 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TaxAmt,omitempty"`
	AddtlInf Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 AddtlInf,omitempty"`
}

type TaxRecordDetails3 struct {
	Prd TaxPeriod3                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prd,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Amt"`
}

// May be one of MM01, MM02, MM03, MM04, MM05, MM06, MM07, MM08, MM09, MM10, MM11, MM12, QTR1, QTR2, QTR3, QTR4, HLF1, HLF2
type TaxRecordPeriod1Code string

type TransferInstruction1 struct {
	TrfInd    bool        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 TrfInd,omitempty"`
	Cd        Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Cd"`
	Prtry     Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Prtry,omitempty"`
	StartDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 StartDtTm,omitempty"`
	StartDt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 StartDt,omitempty"`
	Desc      Max350Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.027.001.04 Desc,omitempty"`
}

// Must match the pattern [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
type UUIDv4Identifier string

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYear time.Time

func (t *xsdGYear) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006")
}
func (t xsdGYear) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006")
}
func (t xsdGYear) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYear) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
