// Code generated by download. DO NOT EDIT.

package iso20022_auth_060_001_01

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type AmountAndDirection102 struct {
	Amt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Amt"`
	Sgn bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Sgn"`
}

type AmountAndDirection86 struct {
	Amt float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Amt"`
	Sgn bool    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Sgn"`
}

type CCPDailyCashFlowsReportV01 struct {
	CncntrtnAgt []ConcentrationAgent1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 CncntrtnAgt"`
	SttlmAgt    []SettlementAgent1    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 SttlmAgt"`
	SplmtryData []SupplementaryData1  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 SplmtryData,omitempty"`
}

type ConcentrationAccount1 struct {
	InFlow      Flows1                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 InFlow"`
	OutFlow     Flows1                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 OutFlow"`
	EndOfDay    AmountAndDirection102   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 EndOfDay"`
	PeakCdt     ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 PeakCdt"`
	PeakDbt     ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 PeakDbt"`
	LatePmtConf Max10NumericText        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 LatePmtConf"`
}

type ConcentrationAgent1 struct {
	Id   LEIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Id"`
	Acct []ConcentrationAccount1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Acct"`
}

type Document struct {
	CCPDalyCshFlowsRpt CCPDailyCashFlowsReportV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 CCPDalyCshFlowsRpt"`
}

type Flows1 struct {
	PmtBkFlows   AmountAndDirection102 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 PmtBkFlows"`
	InvstmtFlows AmountAndDirection102 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 InvstmtFlows"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must match the pattern [0-9]{1,10}
type Max10NumericText string

// May be no more than 350 items long
type Max350Text string

type PaymentAccount1 struct {
	Ccy         ActiveCurrencyCode   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Ccy"`
	NetPmt      AmountAndDirection86 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 NetPmt"`
	LatePmtConf Max10NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 LatePmtConf"`
}

type SettlementAgent1 struct {
	Id   LEIIdentifier     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Id"`
	Acct []PaymentAccount1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Acct"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.060.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}
