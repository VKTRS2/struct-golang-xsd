// Code generated by download. DO NOT EDIT.

package iso20022_auth_059_001_01

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type AmountAndDirection102 struct {
	Amt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 Amt"`
	Sgn bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 Sgn"`
}

type CCPIncomeStatementAndCapitalAdequacyReportV01 struct {
	IncmStmt         IncomeStatement1              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 IncmStmt"`
	CptlRqrmnts      CapitalRequirement1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 CptlRqrmnts"`
	TtlCptl          ActiveCurrencyAndAmount       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 TtlCptl"`
	LqdFinRsrcs      ActiveCurrencyAndAmount       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 LqdFinRsrcs"`
	HpthtclCptlMeasr []HypotheticalCapitalMeasure1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 HpthtclCptlMeasr"`
	SplmtryData      []SupplementaryData1          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 SplmtryData,omitempty"`
}

type CapitalRequirement1 struct {
	WndgDwnOrRstrgRsk ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 WndgDwnOrRstrgRsk"`
	OprlAndLglRsk     ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 OprlAndLglRsk"`
	CdtRsk            ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 CdtRsk"`
	CntrPtyRsk        ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 CntrPtyRsk"`
	MktRsk            ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 MktRsk"`
	BizRsk            ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 BizRsk"`
	NtfctnBffr        float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 NtfctnBffr,omitempty"`
}

type Document struct {
	CCPIncmStmtAndCptlAdqcyRpt CCPIncomeStatementAndCapitalAdequacyReportV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 CCPIncmStmtAndCptlAdqcyRpt"`
}

type HypotheticalCapitalMeasure1 struct {
	Amt          ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 Amt"`
	DfltWtrfllId Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 DfltWtrfllId"`
}

type IncomeStatement1 struct {
	ClrFees          ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 ClrFees"`
	OthrOprgRvn      ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 OthrOprgRvn"`
	OprgExpnss       ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 OprgExpnss"`
	OprgPrftOrLoss   AmountAndDirection102   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 OprgPrftOrLoss"`
	NetIntrstIncm    ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 NetIntrstIncm"`
	OthrNonOprgRvn   ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 OthrNonOprgRvn"`
	NonOprgExpnss    ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 NonOprgExpnss"`
	PreTaxPrftOrLoss AmountAndDirection102   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 PreTaxPrftOrLoss"`
	PstTaxPrftOrLoss AmountAndDirection102   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 PstTaxPrftOrLoss"`
}

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.059.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}
