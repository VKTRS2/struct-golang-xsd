// Code generated by download. DO NOT EDIT.

package iso20022_camt_063_001_02

type AcknowledgementDetails1Choice struct {
	PayInSchdlRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 PayInSchdlRef,omitempty"`
	PayInCallRef  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 PayInCallRef,omitempty"`
}

type Document struct {
	PayInEvtAck PayInEventAcknowledgementV02 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 PayInEvtAck"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// May be no more than 350 items long
type Max350Text string

// May be no more than 35 items long
type Max35Text string

type PayInEventAcknowledgementV02 struct {
	MsgId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 MsgId"`
	SttlmSsnIdr Exact4AlphaNumericText        `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 SttlmSsnIdr,omitempty"`
	AckDtls     AcknowledgementDetails1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 AckDtls"`
	SplmtryData []SupplementaryData1          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 SplmtryData,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.063.001.02 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}
